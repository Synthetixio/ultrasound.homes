{"version":3,"file":"chunk/3498.cef65dcb.js","mappings":"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","sources":["webpack://@snx-v3/ultrasound/../../node_modules/@ethereumjs/tx/dist.browser/baseTransaction.js","webpack://@snx-v3/ultrasound/../../node_modules/@ethereumjs/tx/dist.browser/eip1559Transaction.js","webpack://@snx-v3/ultrasound/../../node_modules/@ethereumjs/tx/dist.browser/eip2930Transaction.js","webpack://@snx-v3/ultrasound/../../node_modules/@ethereumjs/tx/dist.browser/index.js","webpack://@snx-v3/ultrasound/../../node_modules/@ethereumjs/tx/dist.browser/legacyTransaction.js","webpack://@snx-v3/ultrasound/../../node_modules/@ethereumjs/tx/dist.browser/transactionFactory.js","webpack://@snx-v3/ultrasound/../../node_modules/@ethereumjs/tx/dist.browser/types.js","webpack://@snx-v3/ultrasound/../../node_modules/@ethereumjs/tx/dist.browser/util.js","webpack://@snx-v3/ultrasound/../../node_modules/@ethereumjs/tx/node_modules/@ethereumjs/common/dist.browser/chains/index.js","webpack://@snx-v3/ultrasound/../../node_modules/@ethereumjs/tx/node_modules/@ethereumjs/common/dist.browser/eips/index.js","webpack://@snx-v3/ultrasound/../../node_modules/@ethereumjs/tx/node_modules/@ethereumjs/common/dist.browser/hardforks/index.js","webpack://@snx-v3/ultrasound/../../node_modules/@ethereumjs/tx/node_modules/@ethereumjs/common/dist.browser/index.js","webpack://@snx-v3/ultrasound/../../node_modules/crc-32/crc32.js"],"sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BaseTransaction = void 0;\nvar common_1 = __importStar(require(\"@ethereumjs/common\"));\nvar ethereumjs_util_1 = require(\"ethereumjs-util\");\nvar types_1 = require(\"./types\");\n/**\n * This base class will likely be subject to further\n * refactoring along the introduction of additional tx types\n * on the Ethereum network.\n *\n * It is therefore not recommended to use directly.\n */\nvar BaseTransaction = /** @class */ (function () {\n    function BaseTransaction(txData, opts) {\n        this.cache = {\n            hash: undefined,\n            dataFee: undefined,\n        };\n        /**\n         * List of tx type defining EIPs,\n         * e.g. 1559 (fee market) and 2930 (access lists)\n         * for FeeMarketEIP1559Transaction objects\n         */\n        this.activeCapabilities = [];\n        /**\n         * The default chain the tx falls back to if no Common\n         * is provided and if the chain can't be derived from\n         * a passed in chainId (only EIP-2718 typed txs) or\n         * EIP-155 signature (legacy txs).\n         *\n         * @hidden\n         */\n        this.DEFAULT_CHAIN = common_1.Chain.Mainnet;\n        /**\n         * The default HF if the tx type is active on that HF\n         * or the first greater HF where the tx is active.\n         *\n         * @hidden\n         */\n        this.DEFAULT_HARDFORK = common_1.Hardfork.Istanbul;\n        var nonce = txData.nonce, gasLimit = txData.gasLimit, to = txData.to, value = txData.value, data = txData.data, v = txData.v, r = txData.r, s = txData.s, type = txData.type;\n        this._type = new ethereumjs_util_1.BN((0, ethereumjs_util_1.toBuffer)(type)).toNumber();\n        this.txOptions = opts;\n        var toB = (0, ethereumjs_util_1.toBuffer)(to === '' ? '0x' : to);\n        var vB = (0, ethereumjs_util_1.toBuffer)(v === '' ? '0x' : v);\n        var rB = (0, ethereumjs_util_1.toBuffer)(r === '' ? '0x' : r);\n        var sB = (0, ethereumjs_util_1.toBuffer)(s === '' ? '0x' : s);\n        this.nonce = new ethereumjs_util_1.BN((0, ethereumjs_util_1.toBuffer)(nonce === '' ? '0x' : nonce));\n        this.gasLimit = new ethereumjs_util_1.BN((0, ethereumjs_util_1.toBuffer)(gasLimit === '' ? '0x' : gasLimit));\n        this.to = toB.length > 0 ? new ethereumjs_util_1.Address(toB) : undefined;\n        this.value = new ethereumjs_util_1.BN((0, ethereumjs_util_1.toBuffer)(value === '' ? '0x' : value));\n        this.data = (0, ethereumjs_util_1.toBuffer)(data === '' ? '0x' : data);\n        this.v = vB.length > 0 ? new ethereumjs_util_1.BN(vB) : undefined;\n        this.r = rB.length > 0 ? new ethereumjs_util_1.BN(rB) : undefined;\n        this.s = sB.length > 0 ? new ethereumjs_util_1.BN(sB) : undefined;\n        this._validateCannotExceedMaxInteger({ value: this.value, r: this.r, s: this.s });\n        // geth limits gasLimit to 2^64-1\n        this._validateCannotExceedMaxInteger({ gasLimit: this.gasLimit }, 64);\n        // EIP-2681 limits nonce to 2^64-1 (cannot equal 2^64-1)\n        this._validateCannotExceedMaxInteger({ nonce: this.nonce }, 64, true);\n    }\n    Object.defineProperty(BaseTransaction.prototype, \"transactionType\", {\n        /**\n         * Alias for {@link BaseTransaction.type}\n         *\n         * @deprecated Use `type` instead\n         */\n        get: function () {\n            return this.type;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BaseTransaction.prototype, \"type\", {\n        /**\n         * Returns the transaction type.\n         *\n         * Note: legacy txs will return tx type `0`.\n         */\n        get: function () {\n            return this._type;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Checks if a tx type defining capability is active\n     * on a tx, for example the EIP-1559 fee market mechanism\n     * or the EIP-2930 access list feature.\n     *\n     * Note that this is different from the tx type itself,\n     * so EIP-2930 access lists can very well be active\n     * on an EIP-1559 tx for example.\n     *\n     * This method can be useful for feature checks if the\n     * tx type is unknown (e.g. when instantiated with\n     * the tx factory).\n     *\n     * See `Capabilites` in the `types` module for a reference\n     * on all supported capabilities.\n     */\n    BaseTransaction.prototype.supports = function (capability) {\n        return this.activeCapabilities.includes(capability);\n    };\n    BaseTransaction.prototype.validate = function (stringError) {\n        if (stringError === void 0) { stringError = false; }\n        var errors = [];\n        if (this.getBaseFee().gt(this.gasLimit)) {\n            errors.push(\"gasLimit is too low. given \".concat(this.gasLimit, \", need at least \").concat(this.getBaseFee()));\n        }\n        if (this.isSigned() && !this.verifySignature()) {\n            errors.push('Invalid Signature');\n        }\n        return stringError ? errors : errors.length === 0;\n    };\n    /**\n     * The minimum amount of gas the tx must have (DataFee + TxFee + Creation Fee)\n     */\n    BaseTransaction.prototype.getBaseFee = function () {\n        var fee = this.getDataFee().addn(this.common.param('gasPrices', 'tx'));\n        if (this.common.gteHardfork('homestead') && this.toCreationAddress()) {\n            fee.iaddn(this.common.param('gasPrices', 'txCreation'));\n        }\n        return fee;\n    };\n    /**\n     * The amount of gas paid for the data in this tx\n     */\n    BaseTransaction.prototype.getDataFee = function () {\n        var txDataZero = this.common.param('gasPrices', 'txDataZero');\n        var txDataNonZero = this.common.param('gasPrices', 'txDataNonZero');\n        var cost = 0;\n        for (var i = 0; i < this.data.length; i++) {\n            this.data[i] === 0 ? (cost += txDataZero) : (cost += txDataNonZero);\n        }\n        cost = new ethereumjs_util_1.BN(cost);\n        if ((this.to === undefined || this.to === null) && this.common.isActivatedEIP(3860)) {\n            var dataLength = Math.ceil(this.data.length / 32);\n            var initCodeCost = new ethereumjs_util_1.BN(this.common.param('gasPrices', 'initCodeWordCost')).imuln(dataLength);\n            cost.iadd(initCodeCost);\n        }\n        return cost;\n    };\n    /**\n     * If the tx's `to` is to the creation address\n     */\n    BaseTransaction.prototype.toCreationAddress = function () {\n        return this.to === undefined || this.to.buf.length === 0;\n    };\n    BaseTransaction.prototype.isSigned = function () {\n        var _a = this, v = _a.v, r = _a.r, s = _a.s;\n        if (this.type === 0) {\n            if (!v || !r || !s) {\n                return false;\n            }\n            else {\n                return true;\n            }\n        }\n        else {\n            if (v === undefined || !r || !s) {\n                return false;\n            }\n            else {\n                return true;\n            }\n        }\n    };\n    /**\n     * Determines if the signature is valid\n     */\n    BaseTransaction.prototype.verifySignature = function () {\n        try {\n            // Main signature verification is done in `getSenderPublicKey()`\n            var publicKey = this.getSenderPublicKey();\n            return (0, ethereumjs_util_1.unpadBuffer)(publicKey).length !== 0;\n        }\n        catch (e) {\n            return false;\n        }\n    };\n    /**\n     * Returns the sender's address\n     */\n    BaseTransaction.prototype.getSenderAddress = function () {\n        return new ethereumjs_util_1.Address((0, ethereumjs_util_1.publicToAddress)(this.getSenderPublicKey()));\n    };\n    /**\n     * Signs a transaction.\n     *\n     * Note that the signed tx is returned as a new object,\n     * use as follows:\n     * ```javascript\n     * const signedTx = tx.sign(privateKey)\n     * ```\n     */\n    BaseTransaction.prototype.sign = function (privateKey) {\n        if (privateKey.length !== 32) {\n            var msg = this._errorMsg('Private key must be 32 bytes in length.');\n            throw new Error(msg);\n        }\n        // Hack for the constellation that we have got a legacy tx after spuriousDragon with a non-EIP155 conforming signature\n        // and want to recreate a signature (where EIP155 should be applied)\n        // Leaving this hack lets the legacy.spec.ts -> sign(), verifySignature() test fail\n        // 2021-06-23\n        var hackApplied = false;\n        if (this.type === 0 &&\n            this.common.gteHardfork('spuriousDragon') &&\n            !this.supports(types_1.Capability.EIP155ReplayProtection)) {\n            this.activeCapabilities.push(types_1.Capability.EIP155ReplayProtection);\n            hackApplied = true;\n        }\n        var msgHash = this.getMessageToSign(true);\n        var _a = (0, ethereumjs_util_1.ecsign)(msgHash, privateKey), v = _a.v, r = _a.r, s = _a.s;\n        var tx = this._processSignature(v, r, s);\n        // Hack part 2\n        if (hackApplied) {\n            var index = this.activeCapabilities.indexOf(types_1.Capability.EIP155ReplayProtection);\n            if (index > -1) {\n                this.activeCapabilities.splice(index, 1);\n            }\n        }\n        return tx;\n    };\n    /**\n     * Does chain ID checks on common and returns a common\n     * to be used on instantiation\n     * @hidden\n     *\n     * @param common - {@link Common} instance from tx options\n     * @param chainId - Chain ID from tx options (typed txs) or signature (legacy tx)\n     */\n    BaseTransaction.prototype._getCommon = function (common, chainId) {\n        var _a;\n        // Chain ID provided\n        if (chainId) {\n            var chainIdBN = new ethereumjs_util_1.BN((0, ethereumjs_util_1.toBuffer)(chainId));\n            if (common) {\n                if (!common.chainIdBN().eq(chainIdBN)) {\n                    var msg = this._errorMsg('The chain ID does not match the chain ID of Common');\n                    throw new Error(msg);\n                }\n                // Common provided, chain ID does match\n                // -> Return provided Common\n                return common.copy();\n            }\n            else {\n                if (common_1.default.isSupportedChainId(chainIdBN)) {\n                    // No Common, chain ID supported by Common\n                    // -> Instantiate Common with chain ID\n                    return new common_1.default({ chain: chainIdBN, hardfork: this.DEFAULT_HARDFORK });\n                }\n                else {\n                    // No Common, chain ID not supported by Common\n                    // -> Instantiate custom Common derived from DEFAULT_CHAIN\n                    return common_1.default.forCustomChain(this.DEFAULT_CHAIN, {\n                        name: 'custom-chain',\n                        networkId: chainIdBN,\n                        chainId: chainIdBN,\n                    }, this.DEFAULT_HARDFORK);\n                }\n            }\n        }\n        else {\n            // No chain ID provided\n            // -> return Common provided or create new default Common\n            return ((_a = common === null || common === void 0 ? void 0 : common.copy()) !== null && _a !== void 0 ? _a : new common_1.default({ chain: this.DEFAULT_CHAIN, hardfork: this.DEFAULT_HARDFORK }));\n        }\n    };\n    /**\n     * Validates that an object with BN values cannot exceed the specified bit limit.\n     * @param values Object containing string keys and BN values\n     * @param bits Number of bits to check (64 or 256)\n     * @param cannotEqual Pass true if the number also cannot equal one less the maximum value\n     */\n    BaseTransaction.prototype._validateCannotExceedMaxInteger = function (values, bits, cannotEqual) {\n        var e_1, _a;\n        if (bits === void 0) { bits = 256; }\n        if (cannotEqual === void 0) { cannotEqual = false; }\n        try {\n            for (var _b = __values(Object.entries(values)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var _d = __read(_c.value, 2), key = _d[0], value = _d[1];\n                switch (bits) {\n                    case 64:\n                        if (cannotEqual) {\n                            if (value === null || value === void 0 ? void 0 : value.gte(ethereumjs_util_1.MAX_UINT64)) {\n                                var msg = this._errorMsg(\"\".concat(key, \" cannot equal or exceed MAX_UINT64 (2^64-1), given \").concat(value));\n                                throw new Error(msg);\n                            }\n                        }\n                        else {\n                            if (value === null || value === void 0 ? void 0 : value.gt(ethereumjs_util_1.MAX_UINT64)) {\n                                var msg = this._errorMsg(\"\".concat(key, \" cannot exceed MAX_UINT64 (2^64-1), given \").concat(value));\n                                throw new Error(msg);\n                            }\n                        }\n                        break;\n                    case 256:\n                        if (cannotEqual) {\n                            if (value === null || value === void 0 ? void 0 : value.gte(ethereumjs_util_1.MAX_INTEGER)) {\n                                var msg = this._errorMsg(\"\".concat(key, \" cannot equal or exceed MAX_INTEGER (2^256-1), given \").concat(value));\n                                throw new Error(msg);\n                            }\n                        }\n                        else {\n                            if (value === null || value === void 0 ? void 0 : value.gt(ethereumjs_util_1.MAX_INTEGER)) {\n                                var msg = this._errorMsg(\"\".concat(key, \" cannot exceed MAX_INTEGER (2^256-1), given \").concat(value));\n                                throw new Error(msg);\n                            }\n                        }\n                        break;\n                    default: {\n                        var msg = this._errorMsg('unimplemented bits value');\n                        throw new Error(msg);\n                    }\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n    };\n    /**\n     * Returns the shared error postfix part for _error() method\n     * tx type implementations.\n     */\n    BaseTransaction.prototype._getSharedErrorPostfix = function () {\n        var hash = '';\n        try {\n            hash = this.isSigned() ? (0, ethereumjs_util_1.bufferToHex)(this.hash()) : 'not available (unsigned)';\n        }\n        catch (e) {\n            hash = 'error';\n        }\n        var isSigned = '';\n        try {\n            isSigned = this.isSigned().toString();\n        }\n        catch (e) {\n            hash = 'error';\n        }\n        var hf = '';\n        try {\n            hf = this.common.hardfork();\n        }\n        catch (e) {\n            hf = 'error';\n        }\n        var postfix = \"tx type=\".concat(this.type, \" hash=\").concat(hash, \" nonce=\").concat(this.nonce, \" value=\").concat(this.value, \" \");\n        postfix += \"signed=\".concat(isSigned, \" hf=\").concat(hf);\n        return postfix;\n    };\n    return BaseTransaction;\n}());\nexports.BaseTransaction = BaseTransaction;\n//# sourceMappingURL=baseTransaction.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ethereumjs_util_1 = require(\"ethereumjs-util\");\nvar baseTransaction_1 = require(\"./baseTransaction\");\nvar types_1 = require(\"./types\");\nvar util_1 = require(\"./util\");\nvar TRANSACTION_TYPE = 2;\nvar TRANSACTION_TYPE_BUFFER = Buffer.from(TRANSACTION_TYPE.toString(16).padStart(2, '0'), 'hex');\n/**\n * Typed transaction with a new gas fee market mechanism\n *\n * - TransactionType: 2\n * - EIP: [EIP-1559](https://eips.ethereum.org/EIPS/eip-1559)\n */\nvar FeeMarketEIP1559Transaction = /** @class */ (function (_super) {\n    __extends(FeeMarketEIP1559Transaction, _super);\n    /**\n     * This constructor takes the values, validates them, assigns them and freezes the object.\n     *\n     * It is not recommended to use this constructor directly. Instead use\n     * the static factory methods to assist in creating a Transaction object from\n     * varying data types.\n     */\n    function FeeMarketEIP1559Transaction(txData, opts) {\n        if (opts === void 0) { opts = {}; }\n        var _this = this;\n        var _a, _b;\n        _this = _super.call(this, __assign(__assign({}, txData), { type: TRANSACTION_TYPE }), opts) || this;\n        /**\n         * The default HF if the tx type is active on that HF\n         * or the first greater HF where the tx is active.\n         *\n         * @hidden\n         */\n        _this.DEFAULT_HARDFORK = 'london';\n        var chainId = txData.chainId, accessList = txData.accessList, maxFeePerGas = txData.maxFeePerGas, maxPriorityFeePerGas = txData.maxPriorityFeePerGas;\n        _this.common = _this._getCommon(opts.common, chainId);\n        _this.chainId = _this.common.chainIdBN();\n        if (!_this.common.isActivatedEIP(1559)) {\n            throw new Error('EIP-1559 not enabled on Common');\n        }\n        _this.activeCapabilities = _this.activeCapabilities.concat([1559, 2718, 2930]);\n        // Populate the access list fields\n        var accessListData = util_1.AccessLists.getAccessListData(accessList !== null && accessList !== void 0 ? accessList : []);\n        _this.accessList = accessListData.accessList;\n        _this.AccessListJSON = accessListData.AccessListJSON;\n        // Verify the access list format.\n        util_1.AccessLists.verifyAccessList(_this.accessList);\n        _this.maxFeePerGas = new ethereumjs_util_1.BN((0, ethereumjs_util_1.toBuffer)(maxFeePerGas === '' ? '0x' : maxFeePerGas));\n        _this.maxPriorityFeePerGas = new ethereumjs_util_1.BN((0, ethereumjs_util_1.toBuffer)(maxPriorityFeePerGas === '' ? '0x' : maxPriorityFeePerGas));\n        _this._validateCannotExceedMaxInteger({\n            maxFeePerGas: _this.maxFeePerGas,\n            maxPriorityFeePerGas: _this.maxPriorityFeePerGas,\n        });\n        if (_this.gasLimit.mul(_this.maxFeePerGas).gt(ethereumjs_util_1.MAX_INTEGER)) {\n            var msg = _this._errorMsg('gasLimit * maxFeePerGas cannot exceed MAX_INTEGER (2^256-1)');\n            throw new Error(msg);\n        }\n        if (_this.maxFeePerGas.lt(_this.maxPriorityFeePerGas)) {\n            var msg = _this._errorMsg('maxFeePerGas cannot be less than maxPriorityFeePerGas (The total must be the larger of the two)');\n            throw new Error(msg);\n        }\n        if (_this.v && !_this.v.eqn(0) && !_this.v.eqn(1)) {\n            var msg = _this._errorMsg('The y-parity of the transaction should either be 0 or 1');\n            throw new Error(msg);\n        }\n        if (_this.common.gteHardfork('homestead') && ((_a = _this.s) === null || _a === void 0 ? void 0 : _a.gt(types_1.N_DIV_2))) {\n            var msg = _this._errorMsg('Invalid Signature: s-values greater than secp256k1n/2 are considered invalid');\n            throw new Error(msg);\n        }\n        if (_this.common.isActivatedEIP(3860)) {\n            (0, util_1.checkMaxInitCodeSize)(_this.common, _this.data.length);\n        }\n        var freeze = (_b = opts === null || opts === void 0 ? void 0 : opts.freeze) !== null && _b !== void 0 ? _b : true;\n        if (freeze) {\n            Object.freeze(_this);\n        }\n        return _this;\n    }\n    Object.defineProperty(FeeMarketEIP1559Transaction.prototype, \"senderR\", {\n        /**\n         * EIP-2930 alias for `r`\n         *\n         * @deprecated use `r` instead\n         */\n        get: function () {\n            return this.r;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(FeeMarketEIP1559Transaction.prototype, \"senderS\", {\n        /**\n         * EIP-2930 alias for `s`\n         *\n         * @deprecated use `s` instead\n         */\n        get: function () {\n            return this.s;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(FeeMarketEIP1559Transaction.prototype, \"yParity\", {\n        /**\n         * EIP-2930 alias for `v`\n         *\n         * @deprecated use `v` instead\n         */\n        get: function () {\n            return this.v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Instantiate a transaction from a data dictionary.\n     *\n     * Format: { chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,\n     * accessList, v, r, s }\n     *\n     * Notes:\n     * - `chainId` will be set automatically if not provided\n     * - All parameters are optional and have some basic default values\n     */\n    FeeMarketEIP1559Transaction.fromTxData = function (txData, opts) {\n        if (opts === void 0) { opts = {}; }\n        return new FeeMarketEIP1559Transaction(txData, opts);\n    };\n    /**\n     * Instantiate a transaction from the serialized tx.\n     *\n     * Format: `0x02 || rlp([chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,\n     * accessList, signatureYParity, signatureR, signatureS])`\n     */\n    FeeMarketEIP1559Transaction.fromSerializedTx = function (serialized, opts) {\n        if (opts === void 0) { opts = {}; }\n        if (!serialized.slice(0, 1).equals(TRANSACTION_TYPE_BUFFER)) {\n            throw new Error(\"Invalid serialized tx input: not an EIP-1559 transaction (wrong tx type, expected: \".concat(TRANSACTION_TYPE, \", received: \").concat(serialized\n                .slice(0, 1)\n                .toString('hex')));\n        }\n        var values = ethereumjs_util_1.rlp.decode(serialized.slice(1));\n        if (!Array.isArray(values)) {\n            throw new Error('Invalid serialized tx input: must be array');\n        }\n        return FeeMarketEIP1559Transaction.fromValuesArray(values, opts);\n    };\n    /**\n     * Instantiate a transaction from the serialized tx.\n     * (alias of {@link FeeMarketEIP1559Transaction.fromSerializedTx})\n     *\n     * Note: This means that the Buffer should start with 0x01.\n     *\n     * @deprecated this constructor alias is deprecated and will be removed\n     * in favor of the {@link FeeMarketEIP1559Transaction.fromSerializedTx} constructor\n     */\n    FeeMarketEIP1559Transaction.fromRlpSerializedTx = function (serialized, opts) {\n        if (opts === void 0) { opts = {}; }\n        return FeeMarketEIP1559Transaction.fromSerializedTx(serialized, opts);\n    };\n    /**\n     * Create a transaction from a values array.\n     *\n     * Format: `[chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,\n     * accessList, signatureYParity, signatureR, signatureS]`\n     */\n    FeeMarketEIP1559Transaction.fromValuesArray = function (values, opts) {\n        if (opts === void 0) { opts = {}; }\n        if (values.length !== 9 && values.length !== 12) {\n            throw new Error('Invalid EIP-1559 transaction. Only expecting 9 values (for unsigned tx) or 12 values (for signed tx).');\n        }\n        var _a = __read(values, 12), chainId = _a[0], nonce = _a[1], maxPriorityFeePerGas = _a[2], maxFeePerGas = _a[3], gasLimit = _a[4], to = _a[5], value = _a[6], data = _a[7], accessList = _a[8], v = _a[9], r = _a[10], s = _a[11];\n        (0, ethereumjs_util_1.validateNoLeadingZeroes)({ nonce: nonce, maxPriorityFeePerGas: maxPriorityFeePerGas, maxFeePerGas: maxFeePerGas, gasLimit: gasLimit, value: value, v: v, r: r, s: s });\n        return new FeeMarketEIP1559Transaction({\n            chainId: new ethereumjs_util_1.BN(chainId),\n            nonce: nonce,\n            maxPriorityFeePerGas: maxPriorityFeePerGas,\n            maxFeePerGas: maxFeePerGas,\n            gasLimit: gasLimit,\n            to: to,\n            value: value,\n            data: data,\n            accessList: accessList !== null && accessList !== void 0 ? accessList : [],\n            v: v !== undefined ? new ethereumjs_util_1.BN(v) : undefined,\n            r: r,\n            s: s,\n        }, opts);\n    };\n    /**\n     * The amount of gas paid for the data in this tx\n     */\n    FeeMarketEIP1559Transaction.prototype.getDataFee = function () {\n        if (this.cache.dataFee && this.cache.dataFee.hardfork === this.common.hardfork()) {\n            return this.cache.dataFee.value;\n        }\n        var cost = _super.prototype.getDataFee.call(this);\n        cost.iaddn(util_1.AccessLists.getDataFeeEIP2930(this.accessList, this.common));\n        if (Object.isFrozen(this)) {\n            this.cache.dataFee = {\n                value: cost,\n                hardfork: this.common.hardfork(),\n            };\n        }\n        return cost;\n    };\n    /**\n     * The up front amount that an account must have for this transaction to be valid\n     * @param baseFee The base fee of the block (will be set to 0 if not provided)\n     */\n    FeeMarketEIP1559Transaction.prototype.getUpfrontCost = function (baseFee) {\n        if (baseFee === void 0) { baseFee = new ethereumjs_util_1.BN(0); }\n        var inclusionFeePerGas = ethereumjs_util_1.BN.min(this.maxPriorityFeePerGas, this.maxFeePerGas.sub(baseFee));\n        var gasPrice = inclusionFeePerGas.add(baseFee);\n        return this.gasLimit.mul(gasPrice).add(this.value);\n    };\n    /**\n     * Returns a Buffer Array of the raw Buffers of the EIP-1559 transaction, in order.\n     *\n     * Format: `[chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,\n     * accessList, signatureYParity, signatureR, signatureS]`\n     *\n     * Use {@link FeeMarketEIP1559Transaction.serialize} to add a transaction to a block\n     * with {@link Block.fromValuesArray}.\n     *\n     * For an unsigned tx this method uses the empty Buffer values for the\n     * signature parameters `v`, `r` and `s` for encoding. For an EIP-155 compliant\n     * representation for external signing use {@link FeeMarketEIP1559Transaction.getMessageToSign}.\n     */\n    FeeMarketEIP1559Transaction.prototype.raw = function () {\n        return [\n            (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.chainId),\n            (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.nonce),\n            (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.maxPriorityFeePerGas),\n            (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.maxFeePerGas),\n            (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.gasLimit),\n            this.to !== undefined ? this.to.buf : Buffer.from([]),\n            (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.value),\n            this.data,\n            this.accessList,\n            this.v !== undefined ? (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.v) : Buffer.from([]),\n            this.r !== undefined ? (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.r) : Buffer.from([]),\n            this.s !== undefined ? (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.s) : Buffer.from([]),\n        ];\n    };\n    /**\n     * Returns the serialized encoding of the EIP-1559 transaction.\n     *\n     * Format: `0x02 || rlp([chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,\n     * accessList, signatureYParity, signatureR, signatureS])`\n     *\n     * Note that in contrast to the legacy tx serialization format this is not\n     * valid RLP any more due to the raw tx type preceding and concatenated to\n     * the RLP encoding of the values.\n     */\n    FeeMarketEIP1559Transaction.prototype.serialize = function () {\n        var base = this.raw();\n        return Buffer.concat([TRANSACTION_TYPE_BUFFER, ethereumjs_util_1.rlp.encode(base)]);\n    };\n    /**\n     * Returns the serialized unsigned tx (hashed or raw), which can be used\n     * to sign the transaction (e.g. for sending to a hardware wallet).\n     *\n     * Note: in contrast to the legacy tx the raw message format is already\n     * serialized and doesn't need to be RLP encoded any more.\n     *\n     * ```javascript\n     * const serializedMessage = tx.getMessageToSign(false) // use this for the HW wallet input\n     * ```\n     *\n     * @param hashMessage - Return hashed message if set to true (default: true)\n     */\n    FeeMarketEIP1559Transaction.prototype.getMessageToSign = function (hashMessage) {\n        if (hashMessage === void 0) { hashMessage = true; }\n        var base = this.raw().slice(0, 9);\n        var message = Buffer.concat([TRANSACTION_TYPE_BUFFER, ethereumjs_util_1.rlp.encode(base)]);\n        if (hashMessage) {\n            return (0, ethereumjs_util_1.keccak256)(message);\n        }\n        else {\n            return message;\n        }\n    };\n    /**\n     * Computes a sha3-256 hash of the serialized tx.\n     *\n     * This method can only be used for signed txs (it throws otherwise).\n     * Use {@link FeeMarketEIP1559Transaction.getMessageToSign} to get a tx hash for the purpose of signing.\n     */\n    FeeMarketEIP1559Transaction.prototype.hash = function () {\n        if (!this.isSigned()) {\n            var msg = this._errorMsg('Cannot call hash method if transaction is not signed');\n            throw new Error(msg);\n        }\n        if (Object.isFrozen(this)) {\n            if (!this.cache.hash) {\n                this.cache.hash = (0, ethereumjs_util_1.keccak256)(this.serialize());\n            }\n            return this.cache.hash;\n        }\n        return (0, ethereumjs_util_1.keccak256)(this.serialize());\n    };\n    /**\n     * Computes a sha3-256 hash which can be used to verify the signature\n     */\n    FeeMarketEIP1559Transaction.prototype.getMessageToVerifySignature = function () {\n        return this.getMessageToSign();\n    };\n    /**\n     * Returns the public key of the sender\n     */\n    FeeMarketEIP1559Transaction.prototype.getSenderPublicKey = function () {\n        var _a;\n        if (!this.isSigned()) {\n            var msg = this._errorMsg('Cannot call this method if transaction is not signed');\n            throw new Error(msg);\n        }\n        var msgHash = this.getMessageToVerifySignature();\n        // EIP-2: All transaction signatures whose s-value is greater than secp256k1n/2 are considered invalid.\n        // Reasoning: https://ethereum.stackexchange.com/a/55728\n        if (this.common.gteHardfork('homestead') && ((_a = this.s) === null || _a === void 0 ? void 0 : _a.gt(types_1.N_DIV_2))) {\n            var msg = this._errorMsg('Invalid Signature: s-values greater than secp256k1n/2 are considered invalid');\n            throw new Error(msg);\n        }\n        var _b = this, v = _b.v, r = _b.r, s = _b.s;\n        try {\n            return (0, ethereumjs_util_1.ecrecover)(msgHash, v.addn(27), // Recover the 27 which was stripped from ecsign\n            (0, ethereumjs_util_1.bnToUnpaddedBuffer)(r), (0, ethereumjs_util_1.bnToUnpaddedBuffer)(s));\n        }\n        catch (e) {\n            var msg = this._errorMsg('Invalid Signature');\n            throw new Error(msg);\n        }\n    };\n    FeeMarketEIP1559Transaction.prototype._processSignature = function (v, r, s) {\n        var opts = __assign(__assign({}, this.txOptions), { common: this.common });\n        return FeeMarketEIP1559Transaction.fromTxData({\n            chainId: this.chainId,\n            nonce: this.nonce,\n            maxPriorityFeePerGas: this.maxPriorityFeePerGas,\n            maxFeePerGas: this.maxFeePerGas,\n            gasLimit: this.gasLimit,\n            to: this.to,\n            value: this.value,\n            data: this.data,\n            accessList: this.accessList,\n            v: new ethereumjs_util_1.BN(v - 27),\n            r: new ethereumjs_util_1.BN(r),\n            s: new ethereumjs_util_1.BN(s),\n        }, opts);\n    };\n    /**\n     * Returns an object with the JSON representation of the transaction\n     */\n    FeeMarketEIP1559Transaction.prototype.toJSON = function () {\n        var accessListJSON = util_1.AccessLists.getAccessListJSON(this.accessList);\n        return {\n            chainId: (0, ethereumjs_util_1.bnToHex)(this.chainId),\n            nonce: (0, ethereumjs_util_1.bnToHex)(this.nonce),\n            maxPriorityFeePerGas: (0, ethereumjs_util_1.bnToHex)(this.maxPriorityFeePerGas),\n            maxFeePerGas: (0, ethereumjs_util_1.bnToHex)(this.maxFeePerGas),\n            gasLimit: (0, ethereumjs_util_1.bnToHex)(this.gasLimit),\n            to: this.to !== undefined ? this.to.toString() : undefined,\n            value: (0, ethereumjs_util_1.bnToHex)(this.value),\n            data: '0x' + this.data.toString('hex'),\n            accessList: accessListJSON,\n            v: this.v !== undefined ? (0, ethereumjs_util_1.bnToHex)(this.v) : undefined,\n            r: this.r !== undefined ? (0, ethereumjs_util_1.bnToHex)(this.r) : undefined,\n            s: this.s !== undefined ? (0, ethereumjs_util_1.bnToHex)(this.s) : undefined,\n        };\n    };\n    /**\n     * Return a compact error string representation of the object\n     */\n    FeeMarketEIP1559Transaction.prototype.errorStr = function () {\n        var errorStr = this._getSharedErrorPostfix();\n        errorStr += \" maxFeePerGas=\".concat(this.maxFeePerGas, \" maxPriorityFeePerGas=\").concat(this.maxPriorityFeePerGas);\n        return errorStr;\n    };\n    /**\n     * Internal helper function to create an annotated error message\n     *\n     * @param msg Base error message\n     * @hidden\n     */\n    FeeMarketEIP1559Transaction.prototype._errorMsg = function (msg) {\n        return \"\".concat(msg, \" (\").concat(this.errorStr(), \")\");\n    };\n    return FeeMarketEIP1559Transaction;\n}(baseTransaction_1.BaseTransaction));\nexports.default = FeeMarketEIP1559Transaction;\n//# sourceMappingURL=eip1559Transaction.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ethereumjs_util_1 = require(\"ethereumjs-util\");\nvar baseTransaction_1 = require(\"./baseTransaction\");\nvar types_1 = require(\"./types\");\nvar util_1 = require(\"./util\");\nvar TRANSACTION_TYPE = 1;\nvar TRANSACTION_TYPE_BUFFER = Buffer.from(TRANSACTION_TYPE.toString(16).padStart(2, '0'), 'hex');\n/**\n * Typed transaction with optional access lists\n *\n * - TransactionType: 1\n * - EIP: [EIP-2930](https://eips.ethereum.org/EIPS/eip-2930)\n */\nvar AccessListEIP2930Transaction = /** @class */ (function (_super) {\n    __extends(AccessListEIP2930Transaction, _super);\n    /**\n     * This constructor takes the values, validates them, assigns them and freezes the object.\n     *\n     * It is not recommended to use this constructor directly. Instead use\n     * the static factory methods to assist in creating a Transaction object from\n     * varying data types.\n     */\n    function AccessListEIP2930Transaction(txData, opts) {\n        if (opts === void 0) { opts = {}; }\n        var _this = this;\n        var _a, _b;\n        _this = _super.call(this, __assign(__assign({}, txData), { type: TRANSACTION_TYPE }), opts) || this;\n        /**\n         * The default HF if the tx type is active on that HF\n         * or the first greater HF where the tx is active.\n         *\n         * @hidden\n         */\n        _this.DEFAULT_HARDFORK = 'berlin';\n        var chainId = txData.chainId, accessList = txData.accessList, gasPrice = txData.gasPrice;\n        _this.common = _this._getCommon(opts.common, chainId);\n        _this.chainId = _this.common.chainIdBN();\n        // EIP-2718 check is done in Common\n        if (!_this.common.isActivatedEIP(2930)) {\n            throw new Error('EIP-2930 not enabled on Common');\n        }\n        _this.activeCapabilities = _this.activeCapabilities.concat([2718, 2930]);\n        // Populate the access list fields\n        var accessListData = util_1.AccessLists.getAccessListData(accessList !== null && accessList !== void 0 ? accessList : []);\n        _this.accessList = accessListData.accessList;\n        _this.AccessListJSON = accessListData.AccessListJSON;\n        // Verify the access list format.\n        util_1.AccessLists.verifyAccessList(_this.accessList);\n        _this.gasPrice = new ethereumjs_util_1.BN((0, ethereumjs_util_1.toBuffer)(gasPrice === '' ? '0x' : gasPrice));\n        _this._validateCannotExceedMaxInteger({\n            gasPrice: _this.gasPrice,\n        });\n        if (_this.gasPrice.mul(_this.gasLimit).gt(ethereumjs_util_1.MAX_INTEGER)) {\n            var msg = _this._errorMsg('gasLimit * gasPrice cannot exceed MAX_INTEGER');\n            throw new Error(msg);\n        }\n        if (_this.v && !_this.v.eqn(0) && !_this.v.eqn(1)) {\n            var msg = _this._errorMsg('The y-parity of the transaction should either be 0 or 1');\n            throw new Error(msg);\n        }\n        if (_this.common.gteHardfork('homestead') && ((_a = _this.s) === null || _a === void 0 ? void 0 : _a.gt(types_1.N_DIV_2))) {\n            var msg = _this._errorMsg('Invalid Signature: s-values greater than secp256k1n/2 are considered invalid');\n            throw new Error(msg);\n        }\n        if (_this.common.isActivatedEIP(3860)) {\n            (0, util_1.checkMaxInitCodeSize)(_this.common, _this.data.length);\n        }\n        var freeze = (_b = opts === null || opts === void 0 ? void 0 : opts.freeze) !== null && _b !== void 0 ? _b : true;\n        if (freeze) {\n            Object.freeze(_this);\n        }\n        return _this;\n    }\n    Object.defineProperty(AccessListEIP2930Transaction.prototype, \"senderR\", {\n        /**\n         * EIP-2930 alias for `r`\n         *\n         * @deprecated use `r` instead\n         */\n        get: function () {\n            return this.r;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(AccessListEIP2930Transaction.prototype, \"senderS\", {\n        /**\n         * EIP-2930 alias for `s`\n         *\n         * @deprecated use `s` instead\n         */\n        get: function () {\n            return this.s;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(AccessListEIP2930Transaction.prototype, \"yParity\", {\n        /**\n         * EIP-2930 alias for `v`\n         *\n         * @deprecated use `v` instead\n         */\n        get: function () {\n            return this.v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Instantiate a transaction from a data dictionary.\n     *\n     * Format: { chainId, nonce, gasPrice, gasLimit, to, value, data, accessList,\n     * v, r, s }\n     *\n     * Notes:\n     * - `chainId` will be set automatically if not provided\n     * - All parameters are optional and have some basic default values\n     */\n    AccessListEIP2930Transaction.fromTxData = function (txData, opts) {\n        if (opts === void 0) { opts = {}; }\n        return new AccessListEIP2930Transaction(txData, opts);\n    };\n    /**\n     * Instantiate a transaction from the serialized tx.\n     *\n     * Format: `0x01 || rlp([chainId, nonce, gasPrice, gasLimit, to, value, data, accessList,\n     * signatureYParity (v), signatureR (r), signatureS (s)])`\n     */\n    AccessListEIP2930Transaction.fromSerializedTx = function (serialized, opts) {\n        if (opts === void 0) { opts = {}; }\n        if (!serialized.slice(0, 1).equals(TRANSACTION_TYPE_BUFFER)) {\n            throw new Error(\"Invalid serialized tx input: not an EIP-2930 transaction (wrong tx type, expected: \".concat(TRANSACTION_TYPE, \", received: \").concat(serialized\n                .slice(0, 1)\n                .toString('hex')));\n        }\n        var values = ethereumjs_util_1.rlp.decode(serialized.slice(1));\n        if (!Array.isArray(values)) {\n            throw new Error('Invalid serialized tx input: must be array');\n        }\n        return AccessListEIP2930Transaction.fromValuesArray(values, opts);\n    };\n    /**\n     * Instantiate a transaction from the serialized tx.\n     * (alias of {@link AccessListEIP2930Transaction.fromSerializedTx})\n     *\n     * Note: This means that the Buffer should start with 0x01.\n     *\n     * @deprecated this constructor alias is deprecated and will be removed\n     * in favor of the {@link AccessListEIP2930Transaction.fromSerializedTx} constructor\n     */\n    AccessListEIP2930Transaction.fromRlpSerializedTx = function (serialized, opts) {\n        if (opts === void 0) { opts = {}; }\n        return AccessListEIP2930Transaction.fromSerializedTx(serialized, opts);\n    };\n    /**\n     * Create a transaction from a values array.\n     *\n     * Format: `[chainId, nonce, gasPrice, gasLimit, to, value, data, accessList,\n     * signatureYParity (v), signatureR (r), signatureS (s)]`\n     */\n    AccessListEIP2930Transaction.fromValuesArray = function (values, opts) {\n        if (opts === void 0) { opts = {}; }\n        if (values.length !== 8 && values.length !== 11) {\n            throw new Error('Invalid EIP-2930 transaction. Only expecting 8 values (for unsigned tx) or 11 values (for signed tx).');\n        }\n        var _a = __read(values, 11), chainId = _a[0], nonce = _a[1], gasPrice = _a[2], gasLimit = _a[3], to = _a[4], value = _a[5], data = _a[6], accessList = _a[7], v = _a[8], r = _a[9], s = _a[10];\n        (0, ethereumjs_util_1.validateNoLeadingZeroes)({ nonce: nonce, gasPrice: gasPrice, gasLimit: gasLimit, value: value, v: v, r: r, s: s });\n        var emptyAccessList = [];\n        return new AccessListEIP2930Transaction({\n            chainId: new ethereumjs_util_1.BN(chainId),\n            nonce: nonce,\n            gasPrice: gasPrice,\n            gasLimit: gasLimit,\n            to: to,\n            value: value,\n            data: data,\n            accessList: accessList !== null && accessList !== void 0 ? accessList : emptyAccessList,\n            v: v !== undefined ? new ethereumjs_util_1.BN(v) : undefined,\n            r: r,\n            s: s,\n        }, opts);\n    };\n    /**\n     * The amount of gas paid for the data in this tx\n     */\n    AccessListEIP2930Transaction.prototype.getDataFee = function () {\n        if (this.cache.dataFee && this.cache.dataFee.hardfork === this.common.hardfork()) {\n            return this.cache.dataFee.value;\n        }\n        var cost = _super.prototype.getDataFee.call(this);\n        cost.iaddn(util_1.AccessLists.getDataFeeEIP2930(this.accessList, this.common));\n        if (Object.isFrozen(this)) {\n            this.cache.dataFee = {\n                value: cost,\n                hardfork: this.common.hardfork(),\n            };\n        }\n        return cost;\n    };\n    /**\n     * The up front amount that an account must have for this transaction to be valid\n     */\n    AccessListEIP2930Transaction.prototype.getUpfrontCost = function () {\n        return this.gasLimit.mul(this.gasPrice).add(this.value);\n    };\n    /**\n     * Returns a Buffer Array of the raw Buffers of the EIP-2930 transaction, in order.\n     *\n     * Format: `[chainId, nonce, gasPrice, gasLimit, to, value, data, accessList,\n     * signatureYParity (v), signatureR (r), signatureS (s)]`\n     *\n     * Use {@link AccessListEIP2930Transaction.serialize} to add a transaction to a block\n     * with {@link Block.fromValuesArray}.\n     *\n     * For an unsigned tx this method uses the empty Buffer values for the\n     * signature parameters `v`, `r` and `s` for encoding. For an EIP-155 compliant\n     * representation for external signing use {@link AccessListEIP2930Transaction.getMessageToSign}.\n     */\n    AccessListEIP2930Transaction.prototype.raw = function () {\n        return [\n            (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.chainId),\n            (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.nonce),\n            (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.gasPrice),\n            (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.gasLimit),\n            this.to !== undefined ? this.to.buf : Buffer.from([]),\n            (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.value),\n            this.data,\n            this.accessList,\n            this.v !== undefined ? (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.v) : Buffer.from([]),\n            this.r !== undefined ? (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.r) : Buffer.from([]),\n            this.s !== undefined ? (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.s) : Buffer.from([]),\n        ];\n    };\n    /**\n     * Returns the serialized encoding of the EIP-2930 transaction.\n     *\n     * Format: `0x01 || rlp([chainId, nonce, gasPrice, gasLimit, to, value, data, accessList,\n     * signatureYParity (v), signatureR (r), signatureS (s)])`\n     *\n     * Note that in contrast to the legacy tx serialization format this is not\n     * valid RLP any more due to the raw tx type preceding and concatenated to\n     * the RLP encoding of the values.\n     */\n    AccessListEIP2930Transaction.prototype.serialize = function () {\n        var base = this.raw();\n        return Buffer.concat([TRANSACTION_TYPE_BUFFER, ethereumjs_util_1.rlp.encode(base)]);\n    };\n    /**\n     * Returns the serialized unsigned tx (hashed or raw), which can be used\n     * to sign the transaction (e.g. for sending to a hardware wallet).\n     *\n     * Note: in contrast to the legacy tx the raw message format is already\n     * serialized and doesn't need to be RLP encoded any more.\n     *\n     * ```javascript\n     * const serializedMessage = tx.getMessageToSign(false) // use this for the HW wallet input\n     * ```\n     *\n     * @param hashMessage - Return hashed message if set to true (default: true)\n     */\n    AccessListEIP2930Transaction.prototype.getMessageToSign = function (hashMessage) {\n        if (hashMessage === void 0) { hashMessage = true; }\n        var base = this.raw().slice(0, 8);\n        var message = Buffer.concat([TRANSACTION_TYPE_BUFFER, ethereumjs_util_1.rlp.encode(base)]);\n        if (hashMessage) {\n            return (0, ethereumjs_util_1.keccak256)(message);\n        }\n        else {\n            return message;\n        }\n    };\n    /**\n     * Computes a sha3-256 hash of the serialized tx.\n     *\n     * This method can only be used for signed txs (it throws otherwise).\n     * Use {@link AccessListEIP2930Transaction.getMessageToSign} to get a tx hash for the purpose of signing.\n     */\n    AccessListEIP2930Transaction.prototype.hash = function () {\n        if (!this.isSigned()) {\n            var msg = this._errorMsg('Cannot call hash method if transaction is not signed');\n            throw new Error(msg);\n        }\n        if (Object.isFrozen(this)) {\n            if (!this.cache.hash) {\n                this.cache.hash = (0, ethereumjs_util_1.keccak256)(this.serialize());\n            }\n            return this.cache.hash;\n        }\n        return (0, ethereumjs_util_1.keccak256)(this.serialize());\n    };\n    /**\n     * Computes a sha3-256 hash which can be used to verify the signature\n     */\n    AccessListEIP2930Transaction.prototype.getMessageToVerifySignature = function () {\n        return this.getMessageToSign();\n    };\n    /**\n     * Returns the public key of the sender\n     */\n    AccessListEIP2930Transaction.prototype.getSenderPublicKey = function () {\n        var _a;\n        if (!this.isSigned()) {\n            var msg = this._errorMsg('Cannot call this method if transaction is not signed');\n            throw new Error(msg);\n        }\n        var msgHash = this.getMessageToVerifySignature();\n        // EIP-2: All transaction signatures whose s-value is greater than secp256k1n/2 are considered invalid.\n        // Reasoning: https://ethereum.stackexchange.com/a/55728\n        if (this.common.gteHardfork('homestead') && ((_a = this.s) === null || _a === void 0 ? void 0 : _a.gt(types_1.N_DIV_2))) {\n            var msg = this._errorMsg('Invalid Signature: s-values greater than secp256k1n/2 are considered invalid');\n            throw new Error(msg);\n        }\n        var _b = this, yParity = _b.yParity, r = _b.r, s = _b.s;\n        try {\n            return (0, ethereumjs_util_1.ecrecover)(msgHash, yParity.addn(27), // Recover the 27 which was stripped from ecsign\n            (0, ethereumjs_util_1.bnToUnpaddedBuffer)(r), (0, ethereumjs_util_1.bnToUnpaddedBuffer)(s));\n        }\n        catch (e) {\n            var msg = this._errorMsg('Invalid Signature');\n            throw new Error(msg);\n        }\n    };\n    AccessListEIP2930Transaction.prototype._processSignature = function (v, r, s) {\n        var opts = __assign(__assign({}, this.txOptions), { common: this.common });\n        return AccessListEIP2930Transaction.fromTxData({\n            chainId: this.chainId,\n            nonce: this.nonce,\n            gasPrice: this.gasPrice,\n            gasLimit: this.gasLimit,\n            to: this.to,\n            value: this.value,\n            data: this.data,\n            accessList: this.accessList,\n            v: new ethereumjs_util_1.BN(v - 27),\n            r: new ethereumjs_util_1.BN(r),\n            s: new ethereumjs_util_1.BN(s),\n        }, opts);\n    };\n    /**\n     * Returns an object with the JSON representation of the transaction\n     */\n    AccessListEIP2930Transaction.prototype.toJSON = function () {\n        var accessListJSON = util_1.AccessLists.getAccessListJSON(this.accessList);\n        return {\n            chainId: (0, ethereumjs_util_1.bnToHex)(this.chainId),\n            nonce: (0, ethereumjs_util_1.bnToHex)(this.nonce),\n            gasPrice: (0, ethereumjs_util_1.bnToHex)(this.gasPrice),\n            gasLimit: (0, ethereumjs_util_1.bnToHex)(this.gasLimit),\n            to: this.to !== undefined ? this.to.toString() : undefined,\n            value: (0, ethereumjs_util_1.bnToHex)(this.value),\n            data: '0x' + this.data.toString('hex'),\n            accessList: accessListJSON,\n            v: this.v !== undefined ? (0, ethereumjs_util_1.bnToHex)(this.v) : undefined,\n            r: this.r !== undefined ? (0, ethereumjs_util_1.bnToHex)(this.r) : undefined,\n            s: this.s !== undefined ? (0, ethereumjs_util_1.bnToHex)(this.s) : undefined,\n        };\n    };\n    /**\n     * Return a compact error string representation of the object\n     */\n    AccessListEIP2930Transaction.prototype.errorStr = function () {\n        var _a, _b;\n        var errorStr = this._getSharedErrorPostfix();\n        // Keep ? for this.accessList since this otherwise causes Hardhat E2E tests to fail\n        errorStr += \" gasPrice=\".concat(this.gasPrice, \" accessListCount=\").concat((_b = (_a = this.accessList) === null || _a === void 0 ? void 0 : _a.length) !== null && _b !== void 0 ? _b : 0);\n        return errorStr;\n    };\n    /**\n     * Internal helper function to create an annotated error message\n     *\n     * @param msg Base error message\n     * @hidden\n     */\n    AccessListEIP2930Transaction.prototype._errorMsg = function (msg) {\n        return \"\".concat(msg, \" (\").concat(this.errorStr(), \")\");\n    };\n    return AccessListEIP2930Transaction;\n}(baseTransaction_1.BaseTransaction));\nexports.default = AccessListEIP2930Transaction;\n//# sourceMappingURL=eip2930Transaction.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FeeMarketEIP1559Transaction = exports.TransactionFactory = exports.AccessListEIP2930Transaction = exports.Transaction = void 0;\nvar legacyTransaction_1 = require(\"./legacyTransaction\");\nObject.defineProperty(exports, \"Transaction\", { enumerable: true, get: function () { return __importDefault(legacyTransaction_1).default; } });\nvar eip2930Transaction_1 = require(\"./eip2930Transaction\");\nObject.defineProperty(exports, \"AccessListEIP2930Transaction\", { enumerable: true, get: function () { return __importDefault(eip2930Transaction_1).default; } });\nvar transactionFactory_1 = require(\"./transactionFactory\");\nObject.defineProperty(exports, \"TransactionFactory\", { enumerable: true, get: function () { return __importDefault(transactionFactory_1).default; } });\nvar eip1559Transaction_1 = require(\"./eip1559Transaction\");\nObject.defineProperty(exports, \"FeeMarketEIP1559Transaction\", { enumerable: true, get: function () { return __importDefault(eip1559Transaction_1).default; } });\n__exportStar(require(\"./types\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ethereumjs_util_1 = require(\"ethereumjs-util\");\nvar types_1 = require(\"./types\");\nvar baseTransaction_1 = require(\"./baseTransaction\");\nvar util_1 = require(\"./util\");\nvar TRANSACTION_TYPE = 0;\n/**\n * An Ethereum non-typed (legacy) transaction\n */\nvar Transaction = /** @class */ (function (_super) {\n    __extends(Transaction, _super);\n    /**\n     * This constructor takes the values, validates them, assigns them and freezes the object.\n     *\n     * It is not recommended to use this constructor directly. Instead use\n     * the static factory methods to assist in creating a Transaction object from\n     * varying data types.\n     */\n    function Transaction(txData, opts) {\n        if (opts === void 0) { opts = {}; }\n        var _this = this;\n        var _a;\n        _this = _super.call(this, __assign(__assign({}, txData), { type: TRANSACTION_TYPE }), opts) || this;\n        _this.common = _this._validateTxV(_this.v, opts.common);\n        _this.gasPrice = new ethereumjs_util_1.BN((0, ethereumjs_util_1.toBuffer)(txData.gasPrice === '' ? '0x' : txData.gasPrice));\n        if (_this.gasPrice.mul(_this.gasLimit).gt(ethereumjs_util_1.MAX_INTEGER)) {\n            var msg = _this._errorMsg('gas limit * gasPrice cannot exceed MAX_INTEGER (2^256-1)');\n            throw new Error(msg);\n        }\n        _this._validateCannotExceedMaxInteger({ gasPrice: _this.gasPrice });\n        if (_this.common.gteHardfork('spuriousDragon')) {\n            if (!_this.isSigned()) {\n                _this.activeCapabilities.push(types_1.Capability.EIP155ReplayProtection);\n            }\n            else {\n                // EIP155 spec:\n                // If block.number >= 2,675,000 and v = CHAIN_ID * 2 + 35 or v = CHAIN_ID * 2 + 36\n                // then when computing the hash of a transaction for purposes of signing or recovering\n                // instead of hashing only the first six elements (i.e. nonce, gasprice, startgas, to, value, data)\n                // hash nine elements, with v replaced by CHAIN_ID, r = 0 and s = 0.\n                var v = _this.v;\n                var chainIdDoubled = _this.common.chainIdBN().muln(2);\n                // v and chain ID meet EIP-155 conditions\n                if (v.eq(chainIdDoubled.addn(35)) || v.eq(chainIdDoubled.addn(36))) {\n                    _this.activeCapabilities.push(types_1.Capability.EIP155ReplayProtection);\n                }\n            }\n        }\n        if (_this.common.isActivatedEIP(3860)) {\n            (0, util_1.checkMaxInitCodeSize)(_this.common, _this.data.length);\n        }\n        var freeze = (_a = opts === null || opts === void 0 ? void 0 : opts.freeze) !== null && _a !== void 0 ? _a : true;\n        if (freeze) {\n            Object.freeze(_this);\n        }\n        return _this;\n    }\n    /**\n     * Instantiate a transaction from a data dictionary.\n     *\n     * Format: { nonce, gasPrice, gasLimit, to, value, data, v, r, s }\n     *\n     * Notes:\n     * - All parameters are optional and have some basic default values\n     */\n    Transaction.fromTxData = function (txData, opts) {\n        if (opts === void 0) { opts = {}; }\n        return new Transaction(txData, opts);\n    };\n    /**\n     * Instantiate a transaction from the serialized tx.\n     *\n     * Format: `rlp([nonce, gasPrice, gasLimit, to, value, data, v, r, s])`\n     */\n    Transaction.fromSerializedTx = function (serialized, opts) {\n        if (opts === void 0) { opts = {}; }\n        var values = ethereumjs_util_1.rlp.decode(serialized);\n        if (!Array.isArray(values)) {\n            throw new Error('Invalid serialized tx input. Must be array');\n        }\n        return this.fromValuesArray(values, opts);\n    };\n    /**\n     * Instantiate a transaction from the serialized tx.\n     * (alias of {@link Transaction.fromSerializedTx})\n     *\n     * @deprecated this constructor alias is deprecated and will be removed\n     * in favor of the {@link Transaction.fromSerializedTx} constructor\n     */\n    Transaction.fromRlpSerializedTx = function (serialized, opts) {\n        if (opts === void 0) { opts = {}; }\n        return Transaction.fromSerializedTx(serialized, opts);\n    };\n    /**\n     * Create a transaction from a values array.\n     *\n     * Format: `[nonce, gasPrice, gasLimit, to, value, data, v, r, s]`\n     */\n    Transaction.fromValuesArray = function (values, opts) {\n        if (opts === void 0) { opts = {}; }\n        // If length is not 6, it has length 9. If v/r/s are empty Buffers, it is still an unsigned transaction\n        // This happens if you get the RLP data from `raw()`\n        if (values.length !== 6 && values.length !== 9) {\n            throw new Error('Invalid transaction. Only expecting 6 values (for unsigned tx) or 9 values (for signed tx).');\n        }\n        var _a = __read(values, 9), nonce = _a[0], gasPrice = _a[1], gasLimit = _a[2], to = _a[3], value = _a[4], data = _a[5], v = _a[6], r = _a[7], s = _a[8];\n        (0, ethereumjs_util_1.validateNoLeadingZeroes)({ nonce: nonce, gasPrice: gasPrice, gasLimit: gasLimit, value: value, v: v, r: r, s: s });\n        return new Transaction({\n            nonce: nonce,\n            gasPrice: gasPrice,\n            gasLimit: gasLimit,\n            to: to,\n            value: value,\n            data: data,\n            v: v,\n            r: r,\n            s: s,\n        }, opts);\n    };\n    /**\n     * Returns a Buffer Array of the raw Buffers of the legacy transaction, in order.\n     *\n     * Format: `[nonce, gasPrice, gasLimit, to, value, data, v, r, s]`\n     *\n     * For legacy txs this is also the correct format to add transactions\n     * to a block with {@link Block.fromValuesArray} (use the `serialize()` method\n     * for typed txs).\n     *\n     * For an unsigned tx this method returns the empty Buffer values\n     * for the signature parameters `v`, `r` and `s`. For an EIP-155 compliant\n     * representation have a look at {@link Transaction.getMessageToSign}.\n     */\n    Transaction.prototype.raw = function () {\n        return [\n            (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.nonce),\n            (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.gasPrice),\n            (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.gasLimit),\n            this.to !== undefined ? this.to.buf : Buffer.from([]),\n            (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.value),\n            this.data,\n            this.v !== undefined ? (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.v) : Buffer.from([]),\n            this.r !== undefined ? (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.r) : Buffer.from([]),\n            this.s !== undefined ? (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.s) : Buffer.from([]),\n        ];\n    };\n    /**\n     * Returns the serialized encoding of the legacy transaction.\n     *\n     * Format: `rlp([nonce, gasPrice, gasLimit, to, value, data, v, r, s])`\n     *\n     * For an unsigned tx this method uses the empty Buffer values for the\n     * signature parameters `v`, `r` and `s` for encoding. For an EIP-155 compliant\n     * representation for external signing use {@link Transaction.getMessageToSign}.\n     */\n    Transaction.prototype.serialize = function () {\n        return ethereumjs_util_1.rlp.encode(this.raw());\n    };\n    Transaction.prototype._getMessageToSign = function () {\n        var values = [\n            (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.nonce),\n            (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.gasPrice),\n            (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.gasLimit),\n            this.to !== undefined ? this.to.buf : Buffer.from([]),\n            (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.value),\n            this.data,\n        ];\n        if (this.supports(types_1.Capability.EIP155ReplayProtection)) {\n            values.push((0, ethereumjs_util_1.toBuffer)(this.common.chainIdBN()));\n            values.push((0, ethereumjs_util_1.unpadBuffer)((0, ethereumjs_util_1.toBuffer)(0)));\n            values.push((0, ethereumjs_util_1.unpadBuffer)((0, ethereumjs_util_1.toBuffer)(0)));\n        }\n        return values;\n    };\n    Transaction.prototype.getMessageToSign = function (hashMessage) {\n        if (hashMessage === void 0) { hashMessage = true; }\n        var message = this._getMessageToSign();\n        if (hashMessage) {\n            return (0, ethereumjs_util_1.rlphash)(message);\n        }\n        else {\n            return message;\n        }\n    };\n    /**\n     * The amount of gas paid for the data in this tx\n     */\n    Transaction.prototype.getDataFee = function () {\n        if (this.cache.dataFee && this.cache.dataFee.hardfork === this.common.hardfork()) {\n            return this.cache.dataFee.value;\n        }\n        if (Object.isFrozen(this)) {\n            this.cache.dataFee = {\n                value: _super.prototype.getDataFee.call(this),\n                hardfork: this.common.hardfork(),\n            };\n        }\n        return _super.prototype.getDataFee.call(this);\n    };\n    /**\n     * The up front amount that an account must have for this transaction to be valid\n     */\n    Transaction.prototype.getUpfrontCost = function () {\n        return this.gasLimit.mul(this.gasPrice).add(this.value);\n    };\n    /**\n     * Computes a sha3-256 hash of the serialized tx.\n     *\n     * This method can only be used for signed txs (it throws otherwise).\n     * Use {@link Transaction.getMessageToSign} to get a tx hash for the purpose of signing.\n     */\n    Transaction.prototype.hash = function () {\n        // In contrast to the tx type transaction implementations the `hash()` function\n        // for the legacy tx does not throw if the tx is not signed.\n        // This has been considered for inclusion but lead to unexpected backwards\n        // compatibility problems (no concrete reference found, needs validation).\n        //\n        // For context see also https://github.com/ethereumjs/ethereumjs-monorepo/pull/1445,\n        // September, 2021 as well as work done before.\n        //\n        // This should be updated along the next major version release by adding:\n        //\n        //if (!this.isSigned()) {\n        //  const msg = this._errorMsg('Cannot call hash method if transaction is not signed')\n        //  throw new Error(msg)\n        //}\n        if (Object.isFrozen(this)) {\n            if (!this.cache.hash) {\n                this.cache.hash = (0, ethereumjs_util_1.rlphash)(this.raw());\n            }\n            return this.cache.hash;\n        }\n        return (0, ethereumjs_util_1.rlphash)(this.raw());\n    };\n    /**\n     * Computes a sha3-256 hash which can be used to verify the signature\n     */\n    Transaction.prototype.getMessageToVerifySignature = function () {\n        if (!this.isSigned()) {\n            var msg = this._errorMsg('This transaction is not signed');\n            throw new Error(msg);\n        }\n        var message = this._getMessageToSign();\n        return (0, ethereumjs_util_1.rlphash)(message);\n    };\n    /**\n     * Returns the public key of the sender\n     */\n    Transaction.prototype.getSenderPublicKey = function () {\n        var _a;\n        var msgHash = this.getMessageToVerifySignature();\n        // EIP-2: All transaction signatures whose s-value is greater than secp256k1n/2 are considered invalid.\n        // Reasoning: https://ethereum.stackexchange.com/a/55728\n        if (this.common.gteHardfork('homestead') && ((_a = this.s) === null || _a === void 0 ? void 0 : _a.gt(types_1.N_DIV_2))) {\n            var msg = this._errorMsg('Invalid Signature: s-values greater than secp256k1n/2 are considered invalid');\n            throw new Error(msg);\n        }\n        var _b = this, v = _b.v, r = _b.r, s = _b.s;\n        try {\n            return (0, ethereumjs_util_1.ecrecover)(msgHash, v, (0, ethereumjs_util_1.bnToUnpaddedBuffer)(r), (0, ethereumjs_util_1.bnToUnpaddedBuffer)(s), this.supports(types_1.Capability.EIP155ReplayProtection) ? this.common.chainIdBN() : undefined);\n        }\n        catch (e) {\n            var msg = this._errorMsg('Invalid Signature');\n            throw new Error(msg);\n        }\n    };\n    /**\n     * Process the v, r, s values from the `sign` method of the base transaction.\n     */\n    Transaction.prototype._processSignature = function (v, r, s) {\n        var vBN = new ethereumjs_util_1.BN(v);\n        if (this.supports(types_1.Capability.EIP155ReplayProtection)) {\n            vBN.iadd(this.common.chainIdBN().muln(2).addn(8));\n        }\n        var opts = __assign(__assign({}, this.txOptions), { common: this.common });\n        return Transaction.fromTxData({\n            nonce: this.nonce,\n            gasPrice: this.gasPrice,\n            gasLimit: this.gasLimit,\n            to: this.to,\n            value: this.value,\n            data: this.data,\n            v: vBN,\n            r: new ethereumjs_util_1.BN(r),\n            s: new ethereumjs_util_1.BN(s),\n        }, opts);\n    };\n    /**\n     * Returns an object with the JSON representation of the transaction.\n     */\n    Transaction.prototype.toJSON = function () {\n        return {\n            nonce: (0, ethereumjs_util_1.bnToHex)(this.nonce),\n            gasPrice: (0, ethereumjs_util_1.bnToHex)(this.gasPrice),\n            gasLimit: (0, ethereumjs_util_1.bnToHex)(this.gasLimit),\n            to: this.to !== undefined ? this.to.toString() : undefined,\n            value: (0, ethereumjs_util_1.bnToHex)(this.value),\n            data: '0x' + this.data.toString('hex'),\n            v: this.v !== undefined ? (0, ethereumjs_util_1.bnToHex)(this.v) : undefined,\n            r: this.r !== undefined ? (0, ethereumjs_util_1.bnToHex)(this.r) : undefined,\n            s: this.s !== undefined ? (0, ethereumjs_util_1.bnToHex)(this.s) : undefined,\n        };\n    };\n    /**\n     * Validates tx's `v` value\n     */\n    Transaction.prototype._validateTxV = function (v, common) {\n        // Check for valid v values in the scope of a signed legacy tx\n        if (v !== undefined) {\n            // v is 1. not matching the EIP-155 chainId included case and...\n            // v is 2. not matching the classic v=27 or v=28 case\n            if (v.ltn(37) && !v.eqn(27) && !v.eqn(28)) {\n                throw new Error(\"Legacy txs need either v = 27/28 or v >= 37 (EIP-155 replay protection), got v = \".concat(v));\n            }\n        }\n        var chainIdBN;\n        // No unsigned tx and EIP-155 activated and chain ID included\n        if (v !== undefined &&\n            (!common || common.gteHardfork('spuriousDragon')) &&\n            !v.eqn(27) &&\n            !v.eqn(28)) {\n            if (common) {\n                var chainIdDoubled = common.chainIdBN().muln(2);\n                var isValidEIP155V = v.eq(chainIdDoubled.addn(35)) || v.eq(chainIdDoubled.addn(36));\n                if (!isValidEIP155V) {\n                    throw new Error(\"Incompatible EIP155-based V \".concat(v, \" and chain id \").concat(common.chainIdBN(), \". See the Common parameter of the Transaction constructor to set the chain id.\"));\n                }\n            }\n            else {\n                // Derive the original chain ID\n                var numSub = void 0;\n                if (v.subn(35).isEven()) {\n                    numSub = 35;\n                }\n                else {\n                    numSub = 36;\n                }\n                // Use derived chain ID to create a proper Common\n                chainIdBN = v.subn(numSub).divn(2);\n            }\n        }\n        return this._getCommon(common, chainIdBN);\n    };\n    /**\n     * @deprecated if you have called this internal method please use `tx.supports(Capabilities.EIP155ReplayProtection)` instead\n     */\n    Transaction.prototype._unsignedTxImplementsEIP155 = function () {\n        return this.common.gteHardfork('spuriousDragon');\n    };\n    /**\n     * @deprecated if you have called this internal method please use `tx.supports(Capabilities.EIP155ReplayProtection)` instead\n     */\n    Transaction.prototype._signedTxImplementsEIP155 = function () {\n        if (!this.isSigned()) {\n            var msg = this._errorMsg('This transaction is not signed');\n            throw new Error(msg);\n        }\n        var onEIP155BlockOrLater = this.common.gteHardfork('spuriousDragon');\n        // EIP155 spec:\n        // If block.number >= 2,675,000 and v = CHAIN_ID * 2 + 35 or v = CHAIN_ID * 2 + 36, then when computing the hash of a transaction for purposes of signing or recovering, instead of hashing only the first six elements (i.e. nonce, gasprice, startgas, to, value, data), hash nine elements, with v replaced by CHAIN_ID, r = 0 and s = 0.\n        var v = this.v;\n        var chainIdDoubled = this.common.chainIdBN().muln(2);\n        var vAndChainIdMeetEIP155Conditions = v.eq(chainIdDoubled.addn(35)) || v.eq(chainIdDoubled.addn(36));\n        return vAndChainIdMeetEIP155Conditions && onEIP155BlockOrLater;\n    };\n    /**\n     * Return a compact error string representation of the object\n     */\n    Transaction.prototype.errorStr = function () {\n        var errorStr = this._getSharedErrorPostfix();\n        errorStr += \" gasPrice=\".concat(this.gasPrice);\n        return errorStr;\n    };\n    /**\n     * Internal helper function to create an annotated error message\n     *\n     * @param msg Base error message\n     * @hidden\n     */\n    Transaction.prototype._errorMsg = function (msg) {\n        return \"\".concat(msg, \" (\").concat(this.errorStr(), \")\");\n    };\n    return Transaction;\n}(baseTransaction_1.BaseTransaction));\nexports.default = Transaction;\n//# sourceMappingURL=legacyTransaction.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ethereumjs_util_1 = require(\"ethereumjs-util\");\nvar _1 = require(\".\");\nvar TransactionFactory = /** @class */ (function () {\n    // It is not possible to instantiate a TransactionFactory object.\n    function TransactionFactory() {\n    }\n    /**\n     * Create a transaction from a `txData` object\n     *\n     * @param txData - The transaction data. The `type` field will determine which transaction type is returned (if undefined, creates a legacy transaction)\n     * @param txOptions - Options to pass on to the constructor of the transaction\n     */\n    TransactionFactory.fromTxData = function (txData, txOptions) {\n        if (txOptions === void 0) { txOptions = {}; }\n        if (!('type' in txData) || txData.type === undefined) {\n            // Assume legacy transaction\n            return _1.Transaction.fromTxData(txData, txOptions);\n        }\n        else {\n            var txType = new ethereumjs_util_1.BN((0, ethereumjs_util_1.toBuffer)(txData.type)).toNumber();\n            if (txType === 0) {\n                return _1.Transaction.fromTxData(txData, txOptions);\n            }\n            else if (txType === 1) {\n                return _1.AccessListEIP2930Transaction.fromTxData(txData, txOptions);\n            }\n            else if (txType === 2) {\n                return _1.FeeMarketEIP1559Transaction.fromTxData(txData, txOptions);\n            }\n            else {\n                throw new Error(\"Tx instantiation with type \".concat(txType, \" not supported\"));\n            }\n        }\n    };\n    /**\n     * This method tries to decode serialized data.\n     *\n     * @param data - The data Buffer\n     * @param txOptions - The transaction options\n     */\n    TransactionFactory.fromSerializedData = function (data, txOptions) {\n        if (txOptions === void 0) { txOptions = {}; }\n        if (data[0] <= 0x7f) {\n            // Determine the type.\n            var EIP = void 0;\n            switch (data[0]) {\n                case 1:\n                    EIP = 2930;\n                    break;\n                case 2:\n                    EIP = 1559;\n                    break;\n                default:\n                    throw new Error(\"TypedTransaction with ID \".concat(data[0], \" unknown\"));\n            }\n            if (EIP === 1559) {\n                return _1.FeeMarketEIP1559Transaction.fromSerializedTx(data, txOptions);\n            }\n            else {\n                // EIP === 2930\n                return _1.AccessListEIP2930Transaction.fromSerializedTx(data, txOptions);\n            }\n        }\n        else {\n            return _1.Transaction.fromSerializedTx(data, txOptions);\n        }\n    };\n    /**\n     * When decoding a BlockBody, in the transactions field, a field is either:\n     * A Buffer (a TypedTransaction - encoded as TransactionType || rlp(TransactionPayload))\n     * A Buffer[] (Legacy Transaction)\n     * This method returns the right transaction.\n     *\n     * @param data - A Buffer or Buffer[]\n     * @param txOptions - The transaction options\n     */\n    TransactionFactory.fromBlockBodyData = function (data, txOptions) {\n        if (txOptions === void 0) { txOptions = {}; }\n        if (Buffer.isBuffer(data)) {\n            return this.fromSerializedData(data, txOptions);\n        }\n        else if (Array.isArray(data)) {\n            // It is a legacy transaction\n            return _1.Transaction.fromValuesArray(data, txOptions);\n        }\n        else {\n            throw new Error('Cannot decode transaction: unknown type input');\n        }\n    };\n    /**\n     * This helper method allows one to retrieve the class which matches the transactionID\n     * If transactionID is undefined, returns the legacy transaction class.\n     * @deprecated - This method is deprecated and will be removed on the next major release\n     * @param transactionID\n     * @param _common - This option is not used\n     */\n    TransactionFactory.getTransactionClass = function (transactionID, _common) {\n        if (transactionID === void 0) { transactionID = 0; }\n        var legacyTxn = transactionID == 0 || (transactionID >= 0x80 && transactionID <= 0xff);\n        if (legacyTxn) {\n            return _1.Transaction;\n        }\n        switch (transactionID) {\n            case 1:\n                return _1.AccessListEIP2930Transaction;\n            case 2:\n                return _1.FeeMarketEIP1559Transaction;\n            default:\n                throw new Error(\"TypedTransaction with ID \".concat(transactionID, \" unknown\"));\n        }\n    };\n    return TransactionFactory;\n}());\nexports.default = TransactionFactory;\n//# sourceMappingURL=transactionFactory.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.N_DIV_2 = exports.isAccessList = exports.isAccessListBuffer = exports.Capability = void 0;\nvar ethereumjs_util_1 = require(\"ethereumjs-util\");\n/**\n * Can be used in conjunction with {@link Transaction.supports}\n * to query on tx capabilities\n */\nvar Capability;\n(function (Capability) {\n    /**\n     * Tx supports EIP-155 replay protection\n     * See: [155](https://eips.ethereum.org/EIPS/eip-155) Replay Attack Protection EIP\n     */\n    Capability[Capability[\"EIP155ReplayProtection\"] = 155] = \"EIP155ReplayProtection\";\n    /**\n     * Tx supports EIP-1559 gas fee market mechansim\n     * See: [1559](https://eips.ethereum.org/EIPS/eip-1559) Fee Market EIP\n     */\n    Capability[Capability[\"EIP1559FeeMarket\"] = 1559] = \"EIP1559FeeMarket\";\n    /**\n     * Tx is a typed transaction as defined in EIP-2718\n     * See: [2718](https://eips.ethereum.org/EIPS/eip-2718) Transaction Type EIP\n     */\n    Capability[Capability[\"EIP2718TypedTransaction\"] = 2718] = \"EIP2718TypedTransaction\";\n    /**\n     * Tx supports access list generation as defined in EIP-2930\n     * See: [2930](https://eips.ethereum.org/EIPS/eip-2930) Access Lists EIP\n     */\n    Capability[Capability[\"EIP2930AccessLists\"] = 2930] = \"EIP2930AccessLists\";\n})(Capability = exports.Capability || (exports.Capability = {}));\nfunction isAccessListBuffer(input) {\n    if (input.length === 0) {\n        return true;\n    }\n    var firstItem = input[0];\n    if (Array.isArray(firstItem)) {\n        return true;\n    }\n    return false;\n}\nexports.isAccessListBuffer = isAccessListBuffer;\nfunction isAccessList(input) {\n    return !isAccessListBuffer(input); // This is exactly the same method, except the output is negated.\n}\nexports.isAccessList = isAccessList;\n/**\n * A const defining secp256k1n/2\n */\nexports.N_DIV_2 = new ethereumjs_util_1.BN('7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0', 16);\n//# sourceMappingURL=types.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AccessLists = exports.checkMaxInitCodeSize = void 0;\nvar ethereumjs_util_1 = require(\"ethereumjs-util\");\nvar types_1 = require(\"./types\");\nfunction checkMaxInitCodeSize(common, length) {\n    if (length > common.param('vm', 'maxInitCodeSize')) {\n        throw new Error(\"the initcode size of this transaction is too large: it is \".concat(length, \" while the max is \").concat(common.param('vm', 'maxInitCodeSize')));\n    }\n}\nexports.checkMaxInitCodeSize = checkMaxInitCodeSize;\nvar AccessLists = /** @class */ (function () {\n    function AccessLists() {\n    }\n    AccessLists.getAccessListData = function (accessList) {\n        var AccessListJSON;\n        var bufferAccessList;\n        if (accessList && (0, types_1.isAccessList)(accessList)) {\n            AccessListJSON = accessList;\n            var newAccessList = [];\n            for (var i = 0; i < accessList.length; i++) {\n                var item = accessList[i];\n                var addressBuffer = (0, ethereumjs_util_1.toBuffer)(item.address);\n                var storageItems = [];\n                for (var index = 0; index < item.storageKeys.length; index++) {\n                    storageItems.push((0, ethereumjs_util_1.toBuffer)(item.storageKeys[index]));\n                }\n                newAccessList.push([addressBuffer, storageItems]);\n            }\n            bufferAccessList = newAccessList;\n        }\n        else {\n            bufferAccessList = accessList !== null && accessList !== void 0 ? accessList : [];\n            // build the JSON\n            var json = [];\n            for (var i = 0; i < bufferAccessList.length; i++) {\n                var data = bufferAccessList[i];\n                var address = (0, ethereumjs_util_1.bufferToHex)(data[0]);\n                var storageKeys = [];\n                for (var item = 0; item < data[1].length; item++) {\n                    storageKeys.push((0, ethereumjs_util_1.bufferToHex)(data[1][item]));\n                }\n                var jsonItem = {\n                    address: address,\n                    storageKeys: storageKeys,\n                };\n                json.push(jsonItem);\n            }\n            AccessListJSON = json;\n        }\n        return {\n            AccessListJSON: AccessListJSON,\n            accessList: bufferAccessList,\n        };\n    };\n    AccessLists.verifyAccessList = function (accessList) {\n        for (var key = 0; key < accessList.length; key++) {\n            var accessListItem = accessList[key];\n            var address = accessListItem[0];\n            var storageSlots = accessListItem[1];\n            if (accessListItem[2] !== undefined) {\n                throw new Error('Access list item cannot have 3 elements. It can only have an address, and an array of storage slots.');\n            }\n            if (address.length != 20) {\n                throw new Error('Invalid EIP-2930 transaction: address length should be 20 bytes');\n            }\n            for (var storageSlot = 0; storageSlot < storageSlots.length; storageSlot++) {\n                if (storageSlots[storageSlot].length != 32) {\n                    throw new Error('Invalid EIP-2930 transaction: storage slot length should be 32 bytes');\n                }\n            }\n        }\n    };\n    AccessLists.getAccessListJSON = function (accessList) {\n        var accessListJSON = [];\n        for (var index = 0; index < accessList.length; index++) {\n            var item = accessList[index];\n            var JSONItem = {\n                address: '0x' + (0, ethereumjs_util_1.setLengthLeft)(item[0], 20).toString('hex'),\n                storageKeys: [],\n            };\n            var storageSlots = item[1];\n            for (var slot = 0; slot < storageSlots.length; slot++) {\n                var storageSlot = storageSlots[slot];\n                JSONItem.storageKeys.push('0x' + (0, ethereumjs_util_1.setLengthLeft)(storageSlot, 32).toString('hex'));\n            }\n            accessListJSON.push(JSONItem);\n        }\n        return accessListJSON;\n    };\n    AccessLists.getDataFeeEIP2930 = function (accessList, common) {\n        var accessListStorageKeyCost = common.param('gasPrices', 'accessListStorageKeyCost');\n        var accessListAddressCost = common.param('gasPrices', 'accessListAddressCost');\n        var slots = 0;\n        for (var index = 0; index < accessList.length; index++) {\n            var item = accessList[index];\n            var storageSlots = item[1];\n            slots += storageSlots.length;\n        }\n        var addresses = accessList.length;\n        return addresses * accessListAddressCost + slots * accessListStorageKeyCost;\n    };\n    return AccessLists;\n}());\nexports.AccessLists = AccessLists;\n//# sourceMappingURL=util.js.map","\"use strict\";\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.chains = exports._getInitializedChains = void 0;\nvar mainnet_json_1 = __importDefault(require(\"./mainnet.json\"));\nvar ropsten_json_1 = __importDefault(require(\"./ropsten.json\"));\nvar rinkeby_json_1 = __importDefault(require(\"./rinkeby.json\"));\nvar kovan_json_1 = __importDefault(require(\"./kovan.json\"));\nvar goerli_json_1 = __importDefault(require(\"./goerli.json\"));\nvar sepolia_json_1 = __importDefault(require(\"./sepolia.json\"));\n/**\n * @hidden\n */\nfunction _getInitializedChains(customChains) {\n    var e_1, _a;\n    var names = {\n        '1': 'mainnet',\n        '3': 'ropsten',\n        '4': 'rinkeby',\n        '42': 'kovan',\n        '5': 'goerli',\n        '11155111': 'sepolia',\n    };\n    var chains = {\n        mainnet: mainnet_json_1.default,\n        ropsten: ropsten_json_1.default,\n        rinkeby: rinkeby_json_1.default,\n        kovan: kovan_json_1.default,\n        goerli: goerli_json_1.default,\n        sepolia: sepolia_json_1.default,\n    };\n    if (customChains) {\n        try {\n            for (var customChains_1 = __values(customChains), customChains_1_1 = customChains_1.next(); !customChains_1_1.done; customChains_1_1 = customChains_1.next()) {\n                var chain = customChains_1_1.value;\n                var name_1 = chain.name;\n                names[chain.chainId.toString()] = name_1;\n                chains[name_1] = chain;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (customChains_1_1 && !customChains_1_1.done && (_a = customChains_1.return)) _a.call(customChains_1);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n    }\n    chains['names'] = names;\n    return chains;\n}\nexports._getInitializedChains = _getInitializedChains;\n/**\n * @deprecated this constant will be internalized (removed)\n * on next major version update\n */\nexports.chains = _getInitializedChains();\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EIPs = void 0;\nexports.EIPs = {\n    1153: require('./1153.json'),\n    1559: require('./1559.json'),\n    2315: require('./2315.json'),\n    2537: require('./2537.json'),\n    2565: require('./2565.json'),\n    2718: require('./2718.json'),\n    2929: require('./2929.json'),\n    2930: require('./2930.json'),\n    3198: require('./3198.json'),\n    3529: require('./3529.json'),\n    3540: require('./3540.json'),\n    3541: require('./3541.json'),\n    3554: require('./3554.json'),\n    3607: require('./3607.json'),\n    3651: require('./3651.json'),\n    3670: require('./3670.json'),\n    3675: require('./3675.json'),\n    3855: require('./3855.json'),\n    3860: require('./3860.json'),\n    4345: require('./4345.json'),\n    4399: require('./4399.json'),\n    5133: require('./5133.json'),\n};\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.hardforks = void 0;\nexports.hardforks = [\n    ['chainstart', require('./chainstart.json')],\n    ['homestead', require('./homestead.json')],\n    ['dao', require('./dao.json')],\n    ['tangerineWhistle', require('./tangerineWhistle.json')],\n    ['spuriousDragon', require('./spuriousDragon.json')],\n    ['byzantium', require('./byzantium.json')],\n    ['constantinople', require('./constantinople.json')],\n    ['petersburg', require('./petersburg.json')],\n    ['istanbul', require('./istanbul.json')],\n    ['muirGlacier', require('./muirGlacier.json')],\n    ['berlin', require('./berlin.json')],\n    ['london', require('./london.json')],\n    ['shanghai', require('./shanghai.json')],\n    ['arrowGlacier', require('./arrowGlacier.json')],\n    ['grayGlacier', require('./grayGlacier.json')],\n    ['mergeForkIdTransition', require('./mergeForkIdTransition.json')],\n    ['merge', require('./merge.json')],\n];\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConsensusAlgorithm = exports.ConsensusType = exports.Hardfork = exports.Chain = exports.CustomChain = void 0;\nvar events_1 = require(\"events\");\nvar crc_32_1 = require(\"crc-32\");\nvar ethereumjs_util_1 = require(\"ethereumjs-util\");\nvar chains_1 = require(\"./chains\");\nvar hardforks_1 = require(\"./hardforks\");\nvar eips_1 = require(\"./eips\");\nvar CustomChain;\n(function (CustomChain) {\n    /**\n     * Polygon (Matic) Mainnet\n     *\n     * - [Documentation](https://docs.matic.network/docs/develop/network-details/network)\n     */\n    CustomChain[\"PolygonMainnet\"] = \"polygon-mainnet\";\n    /**\n     * Polygon (Matic) Mumbai Testnet\n     *\n     * - [Documentation](https://docs.matic.network/docs/develop/network-details/network)\n     */\n    CustomChain[\"PolygonMumbai\"] = \"polygon-mumbai\";\n    /**\n     * Arbitrum Rinkeby Testnet\n     *\n     * - [Documentation](https://developer.offchainlabs.com/docs/public_testnet)\n     */\n    CustomChain[\"ArbitrumRinkebyTestnet\"] = \"arbitrum-rinkeby-testnet\";\n    /**\n     * xDai EVM sidechain with a native stable token\n     *\n     * - [Documentation](https://www.xdaichain.com/)\n     */\n    CustomChain[\"xDaiChain\"] = \"x-dai-chain\";\n    /**\n     * Optimistic Kovan - testnet for Optimism roll-up\n     *\n     * - [Documentation](https://community.optimism.io/docs/developers/tutorials.html)\n     */\n    CustomChain[\"OptimisticKovan\"] = \"optimistic-kovan\";\n    /**\n     * Optimistic Ethereum - mainnet for Optimism roll-up\n     *\n     * - [Documentation](https://community.optimism.io/docs/developers/tutorials.html)\n     */\n    CustomChain[\"OptimisticEthereum\"] = \"optimistic-ethereum\";\n})(CustomChain = exports.CustomChain || (exports.CustomChain = {}));\nvar Chain;\n(function (Chain) {\n    Chain[Chain[\"Mainnet\"] = 1] = \"Mainnet\";\n    Chain[Chain[\"Ropsten\"] = 3] = \"Ropsten\";\n    Chain[Chain[\"Rinkeby\"] = 4] = \"Rinkeby\";\n    Chain[Chain[\"Kovan\"] = 42] = \"Kovan\";\n    Chain[Chain[\"Goerli\"] = 5] = \"Goerli\";\n    Chain[Chain[\"Sepolia\"] = 11155111] = \"Sepolia\";\n})(Chain = exports.Chain || (exports.Chain = {}));\nvar Hardfork;\n(function (Hardfork) {\n    Hardfork[\"Chainstart\"] = \"chainstart\";\n    Hardfork[\"Homestead\"] = \"homestead\";\n    Hardfork[\"Dao\"] = \"dao\";\n    Hardfork[\"TangerineWhistle\"] = \"tangerineWhistle\";\n    Hardfork[\"SpuriousDragon\"] = \"spuriousDragon\";\n    Hardfork[\"Byzantium\"] = \"byzantium\";\n    Hardfork[\"Constantinople\"] = \"constantinople\";\n    Hardfork[\"Petersburg\"] = \"petersburg\";\n    Hardfork[\"Istanbul\"] = \"istanbul\";\n    Hardfork[\"MuirGlacier\"] = \"muirGlacier\";\n    Hardfork[\"Berlin\"] = \"berlin\";\n    Hardfork[\"London\"] = \"london\";\n    Hardfork[\"ArrowGlacier\"] = \"arrowGlacier\";\n    Hardfork[\"GrayGlacier\"] = \"grayGlacier\";\n    Hardfork[\"MergeForkIdTransition\"] = \"mergeForkIdTransition\";\n    Hardfork[\"Merge\"] = \"merge\";\n    Hardfork[\"Shanghai\"] = \"shanghai\";\n})(Hardfork = exports.Hardfork || (exports.Hardfork = {}));\nvar ConsensusType;\n(function (ConsensusType) {\n    ConsensusType[\"ProofOfStake\"] = \"pos\";\n    ConsensusType[\"ProofOfWork\"] = \"pow\";\n    ConsensusType[\"ProofOfAuthority\"] = \"poa\";\n})(ConsensusType = exports.ConsensusType || (exports.ConsensusType = {}));\nvar ConsensusAlgorithm;\n(function (ConsensusAlgorithm) {\n    ConsensusAlgorithm[\"Ethash\"] = \"ethash\";\n    ConsensusAlgorithm[\"Clique\"] = \"clique\";\n    ConsensusAlgorithm[\"Casper\"] = \"casper\";\n})(ConsensusAlgorithm = exports.ConsensusAlgorithm || (exports.ConsensusAlgorithm = {}));\n/**\n * Common class to access chain and hardfork parameters and to provide\n * a unified and shared view on the network and hardfork state.\n *\n * Use the {@link Common.custom} static constructor for creating simple\n * custom chain {@link Common} objects (more complete custom chain setups\n * can be created via the main constructor and the {@link CommonOpts.customChains} parameter).\n */\nvar Common = /** @class */ (function (_super) {\n    __extends(Common, _super);\n    /**\n     *\n     * @constructor\n     */\n    function Common(opts) {\n        var e_1, _a;\n        var _this = this;\n        var _b, _c;\n        _this = _super.call(this) || this;\n        _this._supportedHardforks = [];\n        _this._eips = [];\n        _this._customChains = (_b = opts.customChains) !== null && _b !== void 0 ? _b : [];\n        _this._chainParams = _this.setChain(opts.chain);\n        _this.DEFAULT_HARDFORK = (_c = _this._chainParams.defaultHardfork) !== null && _c !== void 0 ? _c : Hardfork.Istanbul;\n        try {\n            for (var _d = __values(_this._chainParams.hardforks), _e = _d.next(); !_e.done; _e = _d.next()) {\n                var hf = _e.value;\n                if (!hf.forkHash) {\n                    hf.forkHash = _this._calcForkHash(hf.name);\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_e && !_e.done && (_a = _d.return)) _a.call(_d);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        _this._hardfork = _this.DEFAULT_HARDFORK;\n        if (opts.supportedHardforks) {\n            _this._supportedHardforks = opts.supportedHardforks;\n        }\n        if (opts.hardfork) {\n            _this.setHardfork(opts.hardfork);\n        }\n        if (opts.eips) {\n            _this.setEIPs(opts.eips);\n        }\n        return _this;\n    }\n    /**\n     * Creates a {@link Common} object for a custom chain, based on a standard one.\n     *\n     * It uses all the {@link Chain} parameters from the {@link baseChain} option except the ones overridden\n     * in a provided {@link chainParamsOrName} dictionary. Some usage example:\n     *\n     * ```javascript\n     * Common.custom({chainId: 123})\n     * ```\n     *\n     * There are also selected supported custom chains which can be initialized by using one of the\n     * {@link CustomChains} for {@link chainParamsOrName}, e.g.:\n     *\n     * ```javascript\n     * Common.custom(CustomChains.MaticMumbai)\n     * ```\n     *\n     * Note that these supported custom chains only provide some base parameters (usually the chain and\n     * network ID and a name) and can only be used for selected use cases (e.g. sending a tx with\n     * the `@ethereumjs/tx` library to a Layer-2 chain).\n     *\n     * @param chainParamsOrName Custom parameter dict (`name` will default to `custom-chain`) or string with name of a supported custom chain\n     * @param opts Custom chain options to set the {@link CustomCommonOpts.baseChain}, selected {@link CustomCommonOpts.hardfork} and others\n     */\n    Common.custom = function (chainParamsOrName, opts) {\n        var _a;\n        if (opts === void 0) { opts = {}; }\n        var baseChain = (_a = opts.baseChain) !== null && _a !== void 0 ? _a : 'mainnet';\n        var standardChainParams = __assign({}, Common._getChainParams(baseChain));\n        standardChainParams['name'] = 'custom-chain';\n        if (typeof chainParamsOrName !== 'string') {\n            return new Common(__assign({ chain: __assign(__assign({}, standardChainParams), chainParamsOrName) }, opts));\n        }\n        else {\n            if (chainParamsOrName === CustomChain.PolygonMainnet) {\n                return Common.custom({\n                    name: CustomChain.PolygonMainnet,\n                    chainId: 137,\n                    networkId: 137,\n                }, opts);\n            }\n            if (chainParamsOrName === CustomChain.PolygonMumbai) {\n                return Common.custom({\n                    name: CustomChain.PolygonMumbai,\n                    chainId: 80001,\n                    networkId: 80001,\n                }, opts);\n            }\n            if (chainParamsOrName === CustomChain.ArbitrumRinkebyTestnet) {\n                return Common.custom({\n                    name: CustomChain.ArbitrumRinkebyTestnet,\n                    chainId: 421611,\n                    networkId: 421611,\n                }, opts);\n            }\n            if (chainParamsOrName === CustomChain.xDaiChain) {\n                return Common.custom({\n                    name: CustomChain.xDaiChain,\n                    chainId: 100,\n                    networkId: 100,\n                }, opts);\n            }\n            if (chainParamsOrName === CustomChain.OptimisticKovan) {\n                return Common.custom({\n                    name: CustomChain.OptimisticKovan,\n                    chainId: 69,\n                    networkId: 69,\n                }, __assign({ hardfork: Hardfork.Berlin }, opts));\n            }\n            if (chainParamsOrName === CustomChain.OptimisticEthereum) {\n                return Common.custom({\n                    name: CustomChain.OptimisticEthereum,\n                    chainId: 10,\n                    networkId: 10,\n                }, __assign({ hardfork: Hardfork.Berlin }, opts));\n            }\n            throw new Error(\"Custom chain \".concat(chainParamsOrName, \" not supported\"));\n        }\n    };\n    /**\n     * Creates a {@link Common} object for a custom chain, based on a standard one. It uses all the `Chain`\n     * params from {@link baseChain} except the ones overridden in {@link customChainParams}.\n     *\n     * @deprecated Use {@link Common.custom} instead\n     *\n     * @param baseChain The name (`mainnet`) or id (`1`) of a standard chain used to base the custom\n     * chain params on.\n     * @param customChainParams The custom parameters of the chain.\n     * @param hardfork String identifier ('byzantium') for hardfork (optional)\n     * @param supportedHardforks Limit parameter returns to the given hardforks (optional)\n     */\n    Common.forCustomChain = function (baseChain, customChainParams, hardfork, supportedHardforks) {\n        var standardChainParams = Common._getChainParams(baseChain);\n        return new Common({\n            chain: __assign(__assign({}, standardChainParams), customChainParams),\n            hardfork: hardfork,\n            supportedHardforks: supportedHardforks,\n        });\n    };\n    /**\n     * Static method to determine if a {@link chainId} is supported as a standard chain\n     * @param chainId BN id (`1`) of a standard chain\n     * @returns boolean\n     */\n    Common.isSupportedChainId = function (chainId) {\n        var initializedChains = (0, chains_1._getInitializedChains)();\n        return Boolean(initializedChains['names'][chainId.toString()]);\n    };\n    Common._getChainParams = function (chain, customChains) {\n        var initializedChains = (0, chains_1._getInitializedChains)(customChains);\n        if (typeof chain === 'number' || ethereumjs_util_1.BN.isBN(chain)) {\n            chain = chain.toString();\n            if (initializedChains['names'][chain]) {\n                var name_1 = initializedChains['names'][chain];\n                return initializedChains[name_1];\n            }\n            throw new Error(\"Chain with ID \".concat(chain, \" not supported\"));\n        }\n        if (initializedChains[chain]) {\n            return initializedChains[chain];\n        }\n        throw new Error(\"Chain with name \".concat(chain, \" not supported\"));\n    };\n    /**\n     * Sets the chain\n     * @param chain String ('mainnet') or Number (1) chain\n     *     representation. Or, a Dictionary of chain parameters for a private network.\n     * @returns The dictionary with parameters set as chain\n     */\n    Common.prototype.setChain = function (chain) {\n        var e_2, _a;\n        if (typeof chain === 'number' || typeof chain === 'string' || ethereumjs_util_1.BN.isBN(chain)) {\n            // Filter out genesis states if passed in to customChains\n            var plainCustomChains = void 0;\n            if (this._customChains &&\n                this._customChains.length > 0 &&\n                Array.isArray(this._customChains[0])) {\n                plainCustomChains = this._customChains.map(function (e) { return e[0]; });\n            }\n            else {\n                plainCustomChains = this._customChains;\n            }\n            this._chainParams = Common._getChainParams(chain, plainCustomChains);\n        }\n        else if (typeof chain === 'object') {\n            if (this._customChains.length > 0) {\n                throw new Error('Chain must be a string, number, or BN when initialized with customChains passed in');\n            }\n            var required = ['networkId', 'genesis', 'hardforks', 'bootstrapNodes'];\n            try {\n                for (var required_1 = __values(required), required_1_1 = required_1.next(); !required_1_1.done; required_1_1 = required_1.next()) {\n                    var param = required_1_1.value;\n                    if (chain[param] === undefined) {\n                        throw new Error(\"Missing required chain parameter: \".concat(param));\n                    }\n                }\n            }\n            catch (e_2_1) { e_2 = { error: e_2_1 }; }\n            finally {\n                try {\n                    if (required_1_1 && !required_1_1.done && (_a = required_1.return)) _a.call(required_1);\n                }\n                finally { if (e_2) throw e_2.error; }\n            }\n            this._chainParams = chain;\n        }\n        else {\n            throw new Error('Wrong input format');\n        }\n        return this._chainParams;\n    };\n    /**\n     * Sets the hardfork to get params for\n     * @param hardfork String identifier (e.g. 'byzantium') or {@link Hardfork} enum\n     */\n    Common.prototype.setHardfork = function (hardfork) {\n        var e_3, _a;\n        if (!this._isSupportedHardfork(hardfork)) {\n            throw new Error(\"Hardfork \".concat(hardfork, \" not set as supported in supportedHardforks\"));\n        }\n        var existing = false;\n        try {\n            for (var HARDFORK_CHANGES_1 = __values(hardforks_1.hardforks), HARDFORK_CHANGES_1_1 = HARDFORK_CHANGES_1.next(); !HARDFORK_CHANGES_1_1.done; HARDFORK_CHANGES_1_1 = HARDFORK_CHANGES_1.next()) {\n                var hfChanges = HARDFORK_CHANGES_1_1.value;\n                if (hfChanges[0] === hardfork) {\n                    if (this._hardfork !== hardfork) {\n                        this._hardfork = hardfork;\n                        this.emit('hardforkChanged', hardfork);\n                    }\n                    existing = true;\n                }\n            }\n        }\n        catch (e_3_1) { e_3 = { error: e_3_1 }; }\n        finally {\n            try {\n                if (HARDFORK_CHANGES_1_1 && !HARDFORK_CHANGES_1_1.done && (_a = HARDFORK_CHANGES_1.return)) _a.call(HARDFORK_CHANGES_1);\n            }\n            finally { if (e_3) throw e_3.error; }\n        }\n        if (!existing) {\n            throw new Error(\"Hardfork with name \".concat(hardfork, \" not supported\"));\n        }\n    };\n    /**\n     * Returns the hardfork based on the block number or an optional\n     * total difficulty (Merge HF) provided.\n     *\n     * An optional TD takes precedence in case the corresponding HF block\n     * is set to `null` or otherwise needs to match (if not an error\n     * will be thrown).\n     *\n     * @param blockNumber\n     * @param td\n     * @returns The name of the HF\n     */\n    Common.prototype.getHardforkByBlockNumber = function (blockNumber, td) {\n        var e_4, _a;\n        blockNumber = (0, ethereumjs_util_1.toType)(blockNumber, ethereumjs_util_1.TypeOutput.BN);\n        td = (0, ethereumjs_util_1.toType)(td, ethereumjs_util_1.TypeOutput.BN);\n        var hardfork = Hardfork.Chainstart;\n        var minTdHF;\n        var maxTdHF;\n        var previousHF;\n        try {\n            for (var _b = __values(this.hardforks()), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var hf = _c.value;\n                // Skip comparison for not applied HFs\n                if (hf.block === null) {\n                    if (td !== undefined && td !== null && hf.td !== undefined && hf.td !== null) {\n                        if (td.gte(new ethereumjs_util_1.BN(hf.td))) {\n                            return hf.name;\n                        }\n                    }\n                    continue;\n                }\n                if (blockNumber.gte(new ethereumjs_util_1.BN(hf.block))) {\n                    hardfork = hf.name;\n                }\n                if (td && hf.td) {\n                    if (td.gte(new ethereumjs_util_1.BN(hf.td))) {\n                        minTdHF = hf.name;\n                    }\n                    else {\n                        maxTdHF = previousHF;\n                    }\n                }\n                previousHF = hf.name;\n            }\n        }\n        catch (e_4_1) { e_4 = { error: e_4_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_4) throw e_4.error; }\n        }\n        if (td) {\n            var msgAdd = \"block number: \".concat(blockNumber, \" (-> \").concat(hardfork, \"), \");\n            if (minTdHF) {\n                if (!this.hardforkGteHardfork(hardfork, minTdHF)) {\n                    var msg = 'HF determined by block number is lower than the minimum total difficulty HF';\n                    msgAdd += \"total difficulty: \".concat(td, \" (-> \").concat(minTdHF, \")\");\n                    throw new Error(\"\".concat(msg, \": \").concat(msgAdd));\n                }\n            }\n            if (maxTdHF) {\n                if (!this.hardforkGteHardfork(maxTdHF, hardfork)) {\n                    var msg = 'Maximum HF determined by total difficulty is lower than the block number HF';\n                    msgAdd += \"total difficulty: \".concat(td, \" (-> \").concat(maxTdHF, \")\");\n                    throw new Error(\"\".concat(msg, \": \").concat(msgAdd));\n                }\n            }\n        }\n        return hardfork;\n    };\n    /**\n     * Sets a new hardfork based on the block number or an optional\n     * total difficulty (Merge HF) provided.\n     *\n     * An optional TD takes precedence in case the corresponding HF block\n     * is set to `null` or otherwise needs to match (if not an error\n     * will be thrown).\n     *\n     * @param blockNumber\n     * @param td\n     * @returns The name of the HF set\n     */\n    Common.prototype.setHardforkByBlockNumber = function (blockNumber, td) {\n        var hardfork = this.getHardforkByBlockNumber(blockNumber, td);\n        this.setHardfork(hardfork);\n        return hardfork;\n    };\n    /**\n     * Internal helper function to choose between hardfork set and hardfork provided as param\n     * @param hardfork Hardfork given to function as a parameter\n     * @returns Hardfork chosen to be used\n     */\n    Common.prototype._chooseHardfork = function (hardfork, onlySupported) {\n        if (onlySupported === void 0) { onlySupported = true; }\n        if (!hardfork) {\n            hardfork = this._hardfork;\n        }\n        else if (onlySupported && !this._isSupportedHardfork(hardfork)) {\n            throw new Error(\"Hardfork \".concat(hardfork, \" not set as supported in supportedHardforks\"));\n        }\n        return hardfork;\n    };\n    /**\n     * Internal helper function, returns the params for the given hardfork for the chain set\n     * @param hardfork Hardfork name\n     * @returns Dictionary with hardfork params\n     */\n    Common.prototype._getHardfork = function (hardfork) {\n        var e_5, _a;\n        var hfs = this.hardforks();\n        try {\n            for (var hfs_1 = __values(hfs), hfs_1_1 = hfs_1.next(); !hfs_1_1.done; hfs_1_1 = hfs_1.next()) {\n                var hf = hfs_1_1.value;\n                if (hf['name'] === hardfork)\n                    return hf;\n            }\n        }\n        catch (e_5_1) { e_5 = { error: e_5_1 }; }\n        finally {\n            try {\n                if (hfs_1_1 && !hfs_1_1.done && (_a = hfs_1.return)) _a.call(hfs_1);\n            }\n            finally { if (e_5) throw e_5.error; }\n        }\n        throw new Error(\"Hardfork \".concat(hardfork, \" not defined for chain \").concat(this.chainName()));\n    };\n    /**\n     * Internal helper function to check if a hardfork is set to be supported by the library\n     * @param hardfork Hardfork name\n     * @returns True if hardfork is supported\n     */\n    Common.prototype._isSupportedHardfork = function (hardfork) {\n        var e_6, _a;\n        if (this._supportedHardforks.length > 0) {\n            try {\n                for (var _b = __values(this._supportedHardforks), _c = _b.next(); !_c.done; _c = _b.next()) {\n                    var supportedHf = _c.value;\n                    if (hardfork === supportedHf)\n                        return true;\n                }\n            }\n            catch (e_6_1) { e_6 = { error: e_6_1 }; }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                }\n                finally { if (e_6) throw e_6.error; }\n            }\n        }\n        else {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * Sets the active EIPs\n     * @param eips\n     */\n    Common.prototype.setEIPs = function (eips) {\n        var e_7, _a;\n        var _this = this;\n        if (eips === void 0) { eips = []; }\n        var _loop_1 = function (eip) {\n            if (!(eip in eips_1.EIPs)) {\n                throw new Error(\"\".concat(eip, \" not supported\"));\n            }\n            var minHF = this_1.gteHardfork(eips_1.EIPs[eip]['minimumHardfork']);\n            if (!minHF) {\n                throw new Error(\"\".concat(eip, \" cannot be activated on hardfork \").concat(this_1.hardfork(), \", minimumHardfork: \").concat(minHF));\n            }\n            if (eips_1.EIPs[eip].requiredEIPs) {\n                ;\n                eips_1.EIPs[eip].requiredEIPs.forEach(function (elem) {\n                    if (!(eips.includes(elem) || _this.isActivatedEIP(elem))) {\n                        throw new Error(\"\".concat(eip, \" requires EIP \").concat(elem, \", but is not included in the EIP list\"));\n                    }\n                });\n            }\n        };\n        var this_1 = this;\n        try {\n            for (var eips_2 = __values(eips), eips_2_1 = eips_2.next(); !eips_2_1.done; eips_2_1 = eips_2.next()) {\n                var eip = eips_2_1.value;\n                _loop_1(eip);\n            }\n        }\n        catch (e_7_1) { e_7 = { error: e_7_1 }; }\n        finally {\n            try {\n                if (eips_2_1 && !eips_2_1.done && (_a = eips_2.return)) _a.call(eips_2);\n            }\n            finally { if (e_7) throw e_7.error; }\n        }\n        this._eips = eips;\n    };\n    /**\n     * Returns a parameter for the current chain setup\n     *\n     * If the parameter is present in an EIP, the EIP always takes precendence.\n     * Otherwise the parameter if taken from the latest applied HF with\n     * a change on the respective parameter.\n     *\n     * @param topic Parameter topic ('gasConfig', 'gasPrices', 'vm', 'pow')\n     * @param name Parameter name (e.g. 'minGasLimit' for 'gasConfig' topic)\n     * @returns The value requested or `null` if not found\n     */\n    Common.prototype.param = function (topic, name) {\n        var e_8, _a;\n        // TODO: consider the case that different active EIPs\n        // can change the same parameter\n        var value = null;\n        try {\n            for (var _b = __values(this._eips), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var eip = _c.value;\n                value = this.paramByEIP(topic, name, eip);\n                if (value !== null) {\n                    return value;\n                }\n            }\n        }\n        catch (e_8_1) { e_8 = { error: e_8_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_8) throw e_8.error; }\n        }\n        return this.paramByHardfork(topic, name, this._hardfork);\n    };\n    /**\n     * Returns the parameter corresponding to a hardfork\n     * @param topic Parameter topic ('gasConfig', 'gasPrices', 'vm', 'pow')\n     * @param name Parameter name (e.g. 'minGasLimit' for 'gasConfig' topic)\n     * @param hardfork Hardfork name\n     * @returns The value requested or `null` if not found\n     */\n    Common.prototype.paramByHardfork = function (topic, name, hardfork) {\n        var e_9, _a, e_10, _b;\n        hardfork = this._chooseHardfork(hardfork);\n        var value = null;\n        try {\n            for (var HARDFORK_CHANGES_2 = __values(hardforks_1.hardforks), HARDFORK_CHANGES_2_1 = HARDFORK_CHANGES_2.next(); !HARDFORK_CHANGES_2_1.done; HARDFORK_CHANGES_2_1 = HARDFORK_CHANGES_2.next()) {\n                var hfChanges = HARDFORK_CHANGES_2_1.value;\n                // EIP-referencing HF file (e.g. berlin.json)\n                if ('eips' in hfChanges[1]) {\n                    var hfEIPs = hfChanges[1]['eips'];\n                    try {\n                        for (var hfEIPs_1 = (e_10 = void 0, __values(hfEIPs)), hfEIPs_1_1 = hfEIPs_1.next(); !hfEIPs_1_1.done; hfEIPs_1_1 = hfEIPs_1.next()) {\n                            var eip = hfEIPs_1_1.value;\n                            var valueEIP = this.paramByEIP(topic, name, eip);\n                            value = valueEIP !== null ? valueEIP : value;\n                        }\n                    }\n                    catch (e_10_1) { e_10 = { error: e_10_1 }; }\n                    finally {\n                        try {\n                            if (hfEIPs_1_1 && !hfEIPs_1_1.done && (_b = hfEIPs_1.return)) _b.call(hfEIPs_1);\n                        }\n                        finally { if (e_10) throw e_10.error; }\n                    }\n                    // Paramater-inlining HF file (e.g. istanbul.json)\n                }\n                else {\n                    if (!hfChanges[1][topic]) {\n                        throw new Error(\"Topic \".concat(topic, \" not defined\"));\n                    }\n                    if (hfChanges[1][topic][name] !== undefined) {\n                        value = hfChanges[1][topic][name].v;\n                    }\n                }\n                if (hfChanges[0] === hardfork)\n                    break;\n            }\n        }\n        catch (e_9_1) { e_9 = { error: e_9_1 }; }\n        finally {\n            try {\n                if (HARDFORK_CHANGES_2_1 && !HARDFORK_CHANGES_2_1.done && (_a = HARDFORK_CHANGES_2.return)) _a.call(HARDFORK_CHANGES_2);\n            }\n            finally { if (e_9) throw e_9.error; }\n        }\n        return value;\n    };\n    /**\n     * Returns a parameter corresponding to an EIP\n     * @param topic Parameter topic ('gasConfig', 'gasPrices', 'vm', 'pow')\n     * @param name Parameter name (e.g. 'minGasLimit' for 'gasConfig' topic)\n     * @param eip Number of the EIP\n     * @returns The value requested or `null` if not found\n     */\n    Common.prototype.paramByEIP = function (topic, name, eip) {\n        if (!(eip in eips_1.EIPs)) {\n            throw new Error(\"\".concat(eip, \" not supported\"));\n        }\n        var eipParams = eips_1.EIPs[eip];\n        if (!(topic in eipParams)) {\n            throw new Error(\"Topic \".concat(topic, \" not defined\"));\n        }\n        if (eipParams[topic][name] === undefined) {\n            return null;\n        }\n        var value = eipParams[topic][name].v;\n        return value;\n    };\n    /**\n     * Returns a parameter for the hardfork active on block number\n     * @param topic Parameter topic\n     * @param name Parameter name\n     * @param blockNumber Block number\n     */\n    Common.prototype.paramByBlock = function (topic, name, blockNumber) {\n        var activeHfs = this.activeHardforks(blockNumber);\n        var hardfork = activeHfs[activeHfs.length - 1]['name'];\n        return this.paramByHardfork(topic, name, hardfork);\n    };\n    /**\n     * Checks if an EIP is activated by either being included in the EIPs\n     * manually passed in with the {@link CommonOpts.eips} or in a\n     * hardfork currently being active\n     *\n     * Note: this method only works for EIPs being supported\n     * by the {@link CommonOpts.eips} constructor option\n     * @param eip\n     */\n    Common.prototype.isActivatedEIP = function (eip) {\n        var e_11, _a;\n        if (this.eips().includes(eip)) {\n            return true;\n        }\n        try {\n            for (var HARDFORK_CHANGES_3 = __values(hardforks_1.hardforks), HARDFORK_CHANGES_3_1 = HARDFORK_CHANGES_3.next(); !HARDFORK_CHANGES_3_1.done; HARDFORK_CHANGES_3_1 = HARDFORK_CHANGES_3.next()) {\n                var hfChanges = HARDFORK_CHANGES_3_1.value;\n                var hf = hfChanges[1];\n                if (this.gteHardfork(hf['name']) && 'eips' in hf) {\n                    if (hf['eips'].includes(eip)) {\n                        return true;\n                    }\n                }\n            }\n        }\n        catch (e_11_1) { e_11 = { error: e_11_1 }; }\n        finally {\n            try {\n                if (HARDFORK_CHANGES_3_1 && !HARDFORK_CHANGES_3_1.done && (_a = HARDFORK_CHANGES_3.return)) _a.call(HARDFORK_CHANGES_3);\n            }\n            finally { if (e_11) throw e_11.error; }\n        }\n        return false;\n    };\n    /**\n     * Checks if set or provided hardfork is active on block number\n     * @param hardfork Hardfork name or null (for HF set)\n     * @param blockNumber\n     * @param opts Hardfork options (onlyActive unused)\n     * @returns True if HF is active on block number\n     */\n    Common.prototype.hardforkIsActiveOnBlock = function (hardfork, blockNumber, opts) {\n        var _a;\n        if (opts === void 0) { opts = {}; }\n        blockNumber = (0, ethereumjs_util_1.toType)(blockNumber, ethereumjs_util_1.TypeOutput.BN);\n        var onlySupported = (_a = opts.onlySupported) !== null && _a !== void 0 ? _a : false;\n        hardfork = this._chooseHardfork(hardfork, onlySupported);\n        var hfBlock = this.hardforkBlockBN(hardfork);\n        if (hfBlock && blockNumber.gte(hfBlock)) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * Alias to hardforkIsActiveOnBlock when hardfork is set\n     * @param blockNumber\n     * @param opts Hardfork options (onlyActive unused)\n     * @returns True if HF is active on block number\n     */\n    Common.prototype.activeOnBlock = function (blockNumber, opts) {\n        return this.hardforkIsActiveOnBlock(null, blockNumber, opts);\n    };\n    /**\n     * Sequence based check if given or set HF1 is greater than or equal HF2\n     * @param hardfork1 Hardfork name or null (if set)\n     * @param hardfork2 Hardfork name\n     * @param opts Hardfork options\n     * @returns True if HF1 gte HF2\n     */\n    Common.prototype.hardforkGteHardfork = function (hardfork1, hardfork2, opts) {\n        var e_12, _a;\n        if (opts === void 0) { opts = {}; }\n        var onlyActive = opts.onlyActive === undefined ? false : opts.onlyActive;\n        hardfork1 = this._chooseHardfork(hardfork1, opts.onlySupported);\n        var hardforks;\n        if (onlyActive) {\n            hardforks = this.activeHardforks(null, opts);\n        }\n        else {\n            hardforks = this.hardforks();\n        }\n        var posHf1 = -1, posHf2 = -1;\n        var index = 0;\n        try {\n            for (var hardforks_2 = __values(hardforks), hardforks_2_1 = hardforks_2.next(); !hardforks_2_1.done; hardforks_2_1 = hardforks_2.next()) {\n                var hf = hardforks_2_1.value;\n                if (hf['name'] === hardfork1)\n                    posHf1 = index;\n                if (hf['name'] === hardfork2)\n                    posHf2 = index;\n                index += 1;\n            }\n        }\n        catch (e_12_1) { e_12 = { error: e_12_1 }; }\n        finally {\n            try {\n                if (hardforks_2_1 && !hardforks_2_1.done && (_a = hardforks_2.return)) _a.call(hardforks_2);\n            }\n            finally { if (e_12) throw e_12.error; }\n        }\n        return posHf1 >= posHf2 && posHf2 !== -1;\n    };\n    /**\n     * Alias to hardforkGteHardfork when hardfork is set\n     * @param hardfork Hardfork name\n     * @param opts Hardfork options\n     * @returns True if hardfork set is greater than hardfork provided\n     */\n    Common.prototype.gteHardfork = function (hardfork, opts) {\n        return this.hardforkGteHardfork(null, hardfork, opts);\n    };\n    /**\n     * Checks if given or set hardfork is active on the chain\n     * @param hardfork Hardfork name, optional if HF set\n     * @param opts Hardfork options (onlyActive unused)\n     * @returns True if hardfork is active on the chain\n     */\n    Common.prototype.hardforkIsActiveOnChain = function (hardfork, opts) {\n        var e_13, _a;\n        var _b;\n        if (opts === void 0) { opts = {}; }\n        var onlySupported = (_b = opts.onlySupported) !== null && _b !== void 0 ? _b : false;\n        hardfork = this._chooseHardfork(hardfork, onlySupported);\n        try {\n            for (var _c = __values(this.hardforks()), _d = _c.next(); !_d.done; _d = _c.next()) {\n                var hf = _d.value;\n                if (hf['name'] === hardfork && hf['block'] !== null)\n                    return true;\n            }\n        }\n        catch (e_13_1) { e_13 = { error: e_13_1 }; }\n        finally {\n            try {\n                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n            }\n            finally { if (e_13) throw e_13.error; }\n        }\n        return false;\n    };\n    /**\n     * Returns the active hardfork switches for the current chain\n     * @param blockNumber up to block if provided, otherwise for the whole chain\n     * @param opts Hardfork options (onlyActive unused)\n     * @return Array with hardfork arrays\n     */\n    Common.prototype.activeHardforks = function (blockNumber, opts) {\n        var e_14, _a;\n        if (opts === void 0) { opts = {}; }\n        var activeHardforks = [];\n        var hfs = this.hardforks();\n        try {\n            for (var hfs_2 = __values(hfs), hfs_2_1 = hfs_2.next(); !hfs_2_1.done; hfs_2_1 = hfs_2.next()) {\n                var hf = hfs_2_1.value;\n                if (hf['block'] === null)\n                    continue;\n                if (blockNumber !== undefined && blockNumber !== null && blockNumber < hf['block'])\n                    break;\n                if (opts.onlySupported && !this._isSupportedHardfork(hf['name']))\n                    continue;\n                activeHardforks.push(hf);\n            }\n        }\n        catch (e_14_1) { e_14 = { error: e_14_1 }; }\n        finally {\n            try {\n                if (hfs_2_1 && !hfs_2_1.done && (_a = hfs_2.return)) _a.call(hfs_2);\n            }\n            finally { if (e_14) throw e_14.error; }\n        }\n        return activeHardforks;\n    };\n    /**\n     * Returns the latest active hardfork name for chain or block or throws if unavailable\n     * @param blockNumber up to block if provided, otherwise for the whole chain\n     * @param opts Hardfork options (onlyActive unused)\n     * @return Hardfork name\n     */\n    Common.prototype.activeHardfork = function (blockNumber, opts) {\n        if (opts === void 0) { opts = {}; }\n        var activeHardforks = this.activeHardforks(blockNumber, opts);\n        if (activeHardforks.length > 0) {\n            return activeHardforks[activeHardforks.length - 1]['name'];\n        }\n        else {\n            throw new Error(\"No (supported) active hardfork found\");\n        }\n    };\n    /**\n     * Returns the hardfork change block for hardfork provided or set\n     * @param hardfork Hardfork name, optional if HF set\n     * @returns Block number or null if unscheduled\n     * @deprecated Please use {@link Common.hardforkBlockBN} for large number support\n     */\n    Common.prototype.hardforkBlock = function (hardfork) {\n        var block = this.hardforkBlockBN(hardfork);\n        return (0, ethereumjs_util_1.toType)(block, ethereumjs_util_1.TypeOutput.Number);\n    };\n    /**\n     * Returns the hardfork change block for hardfork provided or set\n     * @param hardfork Hardfork name, optional if HF set\n     * @returns Block number or null if unscheduled\n     */\n    Common.prototype.hardforkBlockBN = function (hardfork) {\n        hardfork = this._chooseHardfork(hardfork, false);\n        var block = this._getHardfork(hardfork)['block'];\n        if (block === undefined || block === null) {\n            return null;\n        }\n        return new ethereumjs_util_1.BN(block);\n    };\n    /**\n     * Returns the hardfork change total difficulty (Merge HF) for hardfork provided or set\n     * @param hardfork Hardfork name, optional if HF set\n     * @returns Total difficulty or null if no set\n     */\n    Common.prototype.hardforkTD = function (hardfork) {\n        hardfork = this._chooseHardfork(hardfork, false);\n        var td = this._getHardfork(hardfork)['td'];\n        if (td === undefined || td === null) {\n            return null;\n        }\n        return new ethereumjs_util_1.BN(td);\n    };\n    /**\n     * True if block number provided is the hardfork (given or set) change block\n     * @param blockNumber Number of the block to check\n     * @param hardfork Hardfork name, optional if HF set\n     * @returns True if blockNumber is HF block\n     */\n    Common.prototype.isHardforkBlock = function (blockNumber, hardfork) {\n        blockNumber = (0, ethereumjs_util_1.toType)(blockNumber, ethereumjs_util_1.TypeOutput.BN);\n        hardfork = this._chooseHardfork(hardfork, false);\n        var block = this.hardforkBlockBN(hardfork);\n        return block ? block.eq(blockNumber) : false;\n    };\n    /**\n     * Returns the change block for the next hardfork after the hardfork provided or set\n     * @param hardfork Hardfork name, optional if HF set\n     * @returns Block number or null if not available\n     * @deprecated Please use {@link Common.nextHardforkBlockBN} for large number support\n     */\n    Common.prototype.nextHardforkBlock = function (hardfork) {\n        var block = this.nextHardforkBlockBN(hardfork);\n        return (0, ethereumjs_util_1.toType)(block, ethereumjs_util_1.TypeOutput.Number);\n    };\n    /**\n     * Returns the change block for the next hardfork after the hardfork provided or set\n     * @param hardfork Hardfork name, optional if HF set\n     * @returns Block number or null if not available\n     */\n    Common.prototype.nextHardforkBlockBN = function (hardfork) {\n        hardfork = this._chooseHardfork(hardfork, false);\n        var hfBlock = this.hardforkBlockBN(hardfork);\n        if (hfBlock === null) {\n            return null;\n        }\n        // Next fork block number or null if none available\n        // Logic: if accumulator is still null and on the first occurrence of\n        // a block greater than the current hfBlock set the accumulator,\n        // pass on the accumulator as the final result from this time on\n        var nextHfBlock = this.hardforks().reduce(function (acc, hf) {\n            var block = new ethereumjs_util_1.BN(hf.block);\n            return block.gt(hfBlock) && acc === null ? block : acc;\n        }, null);\n        return nextHfBlock;\n    };\n    /**\n     * True if block number provided is the hardfork change block following the hardfork given or set\n     * @param blockNumber Number of the block to check\n     * @param hardfork Hardfork name, optional if HF set\n     * @returns True if blockNumber is HF block\n     */\n    Common.prototype.isNextHardforkBlock = function (blockNumber, hardfork) {\n        blockNumber = (0, ethereumjs_util_1.toType)(blockNumber, ethereumjs_util_1.TypeOutput.BN);\n        hardfork = this._chooseHardfork(hardfork, false);\n        var nextHardforkBlock = this.nextHardforkBlockBN(hardfork);\n        return nextHardforkBlock === null ? false : nextHardforkBlock.eq(blockNumber);\n    };\n    /**\n     * Internal helper function to calculate a fork hash\n     * @param hardfork Hardfork name\n     * @returns Fork hash as hex string\n     */\n    Common.prototype._calcForkHash = function (hardfork) {\n        var e_15, _a;\n        var genesis = Buffer.from(this.genesis().hash.substr(2), 'hex');\n        var hfBuffer = Buffer.alloc(0);\n        var prevBlock = 0;\n        try {\n            for (var _b = __values(this.hardforks()), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var hf = _c.value;\n                var block = hf.block;\n                // Skip for chainstart (0), not applied HFs (null) and\n                // when already applied on same block number HFs\n                if (block !== 0 && block !== null && block !== prevBlock) {\n                    var hfBlockBuffer = Buffer.from(block.toString(16).padStart(16, '0'), 'hex');\n                    hfBuffer = Buffer.concat([hfBuffer, hfBlockBuffer]);\n                }\n                if (hf.name === hardfork)\n                    break;\n                if (block !== null) {\n                    prevBlock = block;\n                }\n            }\n        }\n        catch (e_15_1) { e_15 = { error: e_15_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_15) throw e_15.error; }\n        }\n        var inputBuffer = Buffer.concat([genesis, hfBuffer]);\n        // CRC32 delivers result as signed (negative) 32-bit integer,\n        // convert to hex string\n        var forkhash = (0, ethereumjs_util_1.intToBuffer)((0, crc_32_1.buf)(inputBuffer) >>> 0).toString('hex');\n        return \"0x\".concat(forkhash);\n    };\n    /**\n     * Returns an eth/64 compliant fork hash (EIP-2124)\n     * @param hardfork Hardfork name, optional if HF set\n     */\n    Common.prototype.forkHash = function (hardfork) {\n        hardfork = this._chooseHardfork(hardfork, false);\n        var data = this._getHardfork(hardfork);\n        if (data['block'] === null && data['td'] === undefined) {\n            var msg = 'No fork hash calculation possible for future hardfork';\n            throw new Error(msg);\n        }\n        if (data['forkHash'] !== undefined) {\n            return data['forkHash'];\n        }\n        return this._calcForkHash(hardfork);\n    };\n    /**\n     *\n     * @param forkHash Fork hash as a hex string\n     * @returns Array with hardfork data (name, block, forkHash)\n     */\n    Common.prototype.hardforkForForkHash = function (forkHash) {\n        var resArray = this.hardforks().filter(function (hf) {\n            return hf.forkHash === forkHash;\n        });\n        return resArray.length >= 1 ? resArray[resArray.length - 1] : null;\n    };\n    /**\n     * Returns the Genesis parameters of the current chain\n     * @returns Genesis dictionary\n     */\n    Common.prototype.genesis = function () {\n        return this._chainParams['genesis'];\n    };\n    /**\n     * Returns the Genesis state of the current chain,\n     * all values are provided as hex-prefixed strings.\n     */\n    Common.prototype.genesisState = function () {\n        var e_16, _a;\n        // Use require statements here in favor of import statements\n        // to load json files on demand\n        // (high memory usage by large mainnet.json genesis state file)\n        switch (this.chainName()) {\n            case 'mainnet':\n                return require('./genesisStates/mainnet.json');\n            case 'ropsten':\n                return require('./genesisStates/ropsten.json');\n            case 'rinkeby':\n                return require('./genesisStates/rinkeby.json');\n            case 'kovan':\n                return require('./genesisStates/kovan.json');\n            case 'goerli':\n                return require('./genesisStates/goerli.json');\n            case 'sepolia':\n                return require('./genesisStates/sepolia.json');\n        }\n        // Custom chains with genesis state provided\n        if (this._customChains &&\n            this._customChains.length > 0 &&\n            Array.isArray(this._customChains[0])) {\n            try {\n                for (var _b = __values(this._customChains), _c = _b.next(); !_c.done; _c = _b.next()) {\n                    var chainArrayWithGenesis = _c.value;\n                    if (chainArrayWithGenesis[0].name === this.chainName()) {\n                        return chainArrayWithGenesis[1];\n                    }\n                }\n            }\n            catch (e_16_1) { e_16 = { error: e_16_1 }; }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                }\n                finally { if (e_16) throw e_16.error; }\n            }\n        }\n        return {};\n    };\n    /**\n     * Returns the hardforks for current chain\n     * @returns {Array} Array with arrays of hardforks\n     */\n    Common.prototype.hardforks = function () {\n        return this._chainParams['hardforks'];\n    };\n    /**\n     * Returns bootstrap nodes for the current chain\n     * @returns {Dictionary} Dict with bootstrap nodes\n     */\n    Common.prototype.bootstrapNodes = function () {\n        return this._chainParams['bootstrapNodes'];\n    };\n    /**\n     * Returns DNS networks for the current chain\n     * @returns {String[]} Array of DNS ENR urls\n     */\n    Common.prototype.dnsNetworks = function () {\n        return this._chainParams['dnsNetworks'];\n    };\n    /**\n     * Returns the hardfork set\n     * @returns Hardfork name\n     */\n    Common.prototype.hardfork = function () {\n        return this._hardfork;\n    };\n    /**\n     * Returns the Id of current chain\n     * @returns chain Id\n     * @deprecated Please use {@link Common.chainIdBN} for large number support\n     */\n    Common.prototype.chainId = function () {\n        return (0, ethereumjs_util_1.toType)(this.chainIdBN(), ethereumjs_util_1.TypeOutput.Number);\n    };\n    /**\n     * Returns the Id of current chain\n     * @returns chain Id\n     */\n    Common.prototype.chainIdBN = function () {\n        return new ethereumjs_util_1.BN(this._chainParams['chainId']);\n    };\n    /**\n     * Returns the name of current chain\n     * @returns chain name (lower case)\n     */\n    Common.prototype.chainName = function () {\n        return this._chainParams['name'];\n    };\n    /**\n     * Returns the Id of current network\n     * @returns network Id\n     * @deprecated Please use {@link Common.networkIdBN} for large number support\n     */\n    Common.prototype.networkId = function () {\n        return (0, ethereumjs_util_1.toType)(this.networkIdBN(), ethereumjs_util_1.TypeOutput.Number);\n    };\n    /**\n     * Returns the Id of current network\n     * @returns network Id\n     */\n    Common.prototype.networkIdBN = function () {\n        return new ethereumjs_util_1.BN(this._chainParams['networkId']);\n    };\n    /**\n     * Returns the active EIPs\n     * @returns List of EIPs\n     */\n    Common.prototype.eips = function () {\n        return this._eips;\n    };\n    /**\n     * Returns the consensus type of the network\n     * Possible values: \"pow\"|\"poa\"|\"pos\"\n     *\n     * Note: This value can update along a hardfork.\n     */\n    Common.prototype.consensusType = function () {\n        var e_17, _a;\n        var hardfork = this.hardfork();\n        var value;\n        try {\n            for (var HARDFORK_CHANGES_4 = __values(hardforks_1.hardforks), HARDFORK_CHANGES_4_1 = HARDFORK_CHANGES_4.next(); !HARDFORK_CHANGES_4_1.done; HARDFORK_CHANGES_4_1 = HARDFORK_CHANGES_4.next()) {\n                var hfChanges = HARDFORK_CHANGES_4_1.value;\n                if ('consensus' in hfChanges[1]) {\n                    value = hfChanges[1]['consensus']['type'];\n                }\n                if (hfChanges[0] === hardfork)\n                    break;\n            }\n        }\n        catch (e_17_1) { e_17 = { error: e_17_1 }; }\n        finally {\n            try {\n                if (HARDFORK_CHANGES_4_1 && !HARDFORK_CHANGES_4_1.done && (_a = HARDFORK_CHANGES_4.return)) _a.call(HARDFORK_CHANGES_4);\n            }\n            finally { if (e_17) throw e_17.error; }\n        }\n        if (value) {\n            return value;\n        }\n        return this._chainParams['consensus']['type'];\n    };\n    /**\n     * Returns the concrete consensus implementation\n     * algorithm or protocol for the network\n     * e.g. \"ethash\" for \"pow\" consensus type,\n     * \"clique\" for \"poa\" consensus type or\n     * \"casper\" for \"pos\" consensus type.\n     *\n     * Note: This value can update along a hardfork.\n     */\n    Common.prototype.consensusAlgorithm = function () {\n        var e_18, _a;\n        var hardfork = this.hardfork();\n        var value;\n        try {\n            for (var HARDFORK_CHANGES_5 = __values(hardforks_1.hardforks), HARDFORK_CHANGES_5_1 = HARDFORK_CHANGES_5.next(); !HARDFORK_CHANGES_5_1.done; HARDFORK_CHANGES_5_1 = HARDFORK_CHANGES_5.next()) {\n                var hfChanges = HARDFORK_CHANGES_5_1.value;\n                if ('consensus' in hfChanges[1]) {\n                    value = hfChanges[1]['consensus']['algorithm'];\n                }\n                if (hfChanges[0] === hardfork)\n                    break;\n            }\n        }\n        catch (e_18_1) { e_18 = { error: e_18_1 }; }\n        finally {\n            try {\n                if (HARDFORK_CHANGES_5_1 && !HARDFORK_CHANGES_5_1.done && (_a = HARDFORK_CHANGES_5.return)) _a.call(HARDFORK_CHANGES_5);\n            }\n            finally { if (e_18) throw e_18.error; }\n        }\n        if (value) {\n            return value;\n        }\n        return this._chainParams['consensus']['algorithm'];\n    };\n    /**\n     * Returns a dictionary with consensus configuration\n     * parameters based on the consensus algorithm\n     *\n     * Expected returns (parameters must be present in\n     * the respective chain json files):\n     *\n     * ethash: -\n     * clique: period, epoch\n     * aura: -\n     * casper: -\n     *\n     * Note: This value can update along a hardfork.\n     */\n    Common.prototype.consensusConfig = function () {\n        var e_19, _a;\n        var hardfork = this.hardfork();\n        var value;\n        try {\n            for (var HARDFORK_CHANGES_6 = __values(hardforks_1.hardforks), HARDFORK_CHANGES_6_1 = HARDFORK_CHANGES_6.next(); !HARDFORK_CHANGES_6_1.done; HARDFORK_CHANGES_6_1 = HARDFORK_CHANGES_6.next()) {\n                var hfChanges = HARDFORK_CHANGES_6_1.value;\n                if ('consensus' in hfChanges[1]) {\n                    // The config parameter is named after the respective consensus algorithm\n                    value = hfChanges[1]['consensus'][hfChanges[1]['consensus']['algorithm']];\n                }\n                if (hfChanges[0] === hardfork)\n                    break;\n            }\n        }\n        catch (e_19_1) { e_19 = { error: e_19_1 }; }\n        finally {\n            try {\n                if (HARDFORK_CHANGES_6_1 && !HARDFORK_CHANGES_6_1.done && (_a = HARDFORK_CHANGES_6.return)) _a.call(HARDFORK_CHANGES_6);\n            }\n            finally { if (e_19) throw e_19.error; }\n        }\n        if (value) {\n            return value;\n        }\n        var consensusAlgorithm = this.consensusAlgorithm();\n        return this._chainParams['consensus'][consensusAlgorithm];\n    };\n    /**\n     * Returns a deep copy of this {@link Common} instance.\n     */\n    Common.prototype.copy = function () {\n        var copy = Object.assign(Object.create(Object.getPrototypeOf(this)), this);\n        copy.removeAllListeners();\n        return copy;\n    };\n    return Common;\n}(events_1.EventEmitter));\nexports.default = Common;\n//# sourceMappingURL=index.js.map","/*! crc32.js (C) 2014-present SheetJS -- http://sheetjs.com */\n/* vim: set ts=2: */\n/*exported CRC32 */\nvar CRC32;\n(function (factory) {\n\t/*jshint ignore:start */\n\t/*eslint-disable */\n\tif(typeof DO_NOT_EXPORT_CRC === 'undefined') {\n\t\tif('object' === typeof exports) {\n\t\t\tfactory(exports);\n\t\t} else if ('function' === typeof define && define.amd) {\n\t\t\tdefine(function () {\n\t\t\t\tvar module = {};\n\t\t\t\tfactory(module);\n\t\t\t\treturn module;\n\t\t\t});\n\t\t} else {\n\t\t\tfactory(CRC32 = {});\n\t\t}\n\t} else {\n\t\tfactory(CRC32 = {});\n\t}\n\t/*eslint-enable */\n\t/*jshint ignore:end */\n}(function(CRC32) {\nCRC32.version = '1.2.2';\n/*global Int32Array */\nfunction signed_crc_table() {\n\tvar c = 0, table = new Array(256);\n\n\tfor(var n =0; n != 256; ++n){\n\t\tc = n;\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\ttable[n] = c;\n\t}\n\n\treturn typeof Int32Array !== 'undefined' ? new Int32Array(table) : table;\n}\n\nvar T0 = signed_crc_table();\nfunction slice_by_16_tables(T) {\n\tvar c = 0, v = 0, n = 0, table = typeof Int32Array !== 'undefined' ? new Int32Array(4096) : new Array(4096) ;\n\n\tfor(n = 0; n != 256; ++n) table[n] = T[n];\n\tfor(n = 0; n != 256; ++n) {\n\t\tv = T[n];\n\t\tfor(c = 256 + n; c < 4096; c += 256) v = table[c] = (v >>> 8) ^ T[v & 0xFF];\n\t}\n\tvar out = [];\n\tfor(n = 1; n != 16; ++n) out[n - 1] = typeof Int32Array !== 'undefined' ? table.subarray(n * 256, n * 256 + 256) : table.slice(n * 256, n * 256 + 256);\n\treturn out;\n}\nvar TT = slice_by_16_tables(T0);\nvar T1 = TT[0],  T2 = TT[1],  T3 = TT[2],  T4 = TT[3],  T5 = TT[4];\nvar T6 = TT[5],  T7 = TT[6],  T8 = TT[7],  T9 = TT[8],  Ta = TT[9];\nvar Tb = TT[10], Tc = TT[11], Td = TT[12], Te = TT[13], Tf = TT[14];\nfunction crc32_bstr(bstr, seed) {\n\tvar C = seed ^ -1;\n\tfor(var i = 0, L = bstr.length; i < L;) C = (C>>>8) ^ T0[(C^bstr.charCodeAt(i++))&0xFF];\n\treturn ~C;\n}\n\nfunction crc32_buf(B, seed) {\n\tvar C = seed ^ -1, L = B.length - 15, i = 0;\n\tfor(; i < L;) C =\n\t\tTf[B[i++] ^ (C & 255)] ^\n\t\tTe[B[i++] ^ ((C >> 8) & 255)] ^\n\t\tTd[B[i++] ^ ((C >> 16) & 255)] ^\n\t\tTc[B[i++] ^ (C >>> 24)] ^\n\t\tTb[B[i++]] ^ Ta[B[i++]] ^ T9[B[i++]] ^ T8[B[i++]] ^\n\t\tT7[B[i++]] ^ T6[B[i++]] ^ T5[B[i++]] ^ T4[B[i++]] ^\n\t\tT3[B[i++]] ^ T2[B[i++]] ^ T1[B[i++]] ^ T0[B[i++]];\n\tL += 15;\n\twhile(i < L) C = (C>>>8) ^ T0[(C^B[i++])&0xFF];\n\treturn ~C;\n}\n\nfunction crc32_str(str, seed) {\n\tvar C = seed ^ -1;\n\tfor(var i = 0, L = str.length, c = 0, d = 0; i < L;) {\n\t\tc = str.charCodeAt(i++);\n\t\tif(c < 0x80) {\n\t\t\tC = (C>>>8) ^ T0[(C^c)&0xFF];\n\t\t} else if(c < 0x800) {\n\t\t\tC = (C>>>8) ^ T0[(C ^ (192|((c>>6)&31)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|(c&63)))&0xFF];\n\t\t} else if(c >= 0xD800 && c < 0xE000) {\n\t\t\tc = (c&1023)+64; d = str.charCodeAt(i++)&1023;\n\t\t\tC = (C>>>8) ^ T0[(C ^ (240|((c>>8)&7)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|((c>>2)&63)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|((d>>6)&15)|((c&3)<<4)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|(d&63)))&0xFF];\n\t\t} else {\n\t\t\tC = (C>>>8) ^ T0[(C ^ (224|((c>>12)&15)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|((c>>6)&63)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|(c&63)))&0xFF];\n\t\t}\n\t}\n\treturn ~C;\n}\nCRC32.table = T0;\n// $FlowIgnore\nCRC32.bstr = crc32_bstr;\n// $FlowIgnore\nCRC32.buf = crc32_buf;\n// $FlowIgnore\nCRC32.str = crc32_str;\n}));\n"],"names":["__createBinding","this","Object","create","o","m","k","k2","undefined","desc","getOwnPropertyDescriptor","__esModule","writable","configurable","enumerable","get","defineProperty","__setModuleDefault","v","value","__importStar","mod","result","prototype","hasOwnProperty","call","__values","s","Symbol","iterator","i","length","next","done","TypeError","__read","n","r","e","ar","push","error","exports","BaseTransaction","common_1","ethereumjs_util_1","types_1","txData","opts","cache","hash","dataFee","activeCapabilities","DEFAULT_CHAIN","Chain","Mainnet","DEFAULT_HARDFORK","Hardfork","Istanbul","nonce","gasLimit","to","data","type","_type","BN","toBuffer","toNumber","txOptions","toB","vB","rB","sB","Address","_validateCannotExceedMaxInteger","supports","capability","includes","validate","stringError","errors","getBaseFee","gt","concat","isSigned","verifySignature","fee","getDataFee","addn","common","param","gteHardfork","toCreationAddress","iaddn","txDataZero","txDataNonZero","cost","isActivatedEIP","dataLength","Math","ceil","initCodeCost","imuln","iadd","buf","_a","publicKey","getSenderPublicKey","unpadBuffer","getSenderAddress","publicToAddress","sign","privateKey","msg","_errorMsg","Error","hackApplied","Capability","EIP155ReplayProtection","msgHash","getMessageToSign","ecsign","tx","_processSignature","index","indexOf","splice","_getCommon","chainId","chainIdBN","eq","copy","default","isSupportedChainId","chain","hardfork","forCustomChain","name","networkId","values","bits","cannotEqual","e_1","_b","entries","_c","_d","key","gte","MAX_UINT64","MAX_INTEGER","e_1_1","return","_getSharedErrorPostfix","bufferToHex","toString","hf","postfix","extendStatics","__extends","d","b","setPrototypeOf","__proto__","Array","p","String","__","constructor","__assign","assign","t","arguments","apply","baseTransaction_1","util_1","TRANSACTION_TYPE_BUFFER","Buffer","from","padStart","FeeMarketEIP1559Transaction","_super","_this","accessList","maxFeePerGas","maxPriorityFeePerGas","accessListData","AccessLists","getAccessListData","AccessListJSON","verifyAccessList","mul","lt","eqn","N_DIV_2","checkMaxInitCodeSize","freeze","fromTxData","fromSerializedTx","serialized","slice","equals","rlp","decode","isArray","fromValuesArray","fromRlpSerializedTx","validateNoLeadingZeroes","getDataFeeEIP2930","isFrozen","getUpfrontCost","baseFee","gasPrice","min","sub","add","raw","bnToUnpaddedBuffer","serialize","base","encode","hashMessage","message","keccak256","getMessageToVerifySignature","ecrecover","toJSON","accessListJSON","getAccessListJSON","bnToHex","errorStr","AccessListEIP2930Transaction","yParity","__exportStar","__importDefault","TransactionFactory","Transaction","legacyTransaction_1","eip2930Transaction_1","transactionFactory_1","eip1559Transaction_1","_validateTxV","chainIdDoubled","muln","_getMessageToSign","rlphash","vBN","ltn","numSub","subn","isEven","divn","_unsignedTxImplementsEIP155","_signedTxImplementsEIP155","onEIP155BlockOrLater","_1","txType","fromSerializedData","EIP","fromBlockBodyData","isBuffer","getTransactionClass","transactionID","_common","isAccessList","isAccessListBuffer","input","firstItem","bufferAccessList","newAccessList","item","addressBuffer","address","storageItems","storageKeys","json","jsonItem","accessListItem","storageSlots","storageSlot","JSONItem","setLengthLeft","slot","accessListStorageKeyCost","accessListAddressCost","slots","chains","_getInitializedChains","mainnet_json_1","ropsten_json_1","rinkeby_json_1","kovan_json_1","goerli_json_1","sepolia_json_1","customChains","names","mainnet","ropsten","rinkeby","kovan","goerli","sepolia","customChains_1","customChains_1_1","name_1","EIPs","hardforks","ConsensusAlgorithm","ConsensusType","CustomChain","events_1","crc_32_1","chains_1","hardforks_1","eips_1","Common","_supportedHardforks","_eips","_customChains","_chainParams","setChain","defaultHardfork","_e","forkHash","_calcForkHash","_hardfork","supportedHardforks","setHardfork","eips","setEIPs","custom","chainParamsOrName","baseChain","standardChainParams","_getChainParams","PolygonMainnet","PolygonMumbai","ArbitrumRinkebyTestnet","xDaiChain","OptimisticKovan","Berlin","OptimisticEthereum","customChainParams","initializedChains","Boolean","isBN","e_2","plainCustomChains","map","required_1","required_1_1","e_2_1","e_3","_isSupportedHardfork","existing","HARDFORK_CHANGES_1","HARDFORK_CHANGES_1_1","emit","e_3_1","getHardforkByBlockNumber","blockNumber","td","e_4","toType","TypeOutput","minTdHF","maxTdHF","previousHF","Chainstart","block","e_4_1","msgAdd","hardforkGteHardfork","setHardforkByBlockNumber","_chooseHardfork","onlySupported","_getHardfork","e_5","hfs","hfs_1","hfs_1_1","e_5_1","chainName","e_6","e_6_1","e_7","_loop_1","eip","minHF","this_1","requiredEIPs","forEach","elem","eips_2","eips_2_1","e_7_1","topic","e_8","paramByEIP","e_8_1","paramByHardfork","e_9","e_10","HARDFORK_CHANGES_2","HARDFORK_CHANGES_2_1","hfChanges","hfEIPs","hfEIPs_1","hfEIPs_1_1","valueEIP","e_10_1","e_9_1","eipParams","paramByBlock","activeHfs","activeHardforks","e_11","HARDFORK_CHANGES_3","HARDFORK_CHANGES_3_1","e_11_1","hardforkIsActiveOnBlock","hfBlock","hardforkBlockBN","activeOnBlock","hardfork1","hardfork2","e_12","onlyActive","posHf1","posHf2","hardforks_2","hardforks_2_1","e_12_1","hardforkIsActiveOnChain","e_13","e_13_1","e_14","hfs_2","hfs_2_1","e_14_1","activeHardfork","hardforkBlock","Number","hardforkTD","isHardforkBlock","nextHardforkBlock","nextHardforkBlockBN","reduce","acc","isNextHardforkBlock","e_15","genesis","substr","hfBuffer","alloc","prevBlock","hfBlockBuffer","e_15_1","inputBuffer","forkhash","intToBuffer","hardforkForForkHash","resArray","filter","genesisState","e_16","chainArrayWithGenesis","e_16_1","bootstrapNodes","dnsNetworks","networkIdBN","consensusType","e_17","HARDFORK_CHANGES_4","HARDFORK_CHANGES_4_1","e_17_1","consensusAlgorithm","e_18","HARDFORK_CHANGES_5","HARDFORK_CHANGES_5_1","e_18_1","consensusConfig","e_19","HARDFORK_CHANGES_6","HARDFORK_CHANGES_6_1","e_19_1","getPrototypeOf","removeAllListeners","EventEmitter","factory","CRC32","version","T0","c","table","Int32Array","signed_crc_table","TT","T","out","subarray","slice_by_16_tables","T1","T2","T3","T4","T5","T6","T7","T8","T9","Ta","Tb","Tc","Td","Te","Tf","bstr","seed","C","L","charCodeAt","B","str","DO_NOT_EXPORT_CRC"],"sourceRoot":""}