{"version":3,"file":"chunk/4112.d6846ab5.js","mappings":"yLAEO,MAAMA,EAAU,6CACVC,EAAM,CACjB,wDACA,mBACA,oCACA,mCACA,mCACA,kCACA,sBACA,yDACA,yCACA,+DACA,6BACA,sDACA,uDACA,mDACA,0CACA,gCACA,wDACA,gDACA,uEACA,4CACA,mGACA,qFACA,8FACA,oGACA,iEACA,6BACA,kEACA,gEACA,0DACA,iFACA,2EACA,4EACA,mEACA,2DACA,gCACA,gDACA,4EACA,2CACA,sFACA,iFACA,iFACA,+CACA,gDACA,wCACA,uEACA,0CACA,gDACA,+DACA,iF","sources":["webpack://@snx-v3/ultrasound-homes/../../contracts/src/13370-main/USDProxy.ts"],"sourcesContent":["// !!! DO NOT EDIT !!! Automatically generated file\n\nexport const address = '0x629673e90e428069AeB328DE4EF2040a7C22f723';\nexport const abi = [\n  'error ImplementationIsSterile(address implementation)',\n  'error NoChange()',\n  'error NotAContract(address contr)',\n  'error NotNominated(address addr)',\n  'error Unauthorized(address addr)',\n  'error UpgradeSimulationFailed()',\n  'error ZeroAddress()',\n  'event OwnerChanged(address oldOwner, address newOwner)',\n  'event OwnerNominated(address newOwner)',\n  'event Upgraded(address indexed self, address implementation)',\n  'function acceptOwnership()',\n  'function getImplementation() view returns (address)',\n  'function nominateNewOwner(address newNominatedOwner)',\n  'function nominatedOwner() view returns (address)',\n  'function owner() view returns (address)',\n  'function renounceNomination()',\n  'function simulateUpgradeTo(address newImplementation)',\n  'function upgradeTo(address newImplementation)',\n  'error MismatchAssociatedSystemKind(bytes32 expected, bytes32 actual)',\n  'error MissingAssociatedSystem(bytes32 id)',\n  'event AssociatedSystemSet(bytes32 indexed kind, bytes32 indexed id, address proxy, address impl)',\n  'function getAssociatedSystem(bytes32 id) view returns (address addr, bytes32 kind)',\n  'function initOrUpgradeNft(bytes32 id, string name, string symbol, string uri, address impl)',\n  'function initOrUpgradeToken(bytes32 id, string name, string symbol, uint8 decimals, address impl)',\n  'function registerUnmanagedSystem(bytes32 id, address endpoint)',\n  'error AlreadyInitialized()',\n  'error InsufficientAllowance(uint256 required, uint256 existing)',\n  'error InsufficientBalance(uint256 required, uint256 existing)',\n  'error InvalidParameter(string parameter, string reason)',\n  'event Approval(address indexed owner, address indexed spender, uint256 amount)',\n  'event Transfer(address indexed from, address indexed to, uint256 amount)',\n  'function allowance(address owner, address spender) view returns (uint256)',\n  'function approve(address spender, uint256 amount) returns (bool)',\n  'function balanceOf(address owner) view returns (uint256)',\n  'function burn(uint256 amount)',\n  'function burn(address target, uint256 amount)',\n  'function burnWithAllowance(address from, address spender, uint256 amount)',\n  'function decimals() view returns (uint8)',\n  'function decreaseAllowance(address spender, uint256 subtractedValue) returns (bool)',\n  'function increaseAllowance(address spender, uint256 addedValue) returns (bool)',\n  'function initialize(string tokenName, string tokenSymbol, uint8 tokenDecimals)',\n  'function isInitialized() view returns (bool)',\n  'function mint(address target, uint256 amount)',\n  'function name() view returns (string)',\n  'function setAllowance(address from, address spender, uint256 amount)',\n  'function symbol() view returns (string)',\n  'function totalSupply() view returns (uint256)',\n  'function transfer(address to, uint256 amount) returns (bool)',\n  'function transferFrom(address from, address to, uint256 amount) returns (bool)',\n];\n\n/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\nimport type {\n  BaseContract,\n  BigNumber,\n  BigNumberish,\n  BytesLike,\n  CallOverrides,\n  ContractTransaction,\n  Overrides,\n  PopulatedTransaction,\n  Signer,\n  utils,\n} from 'ethers';\nimport type { FunctionFragment, Result, EventFragment } from '@ethersproject/abi';\nimport type { Listener, Provider } from '@ethersproject/providers';\nimport type { TypedEventFilter, TypedEvent, TypedListener, OnEvent } from './common';\n\nexport interface USDProxyInterface extends utils.Interface {\n  functions: {\n    'acceptOwnership()': FunctionFragment;\n    'getImplementation()': FunctionFragment;\n    'nominateNewOwner(address)': FunctionFragment;\n    'nominatedOwner()': FunctionFragment;\n    'owner()': FunctionFragment;\n    'renounceNomination()': FunctionFragment;\n    'simulateUpgradeTo(address)': FunctionFragment;\n    'upgradeTo(address)': FunctionFragment;\n    'getAssociatedSystem(bytes32)': FunctionFragment;\n    'initOrUpgradeNft(bytes32,string,string,string,address)': FunctionFragment;\n    'initOrUpgradeToken(bytes32,string,string,uint8,address)': FunctionFragment;\n    'registerUnmanagedSystem(bytes32,address)': FunctionFragment;\n    'allowance(address,address)': FunctionFragment;\n    'approve(address,uint256)': FunctionFragment;\n    'balanceOf(address)': FunctionFragment;\n    'burn(uint256)': FunctionFragment;\n    'burn(address,uint256)': FunctionFragment;\n    'burnWithAllowance(address,address,uint256)': FunctionFragment;\n    'decimals()': FunctionFragment;\n    'decreaseAllowance(address,uint256)': FunctionFragment;\n    'increaseAllowance(address,uint256)': FunctionFragment;\n    'initialize(string,string,uint8)': FunctionFragment;\n    'isInitialized()': FunctionFragment;\n    'mint(address,uint256)': FunctionFragment;\n    'name()': FunctionFragment;\n    'setAllowance(address,address,uint256)': FunctionFragment;\n    'symbol()': FunctionFragment;\n    'totalSupply()': FunctionFragment;\n    'transfer(address,uint256)': FunctionFragment;\n    'transferFrom(address,address,uint256)': FunctionFragment;\n  };\n\n  getFunction(\n    nameOrSignatureOrTopic:\n      | 'acceptOwnership'\n      | 'getImplementation'\n      | 'nominateNewOwner'\n      | 'nominatedOwner'\n      | 'owner'\n      | 'renounceNomination'\n      | 'simulateUpgradeTo'\n      | 'upgradeTo'\n      | 'getAssociatedSystem'\n      | 'initOrUpgradeNft'\n      | 'initOrUpgradeToken'\n      | 'registerUnmanagedSystem'\n      | 'allowance'\n      | 'approve'\n      | 'balanceOf'\n      | 'burn(uint256)'\n      | 'burn(address,uint256)'\n      | 'burnWithAllowance'\n      | 'decimals'\n      | 'decreaseAllowance'\n      | 'increaseAllowance'\n      | 'initialize'\n      | 'isInitialized'\n      | 'mint'\n      | 'name'\n      | 'setAllowance'\n      | 'symbol'\n      | 'totalSupply'\n      | 'transfer'\n      | 'transferFrom'\n  ): FunctionFragment;\n\n  encodeFunctionData(functionFragment: 'acceptOwnership', values?: undefined): string;\n  encodeFunctionData(functionFragment: 'getImplementation', values?: undefined): string;\n  encodeFunctionData(functionFragment: 'nominateNewOwner', values: [string]): string;\n  encodeFunctionData(functionFragment: 'nominatedOwner', values?: undefined): string;\n  encodeFunctionData(functionFragment: 'owner', values?: undefined): string;\n  encodeFunctionData(functionFragment: 'renounceNomination', values?: undefined): string;\n  encodeFunctionData(functionFragment: 'simulateUpgradeTo', values: [string]): string;\n  encodeFunctionData(functionFragment: 'upgradeTo', values: [string]): string;\n  encodeFunctionData(functionFragment: 'getAssociatedSystem', values: [BytesLike]): string;\n  encodeFunctionData(\n    functionFragment: 'initOrUpgradeNft',\n    values: [BytesLike, string, string, string, string]\n  ): string;\n  encodeFunctionData(\n    functionFragment: 'initOrUpgradeToken',\n    values: [BytesLike, string, string, BigNumberish, string]\n  ): string;\n  encodeFunctionData(\n    functionFragment: 'registerUnmanagedSystem',\n    values: [BytesLike, string]\n  ): string;\n  encodeFunctionData(functionFragment: 'allowance', values: [string, string]): string;\n  encodeFunctionData(functionFragment: 'approve', values: [string, BigNumberish]): string;\n  encodeFunctionData(functionFragment: 'balanceOf', values: [string]): string;\n  encodeFunctionData(functionFragment: 'burn(uint256)', values: [BigNumberish]): string;\n  encodeFunctionData(\n    functionFragment: 'burn(address,uint256)',\n    values: [string, BigNumberish]\n  ): string;\n  encodeFunctionData(\n    functionFragment: 'burnWithAllowance',\n    values: [string, string, BigNumberish]\n  ): string;\n  encodeFunctionData(functionFragment: 'decimals', values?: undefined): string;\n  encodeFunctionData(functionFragment: 'decreaseAllowance', values: [string, BigNumberish]): string;\n  encodeFunctionData(functionFragment: 'increaseAllowance', values: [string, BigNumberish]): string;\n  encodeFunctionData(\n    functionFragment: 'initialize',\n    values: [string, string, BigNumberish]\n  ): string;\n  encodeFunctionData(functionFragment: 'isInitialized', values?: undefined): string;\n  encodeFunctionData(functionFragment: 'mint', values: [string, BigNumberish]): string;\n  encodeFunctionData(functionFragment: 'name', values?: undefined): string;\n  encodeFunctionData(\n    functionFragment: 'setAllowance',\n    values: [string, string, BigNumberish]\n  ): string;\n  encodeFunctionData(functionFragment: 'symbol', values?: undefined): string;\n  encodeFunctionData(functionFragment: 'totalSupply', values?: undefined): string;\n  encodeFunctionData(functionFragment: 'transfer', values: [string, BigNumberish]): string;\n  encodeFunctionData(\n    functionFragment: 'transferFrom',\n    values: [string, string, BigNumberish]\n  ): string;\n\n  decodeFunctionResult(functionFragment: 'acceptOwnership', data: BytesLike): Result;\n  decodeFunctionResult(functionFragment: 'getImplementation', data: BytesLike): Result;\n  decodeFunctionResult(functionFragment: 'nominateNewOwner', data: BytesLike): Result;\n  decodeFunctionResult(functionFragment: 'nominatedOwner', data: BytesLike): Result;\n  decodeFunctionResult(functionFragment: 'owner', data: BytesLike): Result;\n  decodeFunctionResult(functionFragment: 'renounceNomination', data: BytesLike): Result;\n  decodeFunctionResult(functionFragment: 'simulateUpgradeTo', data: BytesLike): Result;\n  decodeFunctionResult(functionFragment: 'upgradeTo', data: BytesLike): Result;\n  decodeFunctionResult(functionFragment: 'getAssociatedSystem', data: BytesLike): Result;\n  decodeFunctionResult(functionFragment: 'initOrUpgradeNft', data: BytesLike): Result;\n  decodeFunctionResult(functionFragment: 'initOrUpgradeToken', data: BytesLike): Result;\n  decodeFunctionResult(functionFragment: 'registerUnmanagedSystem', data: BytesLike): Result;\n  decodeFunctionResult(functionFragment: 'allowance', data: BytesLike): Result;\n  decodeFunctionResult(functionFragment: 'approve', data: BytesLike): Result;\n  decodeFunctionResult(functionFragment: 'balanceOf', data: BytesLike): Result;\n  decodeFunctionResult(functionFragment: 'burn(uint256)', data: BytesLike): Result;\n  decodeFunctionResult(functionFragment: 'burn(address,uint256)', data: BytesLike): Result;\n  decodeFunctionResult(functionFragment: 'burnWithAllowance', data: BytesLike): Result;\n  decodeFunctionResult(functionFragment: 'decimals', data: BytesLike): Result;\n  decodeFunctionResult(functionFragment: 'decreaseAllowance', data: BytesLike): Result;\n  decodeFunctionResult(functionFragment: 'increaseAllowance', data: BytesLike): Result;\n  decodeFunctionResult(functionFragment: 'initialize', data: BytesLike): Result;\n  decodeFunctionResult(functionFragment: 'isInitialized', data: BytesLike): Result;\n  decodeFunctionResult(functionFragment: 'mint', data: BytesLike): Result;\n  decodeFunctionResult(functionFragment: 'name', data: BytesLike): Result;\n  decodeFunctionResult(functionFragment: 'setAllowance', data: BytesLike): Result;\n  decodeFunctionResult(functionFragment: 'symbol', data: BytesLike): Result;\n  decodeFunctionResult(functionFragment: 'totalSupply', data: BytesLike): Result;\n  decodeFunctionResult(functionFragment: 'transfer', data: BytesLike): Result;\n  decodeFunctionResult(functionFragment: 'transferFrom', data: BytesLike): Result;\n\n  events: {\n    'OwnerChanged(address,address)': EventFragment;\n    'OwnerNominated(address)': EventFragment;\n    'Upgraded(address,address)': EventFragment;\n    'AssociatedSystemSet(bytes32,bytes32,address,address)': EventFragment;\n    'Approval(address,address,uint256)': EventFragment;\n    'Transfer(address,address,uint256)': EventFragment;\n  };\n\n  getEvent(nameOrSignatureOrTopic: 'OwnerChanged'): EventFragment;\n  getEvent(nameOrSignatureOrTopic: 'OwnerNominated'): EventFragment;\n  getEvent(nameOrSignatureOrTopic: 'Upgraded'): EventFragment;\n  getEvent(nameOrSignatureOrTopic: 'AssociatedSystemSet'): EventFragment;\n  getEvent(nameOrSignatureOrTopic: 'Approval'): EventFragment;\n  getEvent(nameOrSignatureOrTopic: 'Transfer'): EventFragment;\n}\n\nexport interface OwnerChangedEventObject {\n  oldOwner: string;\n  newOwner: string;\n}\nexport type OwnerChangedEvent = TypedEvent<[string, string], OwnerChangedEventObject>;\n\nexport type OwnerChangedEventFilter = TypedEventFilter<OwnerChangedEvent>;\n\nexport interface OwnerNominatedEventObject {\n  newOwner: string;\n}\nexport type OwnerNominatedEvent = TypedEvent<[string], OwnerNominatedEventObject>;\n\nexport type OwnerNominatedEventFilter = TypedEventFilter<OwnerNominatedEvent>;\n\nexport interface UpgradedEventObject {\n  self: string;\n  implementation: string;\n}\nexport type UpgradedEvent = TypedEvent<[string, string], UpgradedEventObject>;\n\nexport type UpgradedEventFilter = TypedEventFilter<UpgradedEvent>;\n\nexport interface AssociatedSystemSetEventObject {\n  kind: string;\n  id: string;\n  proxy: string;\n  impl: string;\n}\nexport type AssociatedSystemSetEvent = TypedEvent<\n  [string, string, string, string],\n  AssociatedSystemSetEventObject\n>;\n\nexport type AssociatedSystemSetEventFilter = TypedEventFilter<AssociatedSystemSetEvent>;\n\nexport interface ApprovalEventObject {\n  owner: string;\n  spender: string;\n  amount: BigNumber;\n}\nexport type ApprovalEvent = TypedEvent<[string, string, BigNumber], ApprovalEventObject>;\n\nexport type ApprovalEventFilter = TypedEventFilter<ApprovalEvent>;\n\nexport interface TransferEventObject {\n  from: string;\n  to: string;\n  amount: BigNumber;\n}\nexport type TransferEvent = TypedEvent<[string, string, BigNumber], TransferEventObject>;\n\nexport type TransferEventFilter = TypedEventFilter<TransferEvent>;\n\nexport interface USDProxy extends BaseContract {\n  connect(signerOrProvider: Signer | Provider | string): this;\n  attach(addressOrName: string): this;\n  deployed(): Promise<this>;\n\n  interface: USDProxyInterface;\n\n  queryFilter<TEvent extends TypedEvent>(\n    event: TypedEventFilter<TEvent>,\n    fromBlockOrBlockhash?: string | number | undefined,\n    toBlock?: string | number | undefined\n  ): Promise<Array<TEvent>>;\n\n  listeners<TEvent extends TypedEvent>(\n    eventFilter?: TypedEventFilter<TEvent>\n  ): Array<TypedListener<TEvent>>;\n  listeners(eventName?: string): Array<Listener>;\n  removeAllListeners<TEvent extends TypedEvent>(eventFilter: TypedEventFilter<TEvent>): this;\n  removeAllListeners(eventName?: string): this;\n  off: OnEvent<this>;\n  on: OnEvent<this>;\n  once: OnEvent<this>;\n  removeListener: OnEvent<this>;\n\n  functions: {\n    acceptOwnership(overrides?: Overrides & { from?: string }): Promise<ContractTransaction>;\n\n    getImplementation(overrides?: CallOverrides): Promise<[string]>;\n\n    nominateNewOwner(\n      newNominatedOwner: string,\n      overrides?: Overrides & { from?: string }\n    ): Promise<ContractTransaction>;\n\n    nominatedOwner(overrides?: CallOverrides): Promise<[string]>;\n\n    owner(overrides?: CallOverrides): Promise<[string]>;\n\n    renounceNomination(overrides?: Overrides & { from?: string }): Promise<ContractTransaction>;\n\n    simulateUpgradeTo(\n      newImplementation: string,\n      overrides?: Overrides & { from?: string }\n    ): Promise<ContractTransaction>;\n\n    upgradeTo(\n      newImplementation: string,\n      overrides?: Overrides & { from?: string }\n    ): Promise<ContractTransaction>;\n\n    getAssociatedSystem(\n      id: BytesLike,\n      overrides?: CallOverrides\n    ): Promise<[string, string] & { addr: string; kind: string }>;\n\n    initOrUpgradeNft(\n      id: BytesLike,\n      name: string,\n      symbol: string,\n      uri: string,\n      impl: string,\n      overrides?: Overrides & { from?: string }\n    ): Promise<ContractTransaction>;\n\n    initOrUpgradeToken(\n      id: BytesLike,\n      name: string,\n      symbol: string,\n      decimals: BigNumberish,\n      impl: string,\n      overrides?: Overrides & { from?: string }\n    ): Promise<ContractTransaction>;\n\n    registerUnmanagedSystem(\n      id: BytesLike,\n      endpoint: string,\n      overrides?: Overrides & { from?: string }\n    ): Promise<ContractTransaction>;\n\n    allowance(owner: string, spender: string, overrides?: CallOverrides): Promise<[BigNumber]>;\n\n    approve(\n      spender: string,\n      amount: BigNumberish,\n      overrides?: Overrides & { from?: string }\n    ): Promise<ContractTransaction>;\n\n    balanceOf(owner: string, overrides?: CallOverrides): Promise<[BigNumber]>;\n\n    'burn(uint256)'(\n      amount: BigNumberish,\n      overrides?: Overrides & { from?: string }\n    ): Promise<ContractTransaction>;\n\n    'burn(address,uint256)'(\n      target: string,\n      amount: BigNumberish,\n      overrides?: Overrides & { from?: string }\n    ): Promise<ContractTransaction>;\n\n    burnWithAllowance(\n      from: string,\n      spender: string,\n      amount: BigNumberish,\n      overrides?: Overrides & { from?: string }\n    ): Promise<ContractTransaction>;\n\n    decimals(overrides?: CallOverrides): Promise<[number]>;\n\n    decreaseAllowance(\n      spender: string,\n      subtractedValue: BigNumberish,\n      overrides?: Overrides & { from?: string }\n    ): Promise<ContractTransaction>;\n\n    increaseAllowance(\n      spender: string,\n      addedValue: BigNumberish,\n      overrides?: Overrides & { from?: string }\n    ): Promise<ContractTransaction>;\n\n    initialize(\n      tokenName: string,\n      tokenSymbol: string,\n      tokenDecimals: BigNumberish,\n      overrides?: Overrides & { from?: string }\n    ): Promise<ContractTransaction>;\n\n    isInitialized(overrides?: CallOverrides): Promise<[boolean]>;\n\n    mint(\n      target: string,\n      amount: BigNumberish,\n      overrides?: Overrides & { from?: string }\n    ): Promise<ContractTransaction>;\n\n    name(overrides?: CallOverrides): Promise<[string]>;\n\n    setAllowance(\n      from: string,\n      spender: string,\n      amount: BigNumberish,\n      overrides?: Overrides & { from?: string }\n    ): Promise<ContractTransaction>;\n\n    symbol(overrides?: CallOverrides): Promise<[string]>;\n\n    totalSupply(overrides?: CallOverrides): Promise<[BigNumber]>;\n\n    transfer(\n      to: string,\n      amount: BigNumberish,\n      overrides?: Overrides & { from?: string }\n    ): Promise<ContractTransaction>;\n\n    transferFrom(\n      from: string,\n      to: string,\n      amount: BigNumberish,\n      overrides?: Overrides & { from?: string }\n    ): Promise<ContractTransaction>;\n  };\n\n  acceptOwnership(overrides?: Overrides & { from?: string }): Promise<ContractTransaction>;\n\n  getImplementation(overrides?: CallOverrides): Promise<string>;\n\n  nominateNewOwner(\n    newNominatedOwner: string,\n    overrides?: Overrides & { from?: string }\n  ): Promise<ContractTransaction>;\n\n  nominatedOwner(overrides?: CallOverrides): Promise<string>;\n\n  owner(overrides?: CallOverrides): Promise<string>;\n\n  renounceNomination(overrides?: Overrides & { from?: string }): Promise<ContractTransaction>;\n\n  simulateUpgradeTo(\n    newImplementation: string,\n    overrides?: Overrides & { from?: string }\n  ): Promise<ContractTransaction>;\n\n  upgradeTo(\n    newImplementation: string,\n    overrides?: Overrides & { from?: string }\n  ): Promise<ContractTransaction>;\n\n  getAssociatedSystem(\n    id: BytesLike,\n    overrides?: CallOverrides\n  ): Promise<[string, string] & { addr: string; kind: string }>;\n\n  initOrUpgradeNft(\n    id: BytesLike,\n    name: string,\n    symbol: string,\n    uri: string,\n    impl: string,\n    overrides?: Overrides & { from?: string }\n  ): Promise<ContractTransaction>;\n\n  initOrUpgradeToken(\n    id: BytesLike,\n    name: string,\n    symbol: string,\n    decimals: BigNumberish,\n    impl: string,\n    overrides?: Overrides & { from?: string }\n  ): Promise<ContractTransaction>;\n\n  registerUnmanagedSystem(\n    id: BytesLike,\n    endpoint: string,\n    overrides?: Overrides & { from?: string }\n  ): Promise<ContractTransaction>;\n\n  allowance(owner: string, spender: string, overrides?: CallOverrides): Promise<BigNumber>;\n\n  approve(\n    spender: string,\n    amount: BigNumberish,\n    overrides?: Overrides & { from?: string }\n  ): Promise<ContractTransaction>;\n\n  balanceOf(owner: string, overrides?: CallOverrides): Promise<BigNumber>;\n\n  'burn(uint256)'(\n    amount: BigNumberish,\n    overrides?: Overrides & { from?: string }\n  ): Promise<ContractTransaction>;\n\n  'burn(address,uint256)'(\n    target: string,\n    amount: BigNumberish,\n    overrides?: Overrides & { from?: string }\n  ): Promise<ContractTransaction>;\n\n  burnWithAllowance(\n    from: string,\n    spender: string,\n    amount: BigNumberish,\n    overrides?: Overrides & { from?: string }\n  ): Promise<ContractTransaction>;\n\n  decimals(overrides?: CallOverrides): Promise<number>;\n\n  decreaseAllowance(\n    spender: string,\n    subtractedValue: BigNumberish,\n    overrides?: Overrides & { from?: string }\n  ): Promise<ContractTransaction>;\n\n  increaseAllowance(\n    spender: string,\n    addedValue: BigNumberish,\n    overrides?: Overrides & { from?: string }\n  ): Promise<ContractTransaction>;\n\n  initialize(\n    tokenName: string,\n    tokenSymbol: string,\n    tokenDecimals: BigNumberish,\n    overrides?: Overrides & { from?: string }\n  ): Promise<ContractTransaction>;\n\n  isInitialized(overrides?: CallOverrides): Promise<boolean>;\n\n  mint(\n    target: string,\n    amount: BigNumberish,\n    overrides?: Overrides & { from?: string }\n  ): Promise<ContractTransaction>;\n\n  name(overrides?: CallOverrides): Promise<string>;\n\n  setAllowance(\n    from: string,\n    spender: string,\n    amount: BigNumberish,\n    overrides?: Overrides & { from?: string }\n  ): Promise<ContractTransaction>;\n\n  symbol(overrides?: CallOverrides): Promise<string>;\n\n  totalSupply(overrides?: CallOverrides): Promise<BigNumber>;\n\n  transfer(\n    to: string,\n    amount: BigNumberish,\n    overrides?: Overrides & { from?: string }\n  ): Promise<ContractTransaction>;\n\n  transferFrom(\n    from: string,\n    to: string,\n    amount: BigNumberish,\n    overrides?: Overrides & { from?: string }\n  ): Promise<ContractTransaction>;\n\n  callStatic: {\n    acceptOwnership(overrides?: CallOverrides): Promise<void>;\n\n    getImplementation(overrides?: CallOverrides): Promise<string>;\n\n    nominateNewOwner(newNominatedOwner: string, overrides?: CallOverrides): Promise<void>;\n\n    nominatedOwner(overrides?: CallOverrides): Promise<string>;\n\n    owner(overrides?: CallOverrides): Promise<string>;\n\n    renounceNomination(overrides?: CallOverrides): Promise<void>;\n\n    simulateUpgradeTo(newImplementation: string, overrides?: CallOverrides): Promise<void>;\n\n    upgradeTo(newImplementation: string, overrides?: CallOverrides): Promise<void>;\n\n    getAssociatedSystem(\n      id: BytesLike,\n      overrides?: CallOverrides\n    ): Promise<[string, string] & { addr: string; kind: string }>;\n\n    initOrUpgradeNft(\n      id: BytesLike,\n      name: string,\n      symbol: string,\n      uri: string,\n      impl: string,\n      overrides?: CallOverrides\n    ): Promise<void>;\n\n    initOrUpgradeToken(\n      id: BytesLike,\n      name: string,\n      symbol: string,\n      decimals: BigNumberish,\n      impl: string,\n      overrides?: CallOverrides\n    ): Promise<void>;\n\n    registerUnmanagedSystem(\n      id: BytesLike,\n      endpoint: string,\n      overrides?: CallOverrides\n    ): Promise<void>;\n\n    allowance(owner: string, spender: string, overrides?: CallOverrides): Promise<BigNumber>;\n\n    approve(spender: string, amount: BigNumberish, overrides?: CallOverrides): Promise<boolean>;\n\n    balanceOf(owner: string, overrides?: CallOverrides): Promise<BigNumber>;\n\n    'burn(uint256)'(amount: BigNumberish, overrides?: CallOverrides): Promise<void>;\n\n    'burn(address,uint256)'(\n      target: string,\n      amount: BigNumberish,\n      overrides?: CallOverrides\n    ): Promise<void>;\n\n    burnWithAllowance(\n      from: string,\n      spender: string,\n      amount: BigNumberish,\n      overrides?: CallOverrides\n    ): Promise<void>;\n\n    decimals(overrides?: CallOverrides): Promise<number>;\n\n    decreaseAllowance(\n      spender: string,\n      subtractedValue: BigNumberish,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    increaseAllowance(\n      spender: string,\n      addedValue: BigNumberish,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    initialize(\n      tokenName: string,\n      tokenSymbol: string,\n      tokenDecimals: BigNumberish,\n      overrides?: CallOverrides\n    ): Promise<void>;\n\n    isInitialized(overrides?: CallOverrides): Promise<boolean>;\n\n    mint(target: string, amount: BigNumberish, overrides?: CallOverrides): Promise<void>;\n\n    name(overrides?: CallOverrides): Promise<string>;\n\n    setAllowance(\n      from: string,\n      spender: string,\n      amount: BigNumberish,\n      overrides?: CallOverrides\n    ): Promise<void>;\n\n    symbol(overrides?: CallOverrides): Promise<string>;\n\n    totalSupply(overrides?: CallOverrides): Promise<BigNumber>;\n\n    transfer(to: string, amount: BigNumberish, overrides?: CallOverrides): Promise<boolean>;\n\n    transferFrom(\n      from: string,\n      to: string,\n      amount: BigNumberish,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n  };\n\n  filters: {\n    'OwnerChanged(address,address)'(oldOwner?: null, newOwner?: null): OwnerChangedEventFilter;\n    OwnerChanged(oldOwner?: null, newOwner?: null): OwnerChangedEventFilter;\n\n    'OwnerNominated(address)'(newOwner?: null): OwnerNominatedEventFilter;\n    OwnerNominated(newOwner?: null): OwnerNominatedEventFilter;\n\n    'Upgraded(address,address)'(self?: string | null, implementation?: null): UpgradedEventFilter;\n    Upgraded(self?: string | null, implementation?: null): UpgradedEventFilter;\n\n    'AssociatedSystemSet(bytes32,bytes32,address,address)'(\n      kind?: BytesLike | null,\n      id?: BytesLike | null,\n      proxy?: null,\n      impl?: null\n    ): AssociatedSystemSetEventFilter;\n    AssociatedSystemSet(\n      kind?: BytesLike | null,\n      id?: BytesLike | null,\n      proxy?: null,\n      impl?: null\n    ): AssociatedSystemSetEventFilter;\n\n    'Approval(address,address,uint256)'(\n      owner?: string | null,\n      spender?: string | null,\n      amount?: null\n    ): ApprovalEventFilter;\n    Approval(owner?: string | null, spender?: string | null, amount?: null): ApprovalEventFilter;\n\n    'Transfer(address,address,uint256)'(\n      from?: string | null,\n      to?: string | null,\n      amount?: null\n    ): TransferEventFilter;\n    Transfer(from?: string | null, to?: string | null, amount?: null): TransferEventFilter;\n  };\n\n  estimateGas: {\n    acceptOwnership(overrides?: Overrides & { from?: string }): Promise<BigNumber>;\n\n    getImplementation(overrides?: CallOverrides): Promise<BigNumber>;\n\n    nominateNewOwner(\n      newNominatedOwner: string,\n      overrides?: Overrides & { from?: string }\n    ): Promise<BigNumber>;\n\n    nominatedOwner(overrides?: CallOverrides): Promise<BigNumber>;\n\n    owner(overrides?: CallOverrides): Promise<BigNumber>;\n\n    renounceNomination(overrides?: Overrides & { from?: string }): Promise<BigNumber>;\n\n    simulateUpgradeTo(\n      newImplementation: string,\n      overrides?: Overrides & { from?: string }\n    ): Promise<BigNumber>;\n\n    upgradeTo(\n      newImplementation: string,\n      overrides?: Overrides & { from?: string }\n    ): Promise<BigNumber>;\n\n    getAssociatedSystem(id: BytesLike, overrides?: CallOverrides): Promise<BigNumber>;\n\n    initOrUpgradeNft(\n      id: BytesLike,\n      name: string,\n      symbol: string,\n      uri: string,\n      impl: string,\n      overrides?: Overrides & { from?: string }\n    ): Promise<BigNumber>;\n\n    initOrUpgradeToken(\n      id: BytesLike,\n      name: string,\n      symbol: string,\n      decimals: BigNumberish,\n      impl: string,\n      overrides?: Overrides & { from?: string }\n    ): Promise<BigNumber>;\n\n    registerUnmanagedSystem(\n      id: BytesLike,\n      endpoint: string,\n      overrides?: Overrides & { from?: string }\n    ): Promise<BigNumber>;\n\n    allowance(owner: string, spender: string, overrides?: CallOverrides): Promise<BigNumber>;\n\n    approve(\n      spender: string,\n      amount: BigNumberish,\n      overrides?: Overrides & { from?: string }\n    ): Promise<BigNumber>;\n\n    balanceOf(owner: string, overrides?: CallOverrides): Promise<BigNumber>;\n\n    'burn(uint256)'(\n      amount: BigNumberish,\n      overrides?: Overrides & { from?: string }\n    ): Promise<BigNumber>;\n\n    'burn(address,uint256)'(\n      target: string,\n      amount: BigNumberish,\n      overrides?: Overrides & { from?: string }\n    ): Promise<BigNumber>;\n\n    burnWithAllowance(\n      from: string,\n      spender: string,\n      amount: BigNumberish,\n      overrides?: Overrides & { from?: string }\n    ): Promise<BigNumber>;\n\n    decimals(overrides?: CallOverrides): Promise<BigNumber>;\n\n    decreaseAllowance(\n      spender: string,\n      subtractedValue: BigNumberish,\n      overrides?: Overrides & { from?: string }\n    ): Promise<BigNumber>;\n\n    increaseAllowance(\n      spender: string,\n      addedValue: BigNumberish,\n      overrides?: Overrides & { from?: string }\n    ): Promise<BigNumber>;\n\n    initialize(\n      tokenName: string,\n      tokenSymbol: string,\n      tokenDecimals: BigNumberish,\n      overrides?: Overrides & { from?: string }\n    ): Promise<BigNumber>;\n\n    isInitialized(overrides?: CallOverrides): Promise<BigNumber>;\n\n    mint(\n      target: string,\n      amount: BigNumberish,\n      overrides?: Overrides & { from?: string }\n    ): Promise<BigNumber>;\n\n    name(overrides?: CallOverrides): Promise<BigNumber>;\n\n    setAllowance(\n      from: string,\n      spender: string,\n      amount: BigNumberish,\n      overrides?: Overrides & { from?: string }\n    ): Promise<BigNumber>;\n\n    symbol(overrides?: CallOverrides): Promise<BigNumber>;\n\n    totalSupply(overrides?: CallOverrides): Promise<BigNumber>;\n\n    transfer(\n      to: string,\n      amount: BigNumberish,\n      overrides?: Overrides & { from?: string }\n    ): Promise<BigNumber>;\n\n    transferFrom(\n      from: string,\n      to: string,\n      amount: BigNumberish,\n      overrides?: Overrides & { from?: string }\n    ): Promise<BigNumber>;\n  };\n\n  populateTransaction: {\n    acceptOwnership(overrides?: Overrides & { from?: string }): Promise<PopulatedTransaction>;\n\n    getImplementation(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    nominateNewOwner(\n      newNominatedOwner: string,\n      overrides?: Overrides & { from?: string }\n    ): Promise<PopulatedTransaction>;\n\n    nominatedOwner(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    owner(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    renounceNomination(overrides?: Overrides & { from?: string }): Promise<PopulatedTransaction>;\n\n    simulateUpgradeTo(\n      newImplementation: string,\n      overrides?: Overrides & { from?: string }\n    ): Promise<PopulatedTransaction>;\n\n    upgradeTo(\n      newImplementation: string,\n      overrides?: Overrides & { from?: string }\n    ): Promise<PopulatedTransaction>;\n\n    getAssociatedSystem(id: BytesLike, overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    initOrUpgradeNft(\n      id: BytesLike,\n      name: string,\n      symbol: string,\n      uri: string,\n      impl: string,\n      overrides?: Overrides & { from?: string }\n    ): Promise<PopulatedTransaction>;\n\n    initOrUpgradeToken(\n      id: BytesLike,\n      name: string,\n      symbol: string,\n      decimals: BigNumberish,\n      impl: string,\n      overrides?: Overrides & { from?: string }\n    ): Promise<PopulatedTransaction>;\n\n    registerUnmanagedSystem(\n      id: BytesLike,\n      endpoint: string,\n      overrides?: Overrides & { from?: string }\n    ): Promise<PopulatedTransaction>;\n\n    allowance(\n      owner: string,\n      spender: string,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    approve(\n      spender: string,\n      amount: BigNumberish,\n      overrides?: Overrides & { from?: string }\n    ): Promise<PopulatedTransaction>;\n\n    balanceOf(owner: string, overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    'burn(uint256)'(\n      amount: BigNumberish,\n      overrides?: Overrides & { from?: string }\n    ): Promise<PopulatedTransaction>;\n\n    'burn(address,uint256)'(\n      target: string,\n      amount: BigNumberish,\n      overrides?: Overrides & { from?: string }\n    ): Promise<PopulatedTransaction>;\n\n    burnWithAllowance(\n      from: string,\n      spender: string,\n      amount: BigNumberish,\n      overrides?: Overrides & { from?: string }\n    ): Promise<PopulatedTransaction>;\n\n    decimals(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    decreaseAllowance(\n      spender: string,\n      subtractedValue: BigNumberish,\n      overrides?: Overrides & { from?: string }\n    ): Promise<PopulatedTransaction>;\n\n    increaseAllowance(\n      spender: string,\n      addedValue: BigNumberish,\n      overrides?: Overrides & { from?: string }\n    ): Promise<PopulatedTransaction>;\n\n    initialize(\n      tokenName: string,\n      tokenSymbol: string,\n      tokenDecimals: BigNumberish,\n      overrides?: Overrides & { from?: string }\n    ): Promise<PopulatedTransaction>;\n\n    isInitialized(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    mint(\n      target: string,\n      amount: BigNumberish,\n      overrides?: Overrides & { from?: string }\n    ): Promise<PopulatedTransaction>;\n\n    name(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    setAllowance(\n      from: string,\n      spender: string,\n      amount: BigNumberish,\n      overrides?: Overrides & { from?: string }\n    ): Promise<PopulatedTransaction>;\n\n    symbol(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    totalSupply(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    transfer(\n      to: string,\n      amount: BigNumberish,\n      overrides?: Overrides & { from?: string }\n    ): Promise<PopulatedTransaction>;\n\n    transferFrom(\n      from: string,\n      to: string,\n      amount: BigNumberish,\n      overrides?: Overrides & { from?: string }\n    ): Promise<PopulatedTransaction>;\n  };\n}\n\n"],"names":["address","abi"],"sourceRoot":""}