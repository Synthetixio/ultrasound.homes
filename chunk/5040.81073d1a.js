(globalThis.webpackChunk_snx_v3_ultrasound=globalThis.webpackChunk_snx_v3_ultrasound||[]).push([[5040],{8202:function(e){"use strict";!function(r){function t(e){return parseInt(e)===e}function n(e){if(!t(e.length))return!1;for(var r=0;r<e.length;r++)if(!t(e[r])||e[r]<0||e[r]>255)return!1;return!0}function i(e,r){if(e.buffer&&ArrayBuffer.isView(e)&&"Uint8Array"===e.name)return r&&(e=e.slice?e.slice():Array.prototype.slice.call(e)),e;if(Array.isArray(e)){if(!n(e))throw new Error("Array contains invalid value: "+e);return new Uint8Array(e)}if(t(e.length)&&n(e))return new Uint8Array(e);throw new Error("unsupported array-like object")}function o(e){return new Uint8Array(e)}function a(e,r,t,n,i){null==n&&null==i||(e=e.slice?e.slice(n,i):Array.prototype.slice.call(e,n,i)),r.set(e,t)}var s,c={toBytes:function(e){var r=[],t=0;for(e=encodeURI(e);t<e.length;){var n=e.charCodeAt(t++);37===n?(r.push(parseInt(e.substr(t,2),16)),t+=2):r.push(n)}return i(r)},fromBytes:function(e){for(var r=[],t=0;t<e.length;){var n=e[t];n<128?(r.push(String.fromCharCode(n)),t++):n>191&&n<224?(r.push(String.fromCharCode((31&n)<<6|63&e[t+1])),t+=2):(r.push(String.fromCharCode((15&n)<<12|(63&e[t+1])<<6|63&e[t+2])),t+=3)}return r.join("")}},l=(s="0123456789abcdef",{toBytes:function(e){for(var r=[],t=0;t<e.length;t+=2)r.push(parseInt(e.substr(t,2),16));return r},fromBytes:function(e){for(var r=[],t=0;t<e.length;t++){var n=e[t];r.push(s[(240&n)>>4]+s[15&n])}return r.join("")}}),u={16:10,24:12,32:14},h=[1,2,4,8,16,32,64,128,27,54,108,216,171,77,154,47,94,188,99,198,151,53,106,212,179,125,250,239,197,145],f=[99,124,119,123,242,107,111,197,48,1,103,43,254,215,171,118,202,130,201,125,250,89,71,240,173,212,162,175,156,164,114,192,183,253,147,38,54,63,247,204,52,165,229,241,113,216,49,21,4,199,35,195,24,150,5,154,7,18,128,226,235,39,178,117,9,131,44,26,27,110,90,160,82,59,214,179,41,227,47,132,83,209,0,237,32,252,177,91,106,203,190,57,74,76,88,207,208,239,170,251,67,77,51,133,69,249,2,127,80,60,159,168,81,163,64,143,146,157,56,245,188,182,218,33,16,255,243,210,205,12,19,236,95,151,68,23,196,167,126,61,100,93,25,115,96,129,79,220,34,42,144,136,70,238,184,20,222,94,11,219,224,50,58,10,73,6,36,92,194,211,172,98,145,149,228,121,231,200,55,109,141,213,78,169,108,86,244,234,101,122,174,8,186,120,37,46,28,166,180,198,232,221,116,31,75,189,139,138,112,62,181,102,72,3,246,14,97,53,87,185,134,193,29,158,225,248,152,17,105,217,142,148,155,30,135,233,206,85,40,223,140,161,137,13,191,230,66,104,65,153,45,15,176,84,187,22],p=[82,9,106,213,48,54,165,56,191,64,163,158,129,243,215,251,124,227,57,130,155,47,255,135,52,142,67,68,196,222,233,203,84,123,148,50,166,194,35,61,238,76,149,11,66,250,195,78,8,46,161,102,40,217,36,178,118,91,162,73,109,139,209,37,114,248,246,100,134,104,152,22,212,164,92,204,93,101,182,146,108,112,72,80,253,237,185,218,94,21,70,87,167,141,157,132,144,216,171,0,140,188,211,10,247,228,88,5,184,179,69,6,208,44,30,143,202,63,15,2,193,175,189,3,1,19,138,107,58,145,17,65,79,103,220,234,151,242,207,206,240,180,230,115,150,172,116,34,231,173,53,133,226,249,55,232,28,117,223,110,71,241,26,113,29,41,197,137,111,183,98,14,170,24,190,27,252,86,62,75,198,210,121,32,154,219,192,254,120,205,90,244,31,221,168,51,136,7,199,49,177,18,16,89,39,128,236,95,96,81,127,169,25,181,74,13,45,229,122,159,147,201,156,239,160,224,59,77,174,42,245,176,200,235,187,60,131,83,153,97,23,43,4,126,186,119,214,38,225,105,20,99,85,33,12,125],d=[3328402341,4168907908,4000806809,4135287693,4294111757,3597364157,3731845041,2445657428,1613770832,33620227,3462883241,1445669757,3892248089,3050821474,1303096294,3967186586,2412431941,528646813,2311702848,4202528135,4026202645,2992200171,2387036105,4226871307,1101901292,3017069671,1604494077,1169141738,597466303,1403299063,3832705686,2613100635,1974974402,3791519004,1033081774,1277568618,1815492186,2118074177,4126668546,2211236943,1748251740,1369810420,3521504564,4193382664,3799085459,2883115123,1647391059,706024767,134480908,2512897874,1176707941,2646852446,806885416,932615841,168101135,798661301,235341577,605164086,461406363,3756188221,3454790438,1311188841,2142417613,3933566367,302582043,495158174,1479289972,874125870,907746093,3698224818,3025820398,1537253627,2756858614,1983593293,3084310113,2108928974,1378429307,3722699582,1580150641,327451799,2790478837,3117535592,0,3253595436,1075847264,3825007647,2041688520,3059440621,3563743934,2378943302,1740553945,1916352843,2487896798,2555137236,2958579944,2244988746,3151024235,3320835882,1336584933,3992714006,2252555205,2588757463,1714631509,293963156,2319795663,3925473552,67240454,4269768577,2689618160,2017213508,631218106,1269344483,2723238387,1571005438,2151694528,93294474,1066570413,563977660,1882732616,4059428100,1673313503,2008463041,2950355573,1109467491,537923632,3858759450,4260623118,3218264685,2177748300,403442708,638784309,3287084079,3193921505,899127202,2286175436,773265209,2479146071,1437050866,4236148354,2050833735,3362022572,3126681063,840505643,3866325909,3227541664,427917720,2655997905,2749160575,1143087718,1412049534,999329963,193497219,2353415882,3354324521,1807268051,672404540,2816401017,3160301282,369822493,2916866934,3688947771,1681011286,1949973070,336202270,2454276571,201721354,1210328172,3093060836,2680341085,3184776046,1135389935,3294782118,965841320,831886756,3554993207,4068047243,3588745010,2345191491,1849112409,3664604599,26054028,2983581028,2622377682,1235855840,3630984372,2891339514,4092916743,3488279077,3395642799,4101667470,1202630377,268961816,1874508501,4034427016,1243948399,1546530418,941366308,1470539505,1941222599,2546386513,3421038627,2715671932,3899946140,1042226977,2521517021,1639824860,227249030,260737669,3765465232,2084453954,1907733956,3429263018,2420656344,100860677,4160157185,470683154,3261161891,1781871967,2924959737,1773779408,394692241,2579611992,974986535,664706745,3655459128,3958962195,731420851,571543859,3530123707,2849626480,126783113,865375399,765172662,1008606754,361203602,3387549984,2278477385,2857719295,1344809080,2782912378,59542671,1503764984,160008576,437062935,1707065306,3622233649,2218934982,3496503480,2185314755,697932208,1512910199,504303377,2075177163,2824099068,1841019862,739644986],y=[2781242211,2230877308,2582542199,2381740923,234877682,3184946027,2984144751,1418839493,1348481072,50462977,2848876391,2102799147,434634494,1656084439,3863849899,2599188086,1167051466,2636087938,1082771913,2281340285,368048890,3954334041,3381544775,201060592,3963727277,1739838676,4250903202,3930435503,3206782108,4149453988,2531553906,1536934080,3262494647,484572669,2923271059,1783375398,1517041206,1098792767,49674231,1334037708,1550332980,4098991525,886171109,150598129,2481090929,1940642008,1398944049,1059722517,201851908,1385547719,1699095331,1587397571,674240536,2704774806,252314885,3039795866,151914247,908333586,2602270848,1038082786,651029483,1766729511,3447698098,2682942837,454166793,2652734339,1951935532,775166490,758520603,3000790638,4004797018,4217086112,4137964114,1299594043,1639438038,3464344499,2068982057,1054729187,1901997871,2534638724,4121318227,1757008337,0,750906861,1614815264,535035132,3363418545,3988151131,3201591914,1183697867,3647454910,1265776953,3734260298,3566750796,3903871064,1250283471,1807470800,717615087,3847203498,384695291,3313910595,3617213773,1432761139,2484176261,3481945413,283769337,100925954,2180939647,4037038160,1148730428,3123027871,3813386408,4087501137,4267549603,3229630528,2315620239,2906624658,3156319645,1215313976,82966005,3747855548,3245848246,1974459098,1665278241,807407632,451280895,251524083,1841287890,1283575245,337120268,891687699,801369324,3787349855,2721421207,3431482436,959321879,1469301956,4065699751,2197585534,1199193405,2898814052,3887750493,724703513,2514908019,2696962144,2551808385,3516813135,2141445340,1715741218,2119445034,2872807568,2198571144,3398190662,700968686,3547052216,1009259540,2041044702,3803995742,487983883,1991105499,1004265696,1449407026,1316239930,504629770,3683797321,168560134,1816667172,3837287516,1570751170,1857934291,4014189740,2797888098,2822345105,2754712981,936633572,2347923833,852879335,1133234376,1500395319,3084545389,2348912013,1689376213,3533459022,3762923945,3034082412,4205598294,133428468,634383082,2949277029,2398386810,3913789102,403703816,3580869306,2297460856,1867130149,1918643758,607656988,4049053350,3346248884,1368901318,600565992,2090982877,2632479860,557719327,3717614411,3697393085,2249034635,2232388234,2430627952,1115438654,3295786421,2865522278,3633334344,84280067,33027830,303828494,2747425121,1600795957,4188952407,3496589753,2434238086,1486471617,658119965,3106381470,953803233,334231800,3005978776,857870609,3151128937,1890179545,2298973838,2805175444,3056442267,574365214,2450884487,550103529,1233637070,4289353045,2018519080,2057691103,2399374476,4166623649,2148108681,387583245,3664101311,836232934,3330556482,3100665960,3280093505,2955516313,2002398509,287182607,3413881008,4238890068,3597515707,975967766],g=[1671808611,2089089148,2006576759,2072901243,4061003762,1807603307,1873927791,3310653893,810573872,16974337,1739181671,729634347,4263110654,3613570519,2883997099,1989864566,3393556426,2191335298,3376449993,2106063485,4195741690,1508618841,1204391495,4027317232,2917941677,3563566036,2734514082,2951366063,2629772188,2767672228,1922491506,3227229120,3082974647,4246528509,2477669779,644500518,911895606,1061256767,4144166391,3427763148,878471220,2784252325,3845444069,4043897329,1905517169,3631459288,827548209,356461077,67897348,3344078279,593839651,3277757891,405286936,2527147926,84871685,2595565466,118033927,305538066,2157648768,3795705826,3945188843,661212711,2999812018,1973414517,152769033,2208177539,745822252,439235610,455947803,1857215598,1525593178,2700827552,1391895634,994932283,3596728278,3016654259,695947817,3812548067,795958831,2224493444,1408607827,3513301457,0,3979133421,543178784,4229948412,2982705585,1542305371,1790891114,3410398667,3201918910,961245753,1256100938,1289001036,1491644504,3477767631,3496721360,4012557807,2867154858,4212583931,1137018435,1305975373,861234739,2241073541,1171229253,4178635257,33948674,2139225727,1357946960,1011120188,2679776671,2833468328,1374921297,2751356323,1086357568,2408187279,2460827538,2646352285,944271416,4110742005,3168756668,3066132406,3665145818,560153121,271589392,4279952895,4077846003,3530407890,3444343245,202643468,322250259,3962553324,1608629855,2543990167,1154254916,389623319,3294073796,2817676711,2122513534,1028094525,1689045092,1575467613,422261273,1939203699,1621147744,2174228865,1339137615,3699352540,577127458,712922154,2427141008,2290289544,1187679302,3995715566,3100863416,339486740,3732514782,1591917662,186455563,3681988059,3762019296,844522546,978220090,169743370,1239126601,101321734,611076132,1558493276,3260915650,3547250131,2901361580,1655096418,2443721105,2510565781,3828863972,2039214713,3878868455,3359869896,928607799,1840765549,2374762893,3580146133,1322425422,2850048425,1823791212,1459268694,4094161908,3928346602,1706019429,2056189050,2934523822,135794696,3134549946,2022240376,628050469,779246638,472135708,2800834470,3032970164,3327236038,3894660072,3715932637,1956440180,522272287,1272813131,3185336765,2340818315,2323976074,1888542832,1044544574,3049550261,1722469478,1222152264,50660867,4127324150,236067854,1638122081,895445557,1475980887,3117443513,2257655686,3243809217,489110045,2662934430,3778599393,4162055160,2561878936,288563729,1773916777,3648039385,2391345038,2493985684,2612407707,505560094,2274497927,3911240169,3460925390,1442818645,678973480,3749357023,2358182796,2717407649,2306869641,219617805,3218761151,3862026214,1120306242,1756942440,1103331905,2578459033,762796589,252780047,2966125488,1425844308,3151392187,372911126],m=[1667474886,2088535288,2004326894,2071694838,4075949567,1802223062,1869591006,3318043793,808472672,16843522,1734846926,724270422,4278065639,3621216949,2880169549,1987484396,3402253711,2189597983,3385409673,2105378810,4210693615,1499065266,1195886990,4042263547,2913856577,3570689971,2728590687,2947541573,2627518243,2762274643,1920112356,3233831835,3082273397,4261223649,2475929149,640051788,909531756,1061110142,4160160501,3435941763,875846760,2779116625,3857003729,4059105529,1903268834,3638064043,825316194,353713962,67374088,3351728789,589522246,3284360861,404236336,2526454071,84217610,2593830191,117901582,303183396,2155911963,3806477791,3958056653,656894286,2998062463,1970642922,151591698,2206440989,741110872,437923380,454765878,1852748508,1515908788,2694904667,1381168804,993742198,3604373943,3014905469,690584402,3823320797,791638366,2223281939,1398011302,3520161977,0,3991743681,538992704,4244381667,2981218425,1532751286,1785380564,3419096717,3200178535,960056178,1246420628,1280103576,1482221744,3486468741,3503319995,4025428677,2863326543,4227536621,1128514950,1296947098,859002214,2240123921,1162203018,4193849577,33687044,2139062782,1347481760,1010582648,2678045221,2829640523,1364325282,2745433693,1077985408,2408548869,2459086143,2644360225,943212656,4126475505,3166494563,3065430391,3671750063,555836226,269496352,4294908645,4092792573,3537006015,3452783745,202118168,320025894,3974901699,1600119230,2543297077,1145359496,387397934,3301201811,2812801621,2122220284,1027426170,1684319432,1566435258,421079858,1936954854,1616945344,2172753945,1330631070,3705438115,572679748,707427924,2425400123,2290647819,1179044492,4008585671,3099120491,336870440,3739122087,1583276732,185277718,3688593069,3772791771,842159716,976899700,168435220,1229577106,101059084,606366792,1549591736,3267517855,3553849021,2897014595,1650632388,2442242105,2509612081,3840161747,2038008818,3890688725,3368567691,926374254,1835907034,2374863873,3587531953,1313788572,2846482505,1819063512,1448540844,4109633523,3941213647,1701162954,2054852340,2930698567,134748176,3132806511,2021165296,623210314,774795868,471606328,2795958615,3031746419,3334885783,3907527627,3722280097,1953799400,522133822,1263263126,3183336545,2341176845,2324333839,1886425312,1044267644,3048588401,1718004428,1212733584,50529542,4143317495,235803164,1633788866,892690282,1465383342,3115962473,2256965911,3250673817,488449850,2661202215,3789633753,4177007595,2560144171,286339874,1768537042,3654906025,2391705863,2492770099,2610673197,505291324,2273808917,3924369609,3469625735,1431699370,673740880,3755965093,2358021891,2711746649,2307489801,218961690,3217021541,3873845719,1111672452,1751693520,1094828930,2576986153,757954394,252645662,2964376443,1414855848,3149649517,370555436],w=[1374988112,2118214995,437757123,975658646,1001089995,530400753,2902087851,1273168787,540080725,2910219766,2295101073,4110568485,1340463100,3307916247,641025152,3043140495,3736164937,632953703,1172967064,1576976609,3274667266,2169303058,2370213795,1809054150,59727847,361929877,3211623147,2505202138,3569255213,1484005843,1239443753,2395588676,1975683434,4102977912,2572697195,666464733,3202437046,4035489047,3374361702,2110667444,1675577880,3843699074,2538681184,1649639237,2976151520,3144396420,4269907996,4178062228,1883793496,2403728665,2497604743,1383856311,2876494627,1917518562,3810496343,1716890410,3001755655,800440835,2261089178,3543599269,807962610,599762354,33778362,3977675356,2328828971,2809771154,4077384432,1315562145,1708848333,101039829,3509871135,3299278474,875451293,2733856160,92987698,2767645557,193195065,1080094634,1584504582,3178106961,1042385657,2531067453,3711829422,1306967366,2438237621,1908694277,67556463,1615861247,429456164,3602770327,2302690252,1742315127,2968011453,126454664,3877198648,2043211483,2709260871,2084704233,4169408201,0,159417987,841739592,504459436,1817866830,4245618683,260388950,1034867998,908933415,168810852,1750902305,2606453969,607530554,202008497,2472011535,3035535058,463180190,2160117071,1641816226,1517767529,470948374,3801332234,3231722213,1008918595,303765277,235474187,4069246893,766945465,337553864,1475418501,2943682380,4003061179,2743034109,4144047775,1551037884,1147550661,1543208500,2336434550,3408119516,3069049960,3102011747,3610369226,1113818384,328671808,2227573024,2236228733,3535486456,2935566865,3341394285,496906059,3702665459,226906860,2009195472,733156972,2842737049,294930682,1206477858,2835123396,2700099354,1451044056,573804783,2269728455,3644379585,2362090238,2564033334,2801107407,2776292904,3669462566,1068351396,742039012,1350078989,1784663195,1417561698,4136440770,2430122216,775550814,2193862645,2673705150,1775276924,1876241833,3475313331,3366754619,270040487,3902563182,3678124923,3441850377,1851332852,3969562369,2203032232,3868552805,2868897406,566021896,4011190502,3135740889,1248802510,3936291284,699432150,832877231,708780849,3332740144,899835584,1951317047,4236429990,3767586992,866637845,4043610186,1106041591,2144161806,395441711,1984812685,1139781709,3433712980,3835036895,2664543715,1282050075,3240894392,1181045119,2640243204,25965917,4203181171,4211818798,3009879386,2463879762,3910161971,1842759443,2597806476,933301370,1509430414,3943906441,3467192302,3076639029,3776767469,2051518780,2631065433,1441952575,404016761,1942435775,1408749034,1610459739,3745345300,2017778566,3400528769,3110650942,941896748,3265478751,371049330,3168937228,675039627,4279080257,967311729,135050206,3635733660,1683407248,2076935265,3576870512,1215061108,3501741890],v=[1347548327,1400783205,3273267108,2520393566,3409685355,4045380933,2880240216,2471224067,1428173050,4138563181,2441661558,636813900,4233094615,3620022987,2149987652,2411029155,1239331162,1730525723,2554718734,3781033664,46346101,310463728,2743944855,3328955385,3875770207,2501218972,3955191162,3667219033,768917123,3545789473,692707433,1150208456,1786102409,2029293177,1805211710,3710368113,3065962831,401639597,1724457132,3028143674,409198410,2196052529,1620529459,1164071807,3769721975,2226875310,486441376,2499348523,1483753576,428819965,2274680428,3075636216,598438867,3799141122,1474502543,711349675,129166120,53458370,2592523643,2782082824,4063242375,2988687269,3120694122,1559041666,730517276,2460449204,4042459122,2706270690,3446004468,3573941694,533804130,2328143614,2637442643,2695033685,839224033,1973745387,957055980,2856345839,106852767,1371368976,4181598602,1033297158,2933734917,1179510461,3046200461,91341917,1862534868,4284502037,605657339,2547432937,3431546947,2003294622,3182487618,2282195339,954669403,3682191598,1201765386,3917234703,3388507166,0,2198438022,1211247597,2887651696,1315723890,4227665663,1443857720,507358933,657861945,1678381017,560487590,3516619604,975451694,2970356327,261314535,3535072918,2652609425,1333838021,2724322336,1767536459,370938394,182621114,3854606378,1128014560,487725847,185469197,2918353863,3106780840,3356761769,2237133081,1286567175,3152976349,4255350624,2683765030,3160175349,3309594171,878443390,1988838185,3704300486,1756818940,1673061617,3403100636,272786309,1075025698,545572369,2105887268,4174560061,296679730,1841768865,1260232239,4091327024,3960309330,3497509347,1814803222,2578018489,4195456072,575138148,3299409036,446754879,3629546796,4011996048,3347532110,3252238545,4270639778,915985419,3483825537,681933534,651868046,2755636671,3828103837,223377554,2607439820,1649704518,3270937875,3901806776,1580087799,4118987695,3198115200,2087309459,2842678573,3016697106,1003007129,2802849917,1860738147,2077965243,164439672,4100872472,32283319,2827177882,1709610350,2125135846,136428751,3874428392,3652904859,3460984630,3572145929,3593056380,2939266226,824852259,818324884,3224740454,930369212,2801566410,2967507152,355706840,1257309336,4148292826,243256656,790073846,2373340630,1296297904,1422699085,3756299780,3818836405,457992840,3099667487,2135319889,77422314,1560382517,1945798516,788204353,1521706781,1385356242,870912086,325965383,2358957921,2050466060,2388260884,2313884476,4006521127,901210569,3990953189,1014646705,1503449823,1062597235,2031621326,3212035895,3931371469,1533017514,350174575,2256028891,2177544179,1052338372,741876788,1606591296,1914052035,213705253,2334669897,1107234197,1899603969,3725069491,2631447780,2422494913,1635502980,1893020342,1950903388,1120974935],b=[2807058932,1699970625,2764249623,1586903591,1808481195,1173430173,1487645946,59984867,4199882800,1844882806,1989249228,1277555970,3623636965,3419915562,1149249077,2744104290,1514790577,459744698,244860394,3235995134,1963115311,4027744588,2544078150,4190530515,1608975247,2627016082,2062270317,1507497298,2200818878,567498868,1764313568,3359936201,2305455554,2037970062,1047239e3,1910319033,1337376481,2904027272,2892417312,984907214,1243112415,830661914,861968209,2135253587,2011214180,2927934315,2686254721,731183368,1750626376,4246310725,1820824798,4172763771,3542330227,48394827,2404901663,2871682645,671593195,3254988725,2073724613,145085239,2280796200,2779915199,1790575107,2187128086,472615631,3029510009,4075877127,3802222185,4107101658,3201631749,1646252340,4270507174,1402811438,1436590835,3778151818,3950355702,3963161475,4020912224,2667994737,273792366,2331590177,104699613,95345982,3175501286,2377486676,1560637892,3564045318,369057872,4213447064,3919042237,1137477952,2658625497,1119727848,2340947849,1530455833,4007360968,172466556,266959938,516552836,0,2256734592,3980931627,1890328081,1917742170,4294704398,945164165,3575528878,958871085,3647212047,2787207260,1423022939,775562294,1739656202,3876557655,2530391278,2443058075,3310321856,547512796,1265195639,437656594,3121275539,719700128,3762502690,387781147,218828297,3350065803,2830708150,2848461854,428169201,122466165,3720081049,1627235199,648017665,4122762354,1002783846,2117360635,695634755,3336358691,4234721005,4049844452,3704280881,2232435299,574624663,287343814,612205898,1039717051,840019705,2708326185,793451934,821288114,1391201670,3822090177,376187827,3113855344,1224348052,1679968233,2361698556,1058709744,752375421,2431590963,1321699145,3519142200,2734591178,188127444,2177869557,3727205754,2384911031,3215212461,2648976442,2450346104,3432737375,1180849278,331544205,3102249176,4150144569,2952102595,2159976285,2474404304,766078933,313773861,2570832044,2108100632,1668212892,3145456443,2013908262,418672217,3070356634,2594734927,1852171925,3867060991,3473416636,3907448597,2614737639,919489135,164948639,2094410160,2997825956,590424639,2486224549,1723872674,3157750862,3399941250,3501252752,3625268135,2555048196,3673637356,1343127501,4130281361,3599595085,2957853679,1297403050,81781910,3051593425,2283490410,532201772,1367295589,3926170974,895287692,1953757831,1093597963,492483431,3528626907,1446242576,1192455638,1636604631,209336225,344873464,1015671571,669961897,3375740769,3857572124,2973530695,3747192018,1933530610,3464042516,935293895,3454686199,2858115069,1863638845,3683022916,4085369519,3292445032,875313188,1080017571,3279033885,621591778,1233856572,2504130317,24197544,3017672716,3835484340,3247465558,2220981195,3060847922,1551124588,1463996600],S=[4104605777,1097159550,396673818,660510266,2875968315,2638606623,4200115116,3808662347,821712160,1986918061,3430322568,38544885,3856137295,718002117,893681702,1654886325,2975484382,3122358053,3926825029,4274053469,796197571,1290801793,1184342925,3556361835,2405426947,2459735317,1836772287,1381620373,3196267988,1948373848,3764988233,3385345166,3263785589,2390325492,1480485785,3111247143,3780097726,2293045232,548169417,3459953789,3746175075,439452389,1362321559,1400849762,1685577905,1806599355,2174754046,137073913,1214797936,1174215055,3731654548,2079897426,1943217067,1258480242,529487843,1437280870,3945269170,3049390895,3313212038,923313619,679998e3,3215307299,57326082,377642221,3474729866,2041877159,133361907,1776460110,3673476453,96392454,878845905,2801699524,777231668,4082475170,2330014213,4142626212,2213296395,1626319424,1906247262,1846563261,562755902,3708173718,1040559837,3871163981,1418573201,3294430577,114585348,1343618912,2566595609,3186202582,1078185097,3651041127,3896688048,2307622919,425408743,3371096953,2081048481,1108339068,2216610296,0,2156299017,736970802,292596766,1517440620,251657213,2235061775,2933202493,758720310,265905162,1554391400,1532285339,908999204,174567692,1474760595,4002861748,2610011675,3234156416,3693126241,2001430874,303699484,2478443234,2687165888,585122620,454499602,151849742,2345119218,3064510765,514443284,4044981591,1963412655,2581445614,2137062819,19308535,1928707164,1715193156,4219352155,1126790795,600235211,3992742070,3841024952,836553431,1669664834,2535604243,3323011204,1243905413,3141400786,4180808110,698445255,2653899549,2989552604,2253581325,3252932727,3004591147,1891211689,2487810577,3915653703,4237083816,4030667424,2100090966,865136418,1229899655,953270745,3399679628,3557504664,4118925222,2061379749,3079546586,2915017791,983426092,2022837584,1607244650,2118541908,2366882550,3635996816,972512814,3283088770,1568718495,3499326569,3576539503,621982671,2895723464,410887952,2623762152,1002142683,645401037,1494807662,2595684844,1335535747,2507040230,4293295786,3167684641,367585007,3885750714,1865862730,2668221674,2960971305,2763173681,1059270954,2777952454,2724642869,1320957812,2194319100,2429595872,2815956275,77089521,3973773121,3444575871,2448830231,1305906550,4021308739,2857194700,2516901860,3518358430,1787304780,740276417,1699839814,1592394909,2352307457,2272556026,188821243,1729977011,3687994002,274084841,3594982253,3613494426,2701949495,4162096729,322734571,2837966542,1640576439,484830689,1202797690,3537852828,4067639125,349075736,3342319475,4157467219,4255800159,1030690015,1155237496,2951971274,1757691577,607398968,2738905026,499347990,3794078908,1011452712,227885567,2818666809,213114376,3034881240,1455525988,3414450555,850817237,1817998408,3092726480],E=[0,235474187,470948374,303765277,941896748,908933415,607530554,708780849,1883793496,2118214995,1817866830,1649639237,1215061108,1181045119,1417561698,1517767529,3767586992,4003061179,4236429990,4069246893,3635733660,3602770327,3299278474,3400528769,2430122216,2664543715,2362090238,2193862645,2835123396,2801107407,3035535058,3135740889,3678124923,3576870512,3341394285,3374361702,3810496343,3977675356,4279080257,4043610186,2876494627,2776292904,3076639029,3110650942,2472011535,2640243204,2403728665,2169303058,1001089995,899835584,666464733,699432150,59727847,226906860,530400753,294930682,1273168787,1172967064,1475418501,1509430414,1942435775,2110667444,1876241833,1641816226,2910219766,2743034109,2976151520,3211623147,2505202138,2606453969,2302690252,2269728455,3711829422,3543599269,3240894392,3475313331,3843699074,3943906441,4178062228,4144047775,1306967366,1139781709,1374988112,1610459739,1975683434,2076935265,1775276924,1742315127,1034867998,866637845,566021896,800440835,92987698,193195065,429456164,395441711,1984812685,2017778566,1784663195,1683407248,1315562145,1080094634,1383856311,1551037884,101039829,135050206,437757123,337553864,1042385657,807962610,573804783,742039012,2531067453,2564033334,2328828971,2227573024,2935566865,2700099354,3001755655,3168937228,3868552805,3902563182,4203181171,4102977912,3736164937,3501741890,3265478751,3433712980,1106041591,1340463100,1576976609,1408749034,2043211483,2009195472,1708848333,1809054150,832877231,1068351396,766945465,599762354,159417987,126454664,361929877,463180190,2709260871,2943682380,3178106961,3009879386,2572697195,2538681184,2236228733,2336434550,3509871135,3745345300,3441850377,3274667266,3910161971,3877198648,4110568485,4211818798,2597806476,2497604743,2261089178,2295101073,2733856160,2902087851,3202437046,2968011453,3936291284,3835036895,4136440770,4169408201,3535486456,3702665459,3467192302,3231722213,2051518780,1951317047,1716890410,1750902305,1113818384,1282050075,1584504582,1350078989,168810852,67556463,371049330,404016761,841739592,1008918595,775550814,540080725,3969562369,3801332234,4035489047,4269907996,3569255213,3669462566,3366754619,3332740144,2631065433,2463879762,2160117071,2395588676,2767645557,2868897406,3102011747,3069049960,202008497,33778362,270040487,504459436,875451293,975658646,675039627,641025152,2084704233,1917518562,1615861247,1851332852,1147550661,1248802510,1484005843,1451044056,933301370,967311729,733156972,632953703,260388950,25965917,328671808,496906059,1206477858,1239443753,1543208500,1441952575,2144161806,1908694277,1675577880,1842759443,3610369226,3644379585,3408119516,3307916247,4011190502,3776767469,4077384432,4245618683,2809771154,2842737049,3144396420,3043140495,2673705150,2438237621,2203032232,2370213795],C=[0,185469197,370938394,487725847,741876788,657861945,975451694,824852259,1483753576,1400783205,1315723890,1164071807,1950903388,2135319889,1649704518,1767536459,2967507152,3152976349,2801566410,2918353863,2631447780,2547432937,2328143614,2177544179,3901806776,3818836405,4270639778,4118987695,3299409036,3483825537,3535072918,3652904859,2077965243,1893020342,1841768865,1724457132,1474502543,1559041666,1107234197,1257309336,598438867,681933534,901210569,1052338372,261314535,77422314,428819965,310463728,3409685355,3224740454,3710368113,3593056380,3875770207,3960309330,4045380933,4195456072,2471224067,2554718734,2237133081,2388260884,3212035895,3028143674,2842678573,2724322336,4138563181,4255350624,3769721975,3955191162,3667219033,3516619604,3431546947,3347532110,2933734917,2782082824,3099667487,3016697106,2196052529,2313884476,2499348523,2683765030,1179510461,1296297904,1347548327,1533017514,1786102409,1635502980,2087309459,2003294622,507358933,355706840,136428751,53458370,839224033,957055980,605657339,790073846,2373340630,2256028891,2607439820,2422494913,2706270690,2856345839,3075636216,3160175349,3573941694,3725069491,3273267108,3356761769,4181598602,4063242375,4011996048,3828103837,1033297158,915985419,730517276,545572369,296679730,446754879,129166120,213705253,1709610350,1860738147,1945798516,2029293177,1239331162,1120974935,1606591296,1422699085,4148292826,4233094615,3781033664,3931371469,3682191598,3497509347,3446004468,3328955385,2939266226,2755636671,3106780840,2988687269,2198438022,2282195339,2501218972,2652609425,1201765386,1286567175,1371368976,1521706781,1805211710,1620529459,2105887268,1988838185,533804130,350174575,164439672,46346101,870912086,954669403,636813900,788204353,2358957921,2274680428,2592523643,2441661558,2695033685,2880240216,3065962831,3182487618,3572145929,3756299780,3270937875,3388507166,4174560061,4091327024,4006521127,3854606378,1014646705,930369212,711349675,560487590,272786309,457992840,106852767,223377554,1678381017,1862534868,1914052035,2031621326,1211247597,1128014560,1580087799,1428173050,32283319,182621114,401639597,486441376,768917123,651868046,1003007129,818324884,1503449823,1385356242,1333838021,1150208456,1973745387,2125135846,1673061617,1756818940,2970356327,3120694122,2802849917,2887651696,2637442643,2520393566,2334669897,2149987652,3917234703,3799141122,4284502037,4100872472,3309594171,3460984630,3545789473,3629546796,2050466060,1899603969,1814803222,1730525723,1443857720,1560382517,1075025698,1260232239,575138148,692707433,878443390,1062597235,243256656,91341917,409198410,325965383,3403100636,3252238545,3704300486,3620022987,3874428392,3990953189,4042459122,4227665663,2460449204,2578018489,2226875310,2411029155,3198115200,3046200461,2827177882,2743944855],A=[0,218828297,437656594,387781147,875313188,958871085,775562294,590424639,1750626376,1699970625,1917742170,2135253587,1551124588,1367295589,1180849278,1265195639,3501252752,3720081049,3399941250,3350065803,3835484340,3919042237,4270507174,4085369519,3102249176,3051593425,2734591178,2952102595,2361698556,2177869557,2530391278,2614737639,3145456443,3060847922,2708326185,2892417312,2404901663,2187128086,2504130317,2555048196,3542330227,3727205754,3375740769,3292445032,3876557655,3926170974,4246310725,4027744588,1808481195,1723872674,1910319033,2094410160,1608975247,1391201670,1173430173,1224348052,59984867,244860394,428169201,344873464,935293895,984907214,766078933,547512796,1844882806,1627235199,2011214180,2062270317,1507497298,1423022939,1137477952,1321699145,95345982,145085239,532201772,313773861,830661914,1015671571,731183368,648017665,3175501286,2957853679,2807058932,2858115069,2305455554,2220981195,2474404304,2658625497,3575528878,3625268135,3473416636,3254988725,3778151818,3963161475,4213447064,4130281361,3599595085,3683022916,3432737375,3247465558,3802222185,4020912224,4172763771,4122762354,3201631749,3017672716,2764249623,2848461854,2331590177,2280796200,2431590963,2648976442,104699613,188127444,472615631,287343814,840019705,1058709744,671593195,621591778,1852171925,1668212892,1953757831,2037970062,1514790577,1463996600,1080017571,1297403050,3673637356,3623636965,3235995134,3454686199,4007360968,3822090177,4107101658,4190530515,2997825956,3215212461,2830708150,2779915199,2256734592,2340947849,2627016082,2443058075,172466556,122466165,273792366,492483431,1047239e3,861968209,612205898,695634755,1646252340,1863638845,2013908262,1963115311,1446242576,1530455833,1277555970,1093597963,1636604631,1820824798,2073724613,1989249228,1436590835,1487645946,1337376481,1119727848,164948639,81781910,331544205,516552836,1039717051,821288114,669961897,719700128,2973530695,3157750862,2871682645,2787207260,2232435299,2283490410,2667994737,2450346104,3647212047,3564045318,3279033885,3464042516,3980931627,3762502690,4150144569,4199882800,3070356634,3121275539,2904027272,2686254721,2200818878,2384911031,2570832044,2486224549,3747192018,3528626907,3310321856,3359936201,3950355702,3867060991,4049844452,4234721005,1739656202,1790575107,2108100632,1890328081,1402811438,1586903591,1233856572,1149249077,266959938,48394827,369057872,418672217,1002783846,919489135,567498868,752375421,209336225,24197544,376187827,459744698,945164165,895287692,574624663,793451934,1679968233,1764313568,2117360635,1933530610,1343127501,1560637892,1243112415,1192455638,3704280881,3519142200,3336358691,3419915562,3907448597,3857572124,4075877127,4294704398,3029510009,3113855344,2927934315,2744104290,2159976285,2377486676,2594734927,2544078150],k=[0,151849742,303699484,454499602,607398968,758720310,908999204,1059270954,1214797936,1097159550,1517440620,1400849762,1817998408,1699839814,2118541908,2001430874,2429595872,2581445614,2194319100,2345119218,3034881240,3186202582,2801699524,2951971274,3635996816,3518358430,3399679628,3283088770,4237083816,4118925222,4002861748,3885750714,1002142683,850817237,698445255,548169417,529487843,377642221,227885567,77089521,1943217067,2061379749,1640576439,1757691577,1474760595,1592394909,1174215055,1290801793,2875968315,2724642869,3111247143,2960971305,2405426947,2253581325,2638606623,2487810577,3808662347,3926825029,4044981591,4162096729,3342319475,3459953789,3576539503,3693126241,1986918061,2137062819,1685577905,1836772287,1381620373,1532285339,1078185097,1229899655,1040559837,923313619,740276417,621982671,439452389,322734571,137073913,19308535,3871163981,4021308739,4104605777,4255800159,3263785589,3414450555,3499326569,3651041127,2933202493,2815956275,3167684641,3049390895,2330014213,2213296395,2566595609,2448830231,1305906550,1155237496,1607244650,1455525988,1776460110,1626319424,2079897426,1928707164,96392454,213114376,396673818,514443284,562755902,679998e3,865136418,983426092,3708173718,3557504664,3474729866,3323011204,4180808110,4030667424,3945269170,3794078908,2507040230,2623762152,2272556026,2390325492,2975484382,3092726480,2738905026,2857194700,3973773121,3856137295,4274053469,4157467219,3371096953,3252932727,3673476453,3556361835,2763173681,2915017791,3064510765,3215307299,2156299017,2307622919,2459735317,2610011675,2081048481,1963412655,1846563261,1729977011,1480485785,1362321559,1243905413,1126790795,878845905,1030690015,645401037,796197571,274084841,425408743,38544885,188821243,3613494426,3731654548,3313212038,3430322568,4082475170,4200115116,3780097726,3896688048,2668221674,2516901860,2366882550,2216610296,3141400786,2989552604,2837966542,2687165888,1202797690,1320957812,1437280870,1554391400,1669664834,1787304780,1906247262,2022837584,265905162,114585348,499347990,349075736,736970802,585122620,972512814,821712160,2595684844,2478443234,2293045232,2174754046,3196267988,3079546586,2895723464,2777952454,3537852828,3687994002,3234156416,3385345166,4142626212,4293295786,3841024952,3992742070,174567692,57326082,410887952,292596766,777231668,660510266,1011452712,893681702,1108339068,1258480242,1343618912,1494807662,1715193156,1865862730,1948373848,2100090966,2701949495,2818666809,3004591147,3122358053,2235061775,2352307457,2535604243,2653899549,3915653703,3764988233,4219352155,4067639125,3444575871,3294430577,3746175075,3594982253,836553431,953270745,600235211,718002117,367585007,484830689,133361907,251657213,2041877159,1891211689,1806599355,1654886325,1568718495,1418573201,1335535747,1184342925];function x(e){for(var r=[],t=0;t<e.length;t+=4)r.push(e[t]<<24|e[t+1]<<16|e[t+2]<<8|e[t+3]);return r}var P=function(e){if(!(this instanceof P))throw Error("AES must be instanitated with `new`");Object.defineProperty(this,"key",{value:i(e,!0)}),this._prepare()};P.prototype._prepare=function(){var e=u[this.key.length];if(null==e)throw new Error("invalid key size (must be 16, 24 or 32 bytes)");this._Ke=[],this._Kd=[];for(var r=0;r<=e;r++)this._Ke.push([0,0,0,0]),this._Kd.push([0,0,0,0]);var t,n=4*(e+1),i=this.key.length/4,o=x(this.key);for(r=0;r<i;r++)t=r>>2,this._Ke[t][r%4]=o[r],this._Kd[e-t][r%4]=o[r];for(var a,s=0,c=i;c<n;){if(a=o[i-1],o[0]^=f[a>>16&255]<<24^f[a>>8&255]<<16^f[255&a]<<8^f[a>>24&255]^h[s]<<24,s+=1,8!=i)for(r=1;r<i;r++)o[r]^=o[r-1];else{for(r=1;r<i/2;r++)o[r]^=o[r-1];a=o[i/2-1],o[i/2]^=f[255&a]^f[a>>8&255]<<8^f[a>>16&255]<<16^f[a>>24&255]<<24;for(r=i/2+1;r<i;r++)o[r]^=o[r-1]}for(r=0;r<i&&c<n;)l=c>>2,p=c%4,this._Ke[l][p]=o[r],this._Kd[e-l][p]=o[r++],c++}for(var l=1;l<e;l++)for(var p=0;p<4;p++)a=this._Kd[l][p],this._Kd[l][p]=E[a>>24&255]^C[a>>16&255]^A[a>>8&255]^k[255&a]},P.prototype.encrypt=function(e){if(16!=e.length)throw new Error("invalid plaintext size (must be 16 bytes)");for(var r=this._Ke.length-1,t=[0,0,0,0],n=x(e),i=0;i<4;i++)n[i]^=this._Ke[0][i];for(var a=1;a<r;a++){for(i=0;i<4;i++)t[i]=d[n[i]>>24&255]^y[n[(i+1)%4]>>16&255]^g[n[(i+2)%4]>>8&255]^m[255&n[(i+3)%4]]^this._Ke[a][i];n=t.slice()}var s,c=o(16);for(i=0;i<4;i++)s=this._Ke[r][i],c[4*i]=255&(f[n[i]>>24&255]^s>>24),c[4*i+1]=255&(f[n[(i+1)%4]>>16&255]^s>>16),c[4*i+2]=255&(f[n[(i+2)%4]>>8&255]^s>>8),c[4*i+3]=255&(f[255&n[(i+3)%4]]^s);return c},P.prototype.decrypt=function(e){if(16!=e.length)throw new Error("invalid ciphertext size (must be 16 bytes)");for(var r=this._Kd.length-1,t=[0,0,0,0],n=x(e),i=0;i<4;i++)n[i]^=this._Kd[0][i];for(var a=1;a<r;a++){for(i=0;i<4;i++)t[i]=w[n[i]>>24&255]^v[n[(i+3)%4]>>16&255]^b[n[(i+2)%4]>>8&255]^S[255&n[(i+1)%4]]^this._Kd[a][i];n=t.slice()}var s,c=o(16);for(i=0;i<4;i++)s=this._Kd[r][i],c[4*i]=255&(p[n[i]>>24&255]^s>>24),c[4*i+1]=255&(p[n[(i+3)%4]>>16&255]^s>>16),c[4*i+2]=255&(p[n[(i+2)%4]>>8&255]^s>>8),c[4*i+3]=255&(p[255&n[(i+1)%4]]^s);return c};var K=function(e){if(!(this instanceof K))throw Error("AES must be instanitated with `new`");this.description="Electronic Code Block",this.name="ecb",this._aes=new P(e)};K.prototype.encrypt=function(e){if((e=i(e)).length%16!=0)throw new Error("invalid plaintext size (must be multiple of 16 bytes)");for(var r=o(e.length),t=o(16),n=0;n<e.length;n+=16)a(e,t,0,n,n+16),a(t=this._aes.encrypt(t),r,n);return r},K.prototype.decrypt=function(e){if((e=i(e)).length%16!=0)throw new Error("invalid ciphertext size (must be multiple of 16 bytes)");for(var r=o(e.length),t=o(16),n=0;n<e.length;n+=16)a(e,t,0,n,n+16),a(t=this._aes.decrypt(t),r,n);return r};var T=function(e,r){if(!(this instanceof T))throw Error("AES must be instanitated with `new`");if(this.description="Cipher Block Chaining",this.name="cbc",r){if(16!=r.length)throw new Error("invalid initialation vector size (must be 16 bytes)")}else r=o(16);this._lastCipherblock=i(r,!0),this._aes=new P(e)};T.prototype.encrypt=function(e){if((e=i(e)).length%16!=0)throw new Error("invalid plaintext size (must be multiple of 16 bytes)");for(var r=o(e.length),t=o(16),n=0;n<e.length;n+=16){a(e,t,0,n,n+16);for(var s=0;s<16;s++)t[s]^=this._lastCipherblock[s];this._lastCipherblock=this._aes.encrypt(t),a(this._lastCipherblock,r,n)}return r},T.prototype.decrypt=function(e){if((e=i(e)).length%16!=0)throw new Error("invalid ciphertext size (must be multiple of 16 bytes)");for(var r=o(e.length),t=o(16),n=0;n<e.length;n+=16){a(e,t,0,n,n+16),t=this._aes.decrypt(t);for(var s=0;s<16;s++)r[n+s]=t[s]^this._lastCipherblock[s];a(e,this._lastCipherblock,0,n,n+16)}return r};var B=function(e,r,t){if(!(this instanceof B))throw Error("AES must be instanitated with `new`");if(this.description="Cipher Feedback",this.name="cfb",r){if(16!=r.length)throw new Error("invalid initialation vector size (must be 16 size)")}else r=o(16);t||(t=1),this.segmentSize=t,this._shiftRegister=i(r,!0),this._aes=new P(e)};B.prototype.encrypt=function(e){if(e.length%this.segmentSize!=0)throw new Error("invalid plaintext size (must be segmentSize bytes)");for(var r,t=i(e,!0),n=0;n<t.length;n+=this.segmentSize){r=this._aes.encrypt(this._shiftRegister);for(var o=0;o<this.segmentSize;o++)t[n+o]^=r[o];a(this._shiftRegister,this._shiftRegister,0,this.segmentSize),a(t,this._shiftRegister,16-this.segmentSize,n,n+this.segmentSize)}return t},B.prototype.decrypt=function(e){if(e.length%this.segmentSize!=0)throw new Error("invalid ciphertext size (must be segmentSize bytes)");for(var r,t=i(e,!0),n=0;n<t.length;n+=this.segmentSize){r=this._aes.encrypt(this._shiftRegister);for(var o=0;o<this.segmentSize;o++)t[n+o]^=r[o];a(this._shiftRegister,this._shiftRegister,0,this.segmentSize),a(e,this._shiftRegister,16-this.segmentSize,n,n+this.segmentSize)}return t};var R=function(e,r){if(!(this instanceof R))throw Error("AES must be instanitated with `new`");if(this.description="Output Feedback",this.name="ofb",r){if(16!=r.length)throw new Error("invalid initialation vector size (must be 16 bytes)")}else r=o(16);this._lastPrecipher=i(r,!0),this._lastPrecipherIndex=16,this._aes=new P(e)};R.prototype.encrypt=function(e){for(var r=i(e,!0),t=0;t<r.length;t++)16===this._lastPrecipherIndex&&(this._lastPrecipher=this._aes.encrypt(this._lastPrecipher),this._lastPrecipherIndex=0),r[t]^=this._lastPrecipher[this._lastPrecipherIndex++];return r},R.prototype.decrypt=R.prototype.encrypt;var D=function(e){if(!(this instanceof D))throw Error("Counter must be instanitated with `new`");0===e||e||(e=1),"number"==typeof e?(this._counter=o(16),this.setValue(e)):this.setBytes(e)};D.prototype.setValue=function(e){if("number"!=typeof e||parseInt(e)!=e)throw new Error("invalid counter value (must be an integer)");for(var r=15;r>=0;--r)this._counter[r]=e%256,e>>=8},D.prototype.setBytes=function(e){if(16!=(e=i(e,!0)).length)throw new Error("invalid counter bytes size (must be 16 bytes)");this._counter=e},D.prototype.increment=function(){for(var e=15;e>=0;e--){if(255!==this._counter[e]){this._counter[e]++;break}this._counter[e]=0}};var M=function(e,r){if(!(this instanceof M))throw Error("AES must be instanitated with `new`");this.description="Counter",this.name="ctr",r instanceof D||(r=new D(r)),this._counter=r,this._remainingCounter=null,this._remainingCounterIndex=16,this._aes=new P(e)};M.prototype.encrypt=function(e){for(var r=i(e,!0),t=0;t<r.length;t++)16===this._remainingCounterIndex&&(this._remainingCounter=this._aes.encrypt(this._counter._counter),this._remainingCounterIndex=0,this._counter.increment()),r[t]^=this._remainingCounter[this._remainingCounterIndex++];return r},M.prototype.decrypt=M.prototype.encrypt;var F={AES:P,Counter:D,ModeOfOperation:{ecb:K,cbc:T,cfb:B,ofb:R,ctr:M},utils:{hex:l,utf8:c},padding:{pkcs7:{pad:function(e){var r=16-(e=i(e,!0)).length%16,t=o(e.length+r);a(e,t);for(var n=e.length;n<t.length;n++)t[n]=r;return t},strip:function(e){if((e=i(e,!0)).length<16)throw new Error("PKCS#7 invalid length");var r=e[e.length-1];if(r>16)throw new Error("PKCS#7 padding byte out of range");for(var t=e.length-r,n=0;n<r;n++)if(e[t+n]!==r)throw new Error("PKCS#7 invalid padding byte");var s=o(t);return a(e,s,0,0,t),s}}},_arrayTest:{coerceArray:i,createArray:o,copyArray:a}};e.exports=F}()},69725:(e,r,t)=>{"use strict";var n=t(48834).Buffer,i=new(0,t(87554).ec)("secp256k1"),o=t.g.crypto||t.g.msCrypto||{},a=o.subtle||o.webkitSubtle,s=t(5634);const c=n.from("fffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141","hex"),l=n.alloc(32,0);function u(e,r){if(!e)throw new Error(r||"Assertion failed")}function h(e){return r=e,!(!n.isBuffer(r)||32!==r.length)&&(e.compare(l)>0&&e.compare(c)<0);var r}function f(e){var r=new Uint8Array(e);return void 0===o.getRandomValues?n.from(s.randomBytes(e)):(o.getRandomValues(r),n.from(r))}function p(e){return new Promise((function(r){var t=s.createHash("sha512").update(e).digest();r(new Uint8Array(t))}))}function d(e){return function(r,t,i){return new Promise((function(o){if(a){return a.importKey("raw",t,{name:"AES-CBC"},!1,[e]).then((function(t){var n={name:"AES-CBC",iv:r};return a[e](n,t,i)})).then((function(e){o(n.from(new Uint8Array(e)))}))}if("encrypt"===e){var c=s.createCipheriv("aes-256-cbc",t,r);let e=c.update(i),a=c.final();o(n.concat([e,a]))}else if("decrypt"===e){var l=s.createDecipheriv("aes-256-cbc",t,r);let e=l.update(i),a=l.final();o(n.concat([e,a]))}}))}}var y=d("encrypt"),g=d("decrypt");var m=function(e){return u(32===e.length,"Bad private key"),u(h(e),"Bad private key"),n.from(i.keyFromPrivate(e).getPublic("arr"))};var w=function(e,r){return new Promise((function(t){u(n.isBuffer(e),"Bad private key"),u(n.isBuffer(r),"Bad public key"),u(32===e.length,"Bad private key"),u(h(e),"Bad private key"),u(65===r.length||33===r.length,"Bad public key"),65===r.length&&u(4===r[0],"Bad public key"),33===r.length&&u(2===r[0]||3===r[0],"Bad public key");var o=i.keyFromPrivate(e),a=i.keyFromPublic(r),s=o.derive(a.getPublic());t(n.from(s.toArray()))}))};r.HI=function(e,r,t){var i,o,a,c;return t=t||{},new Promise((function(r){for(var n=t.ephemPrivateKey||f(32);!h(n);)n=t.ephemPrivateKey||f(32);o=m(n),r(w(n,e))})).then((function(e){return p(e)})).then((function(e){i=t.iv||f(16);var n=e.slice(0,32);return c=e.slice(32),y(i,n,r)})).then((function(e){a=e;var r=n.concat([i,o,a]);return function(e,r){return new Promise((function(t){var i=s.createHmac("sha256",n.from(e));i.update(r),t(i.digest())}))}(c,r)})).then((function(e){return{iv:i,ephemPublicKey:o,ciphertext:a,mac:e}}))},r.pe=function(e,r){var t;return w(e,r.ephemPublicKey).then((function(e){return p(e)})).then((function(e){t=e.slice(0,32);var i,o,a,c=e.slice(32),l=n.concat([r.iv,r.ephemPublicKey,r.ciphertext]);return i=c,o=l,a=r.mac,new Promise((function(e){var r=s.createHmac("sha256",n.from(i));r.update(o),e(function(e,r){if(e.length!==r.length)return!1;for(var t=0,n=0;n<e.length;n++)t|=e[n]^r[n];return 0===t}(r.digest(),a))}))})).then((function(e){return u(e,"Bad MAC"),g(r.iv,t,r.ciphertext)})).then((function(e){return n.from(new Uint8Array(e))}))}},75040:(e,r,t)=>{"use strict";t.r(r),t.d(r,{calculateContractAddress:()=>ir,cipher:()=>o,createIdentity:()=>Pe,decryptWithPrivateKey:()=>We,default:()=>vr,encryptWithPublicKey:()=>Ve,hash:()=>a,hex:()=>s,publicKey:()=>i,publicKeyByPrivateKey:()=>je,recover:()=>Ye,recoverPublicKey:()=>Je,sign:()=>Ze,signTransaction:()=>Xe,txDataByCompiled:()=>nr,util:()=>n,vrs:()=>c});var n={};t.r(n),t.d(n,{addLeading0x:()=>Re,hexToUnit8Array:()=>Me,removeLeading0x:()=>Be,uint8ArrayToHex:()=>De});var i={};t.r(i),t.d(i,{compress:()=>Ie,decompress:()=>Ge,toAddress:()=>_e});var o={};t.r(o),t.d(o,{parse:()=>Oe,stringify:()=>Le});var a={};t.r(a),t.d(a,{SIGN_PREFIX:()=>pr,keccak256:()=>fr});var s={};t.r(s),t.d(s,{compress:()=>yr,decompress:()=>gr});var c={};t.r(c),t.d(c,{fromString:()=>mr,toString:()=>wr});var l=t(59256),u=t(67640),h=t(78011);const f=new h.Yd("random/5.7.0");const p=function(){if("undefined"!=typeof self)return self;if("undefined"!=typeof window)return window;if(void 0!==t.g)return t.g;throw new Error("unable to locate global object")}();let d=p.crypto||p.msCrypto;function y(e){(e<=0||e>1024||e%1||e!=e)&&f.throwArgumentError("invalid length","length",e);const r=new Uint8Array(e);return d.getRandomValues(r),(0,u.arrayify)(r)}d&&d.getRandomValues||(f.warn("WARNING: Missing strong random number source"),d={getRandomValues:function(e){return f.throwError("no secure random source avaialble",h.Yd.errors.UNSUPPORTED_OPERATION,{operation:"crypto.getRandomValues"})}});var g=t(58549),m=t(7495),w=t(10196),v=t(2222);var b=t(79378),S=t(50511),E=t(10528),C=t(84772);function A(e,r,t,n,i){let o;e=(0,u.arrayify)(e),r=(0,u.arrayify)(r);let a=1;const s=new Uint8Array(n),c=new Uint8Array(r.length+4);let l,h;c.set(r);for(let f=1;f<=a;f++){c[r.length]=f>>24&255,c[r.length+1]=f>>16&255,c[r.length+2]=f>>8&255,c[r.length+3]=255&f;let p=(0,u.arrayify)((0,C.Gy)(i,e,c));o||(o=p.length,h=new Uint8Array(o),a=Math.ceil(n/o),l=n-(a-1)*o),h.set(p);for(let r=1;r<t;r++){p=(0,u.arrayify)((0,C.Gy)(i,e,p));for(let e=0;e<o;e++)h[e]^=p[e]}const d=(f-1)*o,y=f===a?l:o;s.set((0,u.arrayify)(h).slice(0,y),d)}return(0,u.hexlify)(s)}var k=t(80221),x=t(17459),P=t(21723),K=t(13390),T=t(32235);const B=new h.Yd("wordlists/5.7.0");class R{constructor(e){B.checkAbstract(new.target,R),(0,k.zG)(this,"locale",e)}split(e){return e.toLowerCase().split(/ +/g)}join(e){return e.join(" ")}static check(e){const r=[];for(let t=0;t<2048;t++){const n=e.getWord(t);if(t!==e.getWordIndex(n))return"0x";r.push(n)}return(0,T.id)(r.join("\n")+"\n")}static register(e,r){r||(r=e.locale)}}let D=null;function M(e){if(null==D&&(D="AbandonAbilityAbleAboutAboveAbsentAbsorbAbstractAbsurdAbuseAccessAccidentAccountAccuseAchieveAcidAcousticAcquireAcrossActActionActorActressActualAdaptAddAddictAddressAdjustAdmitAdultAdvanceAdviceAerobicAffairAffordAfraidAgainAgeAgentAgreeAheadAimAirAirportAisleAlarmAlbumAlcoholAlertAlienAllAlleyAllowAlmostAloneAlphaAlreadyAlsoAlterAlwaysAmateurAmazingAmongAmountAmusedAnalystAnchorAncientAngerAngleAngryAnimalAnkleAnnounceAnnualAnotherAnswerAntennaAntiqueAnxietyAnyApartApologyAppearAppleApproveAprilArchArcticAreaArenaArgueArmArmedArmorArmyAroundArrangeArrestArriveArrowArtArtefactArtistArtworkAskAspectAssaultAssetAssistAssumeAsthmaAthleteAtomAttackAttendAttitudeAttractAuctionAuditAugustAuntAuthorAutoAutumnAverageAvocadoAvoidAwakeAwareAwayAwesomeAwfulAwkwardAxisBabyBachelorBaconBadgeBagBalanceBalconyBallBambooBananaBannerBarBarelyBargainBarrelBaseBasicBasketBattleBeachBeanBeautyBecauseBecomeBeefBeforeBeginBehaveBehindBelieveBelowBeltBenchBenefitBestBetrayBetterBetweenBeyondBicycleBidBikeBindBiologyBirdBirthBitterBlackBladeBlameBlanketBlastBleakBlessBlindBloodBlossomBlouseBlueBlurBlushBoardBoatBodyBoilBombBoneBonusBookBoostBorderBoringBorrowBossBottomBounceBoxBoyBracketBrainBrandBrassBraveBreadBreezeBrickBridgeBriefBrightBringBriskBroccoliBrokenBronzeBroomBrotherBrownBrushBubbleBuddyBudgetBuffaloBuildBulbBulkBulletBundleBunkerBurdenBurgerBurstBusBusinessBusyButterBuyerBuzzCabbageCabinCableCactusCageCakeCallCalmCameraCampCanCanalCancelCandyCannonCanoeCanvasCanyonCapableCapitalCaptainCarCarbonCardCargoCarpetCarryCartCaseCashCasinoCastleCasualCatCatalogCatchCategoryCattleCaughtCauseCautionCaveCeilingCeleryCementCensusCenturyCerealCertainChairChalkChampionChangeChaosChapterChargeChaseChatCheapCheckCheeseChefCherryChestChickenChiefChildChimneyChoiceChooseChronicChuckleChunkChurnCigarCinnamonCircleCitizenCityCivilClaimClapClarifyClawClayCleanClerkCleverClickClientCliffClimbClinicClipClockClogCloseClothCloudClownClubClumpClusterClutchCoachCoastCoconutCodeCoffeeCoilCoinCollectColorColumnCombineComeComfortComicCommonCompanyConcertConductConfirmCongressConnectConsiderControlConvinceCookCoolCopperCopyCoralCoreCornCorrectCostCottonCouchCountryCoupleCourseCousinCoverCoyoteCrackCradleCraftCramCraneCrashCraterCrawlCrazyCreamCreditCreekCrewCricketCrimeCrispCriticCropCrossCrouchCrowdCrucialCruelCruiseCrumbleCrunchCrushCryCrystalCubeCultureCupCupboardCuriousCurrentCurtainCurveCushionCustomCuteCycleDadDamageDampDanceDangerDaringDashDaughterDawnDayDealDebateDebrisDecadeDecemberDecideDeclineDecorateDecreaseDeerDefenseDefineDefyDegreeDelayDeliverDemandDemiseDenialDentistDenyDepartDependDepositDepthDeputyDeriveDescribeDesertDesignDeskDespairDestroyDetailDetectDevelopDeviceDevoteDiagramDialDiamondDiaryDiceDieselDietDifferDigitalDignityDilemmaDinnerDinosaurDirectDirtDisagreeDiscoverDiseaseDishDismissDisorderDisplayDistanceDivertDivideDivorceDizzyDoctorDocumentDogDollDolphinDomainDonateDonkeyDonorDoorDoseDoubleDoveDraftDragonDramaDrasticDrawDreamDressDriftDrillDrinkDripDriveDropDrumDryDuckDumbDuneDuringDustDutchDutyDwarfDynamicEagerEagleEarlyEarnEarthEasilyEastEasyEchoEcologyEconomyEdgeEditEducateEffortEggEightEitherElbowElderElectricElegantElementElephantElevatorEliteElseEmbarkEmbodyEmbraceEmergeEmotionEmployEmpowerEmptyEnableEnactEndEndlessEndorseEnemyEnergyEnforceEngageEngineEnhanceEnjoyEnlistEnoughEnrichEnrollEnsureEnterEntireEntryEnvelopeEpisodeEqualEquipEraEraseErodeErosionErrorEruptEscapeEssayEssenceEstateEternalEthicsEvidenceEvilEvokeEvolveExactExampleExcessExchangeExciteExcludeExcuseExecuteExerciseExhaustExhibitExileExistExitExoticExpandExpectExpireExplainExposeExpressExtendExtraEyeEyebrowFabricFaceFacultyFadeFaintFaithFallFalseFameFamilyFamousFanFancyFantasyFarmFashionFatFatalFatherFatigueFaultFavoriteFeatureFebruaryFederalFeeFeedFeelFemaleFenceFestivalFetchFeverFewFiberFictionFieldFigureFileFilmFilterFinalFindFineFingerFinishFireFirmFirstFiscalFishFitFitnessFixFlagFlameFlashFlatFlavorFleeFlightFlipFloatFlockFloorFlowerFluidFlushFlyFoamFocusFogFoilFoldFollowFoodFootForceForestForgetForkFortuneForumForwardFossilFosterFoundFoxFragileFrameFrequentFreshFriendFringeFrogFrontFrostFrownFrozenFruitFuelFunFunnyFurnaceFuryFutureGadgetGainGalaxyGalleryGameGapGarageGarbageGardenGarlicGarmentGasGaspGateGatherGaugeGazeGeneralGeniusGenreGentleGenuineGestureGhostGiantGiftGiggleGingerGiraffeGirlGiveGladGlanceGlareGlassGlideGlimpseGlobeGloomGloryGloveGlowGlueGoatGoddessGoldGoodGooseGorillaGospelGossipGovernGownGrabGraceGrainGrantGrapeGrassGravityGreatGreenGridGriefGritGroceryGroupGrowGruntGuardGuessGuideGuiltGuitarGunGymHabitHairHalfHammerHamsterHandHappyHarborHardHarshHarvestHatHaveHawkHazardHeadHealthHeartHeavyHedgehogHeightHelloHelmetHelpHenHeroHiddenHighHillHintHipHireHistoryHobbyHockeyHoldHoleHolidayHollowHomeHoneyHoodHopeHornHorrorHorseHospitalHostHotelHourHoverHubHugeHumanHumbleHumorHundredHungryHuntHurdleHurryHurtHusbandHybridIceIconIdeaIdentifyIdleIgnoreIllIllegalIllnessImageImitateImmenseImmuneImpactImposeImproveImpulseInchIncludeIncomeIncreaseIndexIndicateIndoorIndustryInfantInflictInformInhaleInheritInitialInjectInjuryInmateInnerInnocentInputInquiryInsaneInsectInsideInspireInstallIntactInterestIntoInvestInviteInvolveIronIslandIsolateIssueItemIvoryJacketJaguarJarJazzJealousJeansJellyJewelJobJoinJokeJourneyJoyJudgeJuiceJumpJungleJuniorJunkJustKangarooKeenKeepKetchupKeyKickKidKidneyKindKingdomKissKitKitchenKiteKittenKiwiKneeKnifeKnockKnowLabLabelLaborLadderLadyLakeLampLanguageLaptopLargeLaterLatinLaughLaundryLavaLawLawnLawsuitLayerLazyLeaderLeafLearnLeaveLectureLeftLegLegalLegendLeisureLemonLendLengthLensLeopardLessonLetterLevelLiarLibertyLibraryLicenseLifeLiftLightLikeLimbLimitLinkLionLiquidListLittleLiveLizardLoadLoanLobsterLocalLockLogicLonelyLongLoopLotteryLoudLoungeLoveLoyalLuckyLuggageLumberLunarLunchLuxuryLyricsMachineMadMagicMagnetMaidMailMainMajorMakeMammalManManageMandateMangoMansionManualMapleMarbleMarchMarginMarineMarketMarriageMaskMassMasterMatchMaterialMathMatrixMatterMaximumMazeMeadowMeanMeasureMeatMechanicMedalMediaMelodyMeltMemberMemoryMentionMenuMercyMergeMeritMerryMeshMessageMetalMethodMiddleMidnightMilkMillionMimicMindMinimumMinorMinuteMiracleMirrorMiseryMissMistakeMixMixedMixtureMobileModelModifyMomMomentMonitorMonkeyMonsterMonthMoonMoralMoreMorningMosquitoMotherMotionMotorMountainMouseMoveMovieMuchMuffinMuleMultiplyMuscleMuseumMushroomMusicMustMutualMyselfMysteryMythNaiveNameNapkinNarrowNastyNationNatureNearNeckNeedNegativeNeglectNeitherNephewNerveNestNetNetworkNeutralNeverNewsNextNiceNightNobleNoiseNomineeNoodleNormalNorthNoseNotableNoteNothingNoticeNovelNowNuclearNumberNurseNutOakObeyObjectObligeObscureObserveObtainObviousOccurOceanOctoberOdorOffOfferOfficeOftenOilOkayOldOliveOlympicOmitOnceOneOnionOnlineOnlyOpenOperaOpinionOpposeOptionOrangeOrbitOrchardOrderOrdinaryOrganOrientOriginalOrphanOstrichOtherOutdoorOuterOutputOutsideOvalOvenOverOwnOwnerOxygenOysterOzonePactPaddlePagePairPalacePalmPandaPanelPanicPantherPaperParadeParentParkParrotPartyPassPatchPathPatientPatrolPatternPausePavePaymentPeacePeanutPearPeasantPelicanPenPenaltyPencilPeoplePepperPerfectPermitPersonPetPhonePhotoPhrasePhysicalPianoPicnicPicturePiecePigPigeonPillPilotPinkPioneerPipePistolPitchPizzaPlacePlanetPlasticPlatePlayPleasePledgePluckPlugPlungePoemPoetPointPolarPolePolicePondPonyPoolPopularPortionPositionPossiblePostPotatoPotteryPovertyPowderPowerPracticePraisePredictPreferPreparePresentPrettyPreventPricePridePrimaryPrintPriorityPrisonPrivatePrizeProblemProcessProduceProfitProgramProjectPromoteProofPropertyProsperProtectProudProvidePublicPuddingPullPulpPulsePumpkinPunchPupilPuppyPurchasePurityPurposePursePushPutPuzzlePyramidQualityQuantumQuarterQuestionQuickQuitQuizQuoteRabbitRaccoonRaceRackRadarRadioRailRainRaiseRallyRampRanchRandomRangeRapidRareRateRatherRavenRawRazorReadyRealReasonRebelRebuildRecallReceiveRecipeRecordRecycleReduceReflectReformRefuseRegionRegretRegularRejectRelaxReleaseReliefRelyRemainRememberRemindRemoveRenderRenewRentReopenRepairRepeatReplaceReportRequireRescueResembleResistResourceResponseResultRetireRetreatReturnReunionRevealReviewRewardRhythmRibRibbonRiceRichRideRidgeRifleRightRigidRingRiotRippleRiskRitualRivalRiverRoadRoastRobotRobustRocketRomanceRoofRookieRoomRoseRotateRoughRoundRouteRoyalRubberRudeRugRuleRunRunwayRuralSadSaddleSadnessSafeSailSaladSalmonSalonSaltSaluteSameSampleSandSatisfySatoshiSauceSausageSaveSayScaleScanScareScatterSceneSchemeSchoolScienceScissorsScorpionScoutScrapScreenScriptScrubSeaSearchSeasonSeatSecondSecretSectionSecuritySeedSeekSegmentSelectSellSeminarSeniorSenseSentenceSeriesServiceSessionSettleSetupSevenShadowShaftShallowShareShedShellSheriffShieldShiftShineShipShiverShockShoeShootShopShortShoulderShoveShrimpShrugShuffleShySiblingSickSideSiegeSightSignSilentSilkSillySilverSimilarSimpleSinceSingSirenSisterSituateSixSizeSkateSketchSkiSkillSkinSkirtSkullSlabSlamSleepSlenderSliceSlideSlightSlimSloganSlotSlowSlushSmallSmartSmileSmokeSmoothSnackSnakeSnapSniffSnowSoapSoccerSocialSockSodaSoftSolarSoldierSolidSolutionSolveSomeoneSongSoonSorrySortSoulSoundSoupSourceSouthSpaceSpareSpatialSpawnSpeakSpecialSpeedSpellSpendSphereSpiceSpiderSpikeSpinSpiritSplitSpoilSponsorSpoonSportSpotSpraySpreadSpringSpySquareSqueezeSquirrelStableStadiumStaffStageStairsStampStandStartStateStaySteakSteelStemStepStereoStickStillStingStockStomachStoneStoolStoryStoveStrategyStreetStrikeStrongStruggleStudentStuffStumbleStyleSubjectSubmitSubwaySuccessSuchSuddenSufferSugarSuggestSuitSummerSunSunnySunsetSuperSupplySupremeSureSurfaceSurgeSurpriseSurroundSurveySuspectSustainSwallowSwampSwapSwarmSwearSweetSwiftSwimSwingSwitchSwordSymbolSymptomSyrupSystemTableTackleTagTailTalentTalkTankTapeTargetTaskTasteTattooTaxiTeachTeamTellTenTenantTennisTentTermTestTextThankThatThemeThenTheoryThereTheyThingThisThoughtThreeThriveThrowThumbThunderTicketTideTigerTiltTimberTimeTinyTipTiredTissueTitleToastTobaccoTodayToddlerToeTogetherToiletTokenTomatoTomorrowToneTongueTonightToolToothTopTopicToppleTorchTornadoTortoiseTossTotalTouristTowardTowerTownToyTrackTradeTrafficTragicTrainTransferTrapTrashTravelTrayTreatTreeTrendTrialTribeTrickTriggerTrimTripTrophyTroubleTruckTrueTrulyTrumpetTrustTruthTryTubeTuitionTumbleTunaTunnelTurkeyTurnTurtleTwelveTwentyTwiceTwinTwistTwoTypeTypicalUglyUmbrellaUnableUnawareUncleUncoverUnderUndoUnfairUnfoldUnhappyUniformUniqueUnitUniverseUnknownUnlockUntilUnusualUnveilUpdateUpgradeUpholdUponUpperUpsetUrbanUrgeUsageUseUsedUsefulUselessUsualUtilityVacantVacuumVagueValidValleyValveVanVanishVaporVariousVastVaultVehicleVelvetVendorVentureVenueVerbVerifyVersionVeryVesselVeteranViableVibrantViciousVictoryVideoViewVillageVintageViolinVirtualVirusVisaVisitVisualVitalVividVocalVoiceVoidVolcanoVolumeVoteVoyageWageWagonWaitWalkWallWalnutWantWarfareWarmWarriorWashWaspWasteWaterWaveWayWealthWeaponWearWeaselWeatherWebWeddingWeekendWeirdWelcomeWestWetWhaleWhatWheatWheelWhenWhereWhipWhisperWideWidthWifeWildWillWinWindowWineWingWinkWinnerWinterWireWisdomWiseWishWitnessWolfWomanWonderWoodWoolWordWorkWorldWorryWorthWrapWreckWrestleWristWriteWrongYardYearYellowYouYoungYouthZebraZeroZoneZoo".replace(/([A-Z])/g," $1").toLowerCase().substring(1).split(" "),"0x3c8acc1e7b08d8e76f9fda015ef48dc8c710a73cb7e0f77b2c18a9b5a7adde60"!==R.check(e)))throw D=null,new Error("BIP39 Wordlist for en (English) FAILED")}const F=new class extends R{constructor(){super("en")}getWord(e){return M(this),D[e]}getWordIndex(e){return M(this),D.indexOf(e)}};R.register(F);const I={en:F},G=new h.Yd("hdnode/5.7.0"),_=E.O$.from("0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141"),U=(0,v.Y0)("Bitcoin seed"),z=2147483648;function L(e){return(1<<e)-1<<8-e}function O(e){return(0,u.hexZeroPad)((0,u.hexlify)(e),32)}function N(e){return S.eU.encode((0,u.concat)([e,(0,u.hexDataSlice)((0,C.JQ)((0,C.JQ)(e)),0,4)]))}function W(e){if(null==e)return I.en;if("string"==typeof e){const r=I[e];return null==r&&G.throwArgumentError("unknown locale","wordlist",e),r}return e}const H={},V="m/44'/60'/0'/0/0";class j{constructor(e,r,t,n,i,o,a,s){if(e!==H)throw new Error("HDNode constructor cannot be called directly");if(r){const e=new x.Et(r);(0,k.zG)(this,"privateKey",e.privateKey),(0,k.zG)(this,"publicKey",e.compressedPublicKey)}else(0,k.zG)(this,"privateKey",null),(0,k.zG)(this,"publicKey",(0,u.hexlify)(t));(0,k.zG)(this,"parentFingerprint",n),(0,k.zG)(this,"fingerprint",(0,u.hexDataSlice)((0,C.bP)((0,C.JQ)(this.publicKey)),0,4)),(0,k.zG)(this,"address",(0,K.db)(this.publicKey)),(0,k.zG)(this,"chainCode",i),(0,k.zG)(this,"index",o),(0,k.zG)(this,"depth",a),null==s?((0,k.zG)(this,"mnemonic",null),(0,k.zG)(this,"path",null)):"string"==typeof s?((0,k.zG)(this,"mnemonic",null),(0,k.zG)(this,"path",s)):((0,k.zG)(this,"mnemonic",s),(0,k.zG)(this,"path",s.path))}get extendedKey(){if(this.depth>=256)throw new Error("Depth too large!");return N((0,u.concat)([null!=this.privateKey?"0x0488ADE4":"0x0488B21E",(0,u.hexlify)(this.depth),this.parentFingerprint,(0,u.hexZeroPad)((0,u.hexlify)(this.index),4),this.chainCode,null!=this.privateKey?(0,u.concat)(["0x00",this.privateKey]):this.publicKey]))}neuter(){return new j(H,null,this.publicKey,this.parentFingerprint,this.chainCode,this.index,this.depth,this.path)}_derive(e){if(e>4294967295)throw new Error("invalid index - "+String(e));let r=this.path;r&&(r+="/"+(2147483647&e));const t=new Uint8Array(37);if(e&z){if(!this.privateKey)throw new Error("cannot derive child of neutered node");t.set((0,u.arrayify)(this.privateKey),1),r&&(r+="'")}else t.set((0,u.arrayify)(this.publicKey));for(let r=24;r>=0;r-=8)t[33+(r>>3)]=e>>24-r&255;const n=(0,u.arrayify)((0,C.Gy)(P.p.sha512,this.chainCode,t)),i=n.slice(0,32),o=n.slice(32);let a=null,s=null;if(this.privateKey)a=O(E.O$.from(i).add(this.privateKey).mod(_));else{s=new x.Et((0,u.hexlify)(i))._addPoint(this.publicKey)}let c=r;const l=this.mnemonic;return l&&(c=Object.freeze({phrase:l.phrase,path:r,locale:l.locale||"en"})),new j(H,a,s,this.fingerprint,O(o),e,this.depth+1,c)}derivePath(e){const r=e.split("/");if(0===r.length||"m"===r[0]&&0!==this.depth)throw new Error("invalid path - "+e);"m"===r[0]&&r.shift();let t=this;for(let e=0;e<r.length;e++){const n=r[e];if(n.match(/^[0-9]+'$/)){const e=parseInt(n.substring(0,n.length-1));if(e>=z)throw new Error("invalid path index - "+n);t=t._derive(z+e)}else{if(!n.match(/^[0-9]+$/))throw new Error("invalid path component - "+n);{const e=parseInt(n);if(e>=z)throw new Error("invalid path index - "+n);t=t._derive(e)}}}return t}static _fromSeed(e,r){const t=(0,u.arrayify)(e);if(t.length<16||t.length>64)throw new Error("invalid seed");const n=(0,u.arrayify)((0,C.Gy)(P.p.sha512,U,t));return new j(H,O(n.slice(0,32)),null,"0x00000000",O(n.slice(32)),0,0,r)}static fromMnemonic(e,r,t){return e=Y(J(e,t=W(t)),t),j._fromSeed(function(e,r){r||(r="");const t=(0,v.Y0)("mnemonic"+r,v.Uj.NFKD);return A((0,v.Y0)(e,v.Uj.NFKD),t,2048,64,"sha512")}(e,r),{phrase:e,path:"m",locale:t.locale})}static fromSeed(e){return j._fromSeed(e,null)}static fromExtendedKey(e){const r=S.eU.decode(e);82===r.length&&N(r.slice(0,78))===e||G.throwArgumentError("invalid extended key","extendedKey","[REDACTED]");const t=r[4],n=(0,u.hexlify)(r.slice(5,9)),i=parseInt((0,u.hexlify)(r.slice(9,13)).substring(2),16),o=(0,u.hexlify)(r.slice(13,45)),a=r.slice(45,78);switch((0,u.hexlify)(r.slice(0,4))){case"0x0488b21e":case"0x043587cf":return new j(H,null,(0,u.hexlify)(a),n,o,i,t,null);case"0x0488ade4":case"0x04358394 ":if(0!==a[0])break;return new j(H,(0,u.hexlify)(a.slice(1)),null,n,o,i,t,null)}return G.throwArgumentError("invalid extended key","extendedKey","[REDACTED]")}}function J(e,r){r=W(r),G.checkNormalize();const t=r.split(e);if(t.length%3!=0)throw new Error("invalid mnemonic");const n=(0,u.arrayify)(new Uint8Array(Math.ceil(11*t.length/8)));let i=0;for(let e=0;e<t.length;e++){let o=r.getWordIndex(t[e].normalize("NFKD"));if(-1===o)throw new Error("invalid mnemonic");for(let e=0;e<11;e++)o&1<<10-e&&(n[i>>3]|=1<<7-i%8),i++}const o=32*t.length/3,a=L(t.length/3);if(((0,u.arrayify)((0,C.JQ)(n.slice(0,o/8)))[0]&a)!==(n[n.length-1]&a))throw new Error("invalid checksum");return(0,u.hexlify)(n.slice(0,o/8))}function Y(e,r){if(r=W(r),(e=(0,u.arrayify)(e)).length%4!=0||e.length<16||e.length>32)throw new Error("invalid entropy");const t=[0];let n=11;for(let r=0;r<e.length;r++)n>8?(t[t.length-1]<<=8,t[t.length-1]|=e[r],n-=8):(t[t.length-1]<<=n,t[t.length-1]|=e[r]>>8-n,t.push(e[r]&(1<<8-n)-1),n+=3);const i=e.length/4,o=(0,u.arrayify)((0,C.JQ)(e))[0]&L(i);return t[t.length-1]<<=i,t[t.length-1]|=o>>8-i,r.join(t.map((e=>r.getWord(e))))}var q=t(8202),Z=t.n(q),$=t(14689),Q=t.n($);function X(e){return"string"==typeof e&&"0x"!==e.substring(0,2)&&(e="0x"+e),(0,u.arrayify)(e)}function ee(e,r){for(e=String(e);e.length<r;)e="0"+e;return e}function re(e){return"string"==typeof e?(0,v.Y0)(e,v.Uj.NFKC):(0,u.arrayify)(e)}function te(e,r){let t=e;const n=r.toLowerCase().split("/");for(let e=0;e<n.length;e++){let r=null;for(const i in t)if(i.toLowerCase()===n[e]){r=t[i];break}if(null===r)return null;t=r}return t}function ne(e){const r=(0,u.arrayify)(e);r[6]=15&r[6]|64,r[8]=63&r[8]|128;const t=(0,u.hexlify)(r);return[t.substring(2,10),t.substring(10,14),t.substring(14,18),t.substring(18,22),t.substring(22,34)].join("-")}const ie="json-wallets/5.7.0";var oe=function(e,r,t,n){return new(t||(t=Promise))((function(i,o){function a(e){try{c(n.next(e))}catch(e){o(e)}}function s(e){try{c(n.throw(e))}catch(e){o(e)}}function c(e){var r;e.done?i(e.value):(r=e.value,r instanceof t?r:new t((function(e){e(r)}))).then(a,s)}c((n=n.apply(e,r||[])).next())}))};const ae=new h.Yd(ie);function se(e){return null!=e&&e.mnemonic&&e.mnemonic.phrase}class ce extends k.dk{isKeystoreAccount(e){return!(!e||!e._isKeystoreAccount)}}function le(e,r){const t=X(te(e,"crypto/ciphertext"));if((0,u.hexlify)((0,l.w)((0,u.concat)([r.slice(16,32),t]))).substring(2)!==te(e,"crypto/mac").toLowerCase())throw new Error("invalid password");const n=function(e,r,t){if("aes-128-ctr"===te(e,"crypto/cipher")){const n=X(te(e,"crypto/cipherparams/iv")),i=new(Z().Counter)(n),o=new(Z().ModeOfOperation.ctr)(r,i);return(0,u.arrayify)(o.decrypt(t))}return null}(e,r.slice(0,16),t);n||ae.throwError("unsupported cipher",h.Yd.errors.UNSUPPORTED_OPERATION,{operation:"decrypt"});const i=r.slice(32,64),o=(0,K.db)(n);if(e.address){let r=e.address.toLowerCase();if("0x"!==r.substring(0,2)&&(r="0x"+r),(0,g.Kn)(r)!==o)throw new Error("address mismatch")}const a={_isKeystoreAccount:!0,address:o,privateKey:(0,u.hexlify)(n)};if("0.1"===te(e,"x-ethers/version")){const r=X(te(e,"x-ethers/mnemonicCiphertext")),t=X(te(e,"x-ethers/mnemonicCounter")),n=new(Z().Counter)(t),o=new(Z().ModeOfOperation.ctr)(i,n),s=te(e,"x-ethers/path")||V,c=te(e,"x-ethers/locale")||"en",l=(0,u.arrayify)(o.decrypt(r));try{const e=Y(l,c),r=j.fromMnemonic(e,null,c).derivePath(s);if(r.privateKey!=a.privateKey)throw new Error("mnemonic mismatch");a.mnemonic=r.mnemonic}catch(e){if(e.code!==h.Yd.errors.INVALID_ARGUMENT||"wordlist"!==e.argument)throw e}}return new ce(a)}function ue(e,r,t,n,i){return(0,u.arrayify)(A(e,r,t,n,i))}function he(e,r,t,n,i){return Promise.resolve(ue(e,r,t,n,i))}function fe(e,r,t,n,i){const o=re(r),a=te(e,"crypto/kdf");if(a&&"string"==typeof a){const r=function(e,r){return ae.throwArgumentError("invalid key-derivation function parameters",e,r)};if("scrypt"===a.toLowerCase()){const t=X(te(e,"crypto/kdfparams/salt")),s=parseInt(te(e,"crypto/kdfparams/n")),c=parseInt(te(e,"crypto/kdfparams/r")),l=parseInt(te(e,"crypto/kdfparams/p"));s&&c&&l||r("kdf",a),0!=(s&s-1)&&r("N",s);const u=parseInt(te(e,"crypto/kdfparams/dklen"));return 32!==u&&r("dklen",u),n(o,t,s,c,l,64,i)}if("pbkdf2"===a.toLowerCase()){const n=X(te(e,"crypto/kdfparams/salt"));let i=null;const a=te(e,"crypto/kdfparams/prf");"hmac-sha256"===a?i="sha256":"hmac-sha512"===a?i="sha512":r("prf",a);const s=parseInt(te(e,"crypto/kdfparams/c")),c=parseInt(te(e,"crypto/kdfparams/dklen"));return 32!==c&&r("dklen",c),t(o,n,s,c,i)}}return ae.throwArgumentError("unsupported key-derivation function","kdf",a)}const pe=new h.Yd(ie);class de extends k.dk{isCrowdsaleAccount(e){return!(!e||!e._isCrowdsaleAccount)}}function ye(e,r){const t=JSON.parse(e);r=re(r);const n=(0,g.Kn)(te(t,"ethaddr")),i=X(te(t,"encseed"));i&&i.length%16==0||pe.throwArgumentError("invalid encseed","json",e);const o=(0,u.arrayify)(A(r,r,2e3,32,"sha256")).slice(0,16),a=i.slice(0,16),s=i.slice(16),c=new(Z().ModeOfOperation.cbc)(o,a),h=Z().padding.pkcs7.strip((0,u.arrayify)(c.decrypt(s)));let f="";for(let e=0;e<h.length;e++)f+=String.fromCharCode(h[e]);const p=(0,v.Y0)(f),d=(0,l.w)(p);return new de({_isCrowdsaleAccount:!0,address:n,privateKey:d})}function ge(e){let r=null;try{r=JSON.parse(e)}catch(e){return!1}return r.encseed&&r.ethaddr}function me(e){let r=null;try{r=JSON.parse(e)}catch(e){return!1}return!(!r.version||parseInt(r.version)!==r.version||3!==parseInt(r.version))}function we(e,r,t){if(ge(e)){t&&t(0);const n=ye(e,r);return t&&t(1),Promise.resolve(n)}return me(e)?function(e,r,t){return oe(this,void 0,void 0,(function*(){const n=JSON.parse(e);return le(n,yield fe(n,r,he,Q().scrypt,t))}))}(e,r,t):Promise.reject(new Error("invalid JSON wallet"))}function ve(e,r){if(ge(e))return ye(e,r);if(me(e))return function(e,r){const t=JSON.parse(e);return le(t,fe(t,r,ue,Q().syncScrypt))}(e,r);throw new Error("invalid JSON wallet")}var be=function(e,r,t,n){return new(t||(t=Promise))((function(i,o){function a(e){try{c(n.next(e))}catch(e){o(e)}}function s(e){try{c(n.throw(e))}catch(e){o(e)}}function c(e){var r;e.done?i(e.value):(r=e.value,r instanceof t?r:new t((function(e){e(r)}))).then(a,s)}c((n=n.apply(e,r||[])).next())}))};const Se=new h.Yd("wallet/5.7.0");class Ee extends w.E{constructor(e,r){if(super(),null!=(t=e)&&(0,u.isHexString)(t.privateKey,32)&&null!=t.address){const r=new x.Et(e.privateKey);if((0,k.zG)(this,"_signingKey",(()=>r)),(0,k.zG)(this,"address",(0,K.db)(this.publicKey)),this.address!==(0,g.Kn)(e.address)&&Se.throwArgumentError("privateKey/address mismatch","privateKey","[REDACTED]"),function(e){const r=e.mnemonic;return r&&r.phrase}(e)){const r=e.mnemonic;(0,k.zG)(this,"_mnemonic",(()=>({phrase:r.phrase,path:r.path||V,locale:r.locale||"en"})));const t=this.mnemonic,n=j.fromMnemonic(t.phrase,null,t.locale).derivePath(t.path);(0,K.db)(n.privateKey)!==this.address&&Se.throwArgumentError("mnemonic/address mismatch","privateKey","[REDACTED]")}else(0,k.zG)(this,"_mnemonic",(()=>null))}else{if(x.Et.isSigningKey(e))"secp256k1"!==e.curve&&Se.throwArgumentError("unsupported curve; must be secp256k1","privateKey","[REDACTED]"),(0,k.zG)(this,"_signingKey",(()=>e));else{"string"==typeof e&&e.match(/^[0-9a-f]*$/i)&&64===e.length&&(e="0x"+e);const r=new x.Et(e);(0,k.zG)(this,"_signingKey",(()=>r))}(0,k.zG)(this,"_mnemonic",(()=>null)),(0,k.zG)(this,"address",(0,K.db)(this.publicKey))}var t;r&&!m.zt.isProvider(r)&&Se.throwArgumentError("invalid provider","provider",r),(0,k.zG)(this,"provider",r||null)}get mnemonic(){return this._mnemonic()}get privateKey(){return this._signingKey().privateKey}get publicKey(){return this._signingKey().publicKey}getAddress(){return Promise.resolve(this.address)}connect(e){return new Ee(this,e)}signTransaction(e){return(0,k.mE)(e).then((r=>{null!=r.from&&((0,g.Kn)(r.from)!==this.address&&Se.throwArgumentError("transaction from address mismatch","transaction.from",e.from),delete r.from);const t=this._signingKey().signDigest((0,l.w)((0,K.qC)(r)));return(0,K.qC)(r,t)}))}signMessage(e){return be(this,void 0,void 0,(function*(){return(0,u.joinSignature)(this._signingKey().signDigest(function(e){return"string"==typeof e&&(e=(0,v.Y0)(e)),(0,l.w)((0,u.concat)([(0,v.Y0)("Ethereum Signed Message:\n"),(0,v.Y0)(String(e.length)),e]))}(e)))}))}_signTypedData(e,r,t){return be(this,void 0,void 0,(function*(){const n=yield b.E.resolveNames(e,r,t,(e=>(null==this.provider&&Se.throwError("cannot resolve ENS names without a provider",h.Yd.errors.UNSUPPORTED_OPERATION,{operation:"resolveName",value:e}),this.provider.resolveName(e))));return(0,u.joinSignature)(this._signingKey().signDigest(b.E.hash(n.domain,r,n.value)))}))}encrypt(e,r,t){if("function"!=typeof r||t||(t=r,r={}),t&&"function"!=typeof t)throw new Error("invalid callback");return r||(r={}),function(e,r,t,n){try{if((0,g.Kn)(e.address)!==(0,K.db)(e.privateKey))throw new Error("address/privateKey mismatch");if(se(e)){const r=e.mnemonic;if(j.fromMnemonic(r.phrase,null,r.locale).derivePath(r.path||V).privateKey!=e.privateKey)throw new Error("mnemonic mismatch")}}catch(e){return Promise.reject(e)}"function"!=typeof t||n||(n=t,t={}),t||(t={});const i=(0,u.arrayify)(e.privateKey),o=re(r);let a=null,s=null,c=null;if(se(e)){const r=e.mnemonic;a=(0,u.arrayify)(J(r.phrase,r.locale||"en")),s=r.path||V,c=r.locale||"en"}let h=t.client;h||(h="ethers.js");let f=null;f=t.salt?(0,u.arrayify)(t.salt):y(32);let p=null;if(t.iv){if(p=(0,u.arrayify)(t.iv),16!==p.length)throw new Error("invalid iv")}else p=y(16);let d=null;if(t.uuid){if(d=(0,u.arrayify)(t.uuid),16!==d.length)throw new Error("invalid uuid")}else d=y(16);let m=1<<17,w=8,v=1;return t.scrypt&&(t.scrypt.N&&(m=t.scrypt.N),t.scrypt.r&&(w=t.scrypt.r),t.scrypt.p&&(v=t.scrypt.p)),Q().scrypt(o,f,m,w,v,64,n).then((r=>{const t=(r=(0,u.arrayify)(r)).slice(0,16),n=r.slice(16,32),o=r.slice(32,64),g=new(Z().Counter)(p),b=new(Z().ModeOfOperation.ctr)(t,g),S=(0,u.arrayify)(b.encrypt(i)),E=(0,l.w)((0,u.concat)([n,S])),C={address:e.address.substring(2).toLowerCase(),id:ne(d),version:3,crypto:{cipher:"aes-128-ctr",cipherparams:{iv:(0,u.hexlify)(p).substring(2)},ciphertext:(0,u.hexlify)(S).substring(2),kdf:"scrypt",kdfparams:{salt:(0,u.hexlify)(f).substring(2),n:m,dklen:32,p:v,r:w},mac:E.substring(2)}};if(a){const e=y(16),r=new(Z().Counter)(e),t=new(Z().ModeOfOperation.ctr)(o,r),n=(0,u.arrayify)(t.encrypt(a)),i=new Date,l=i.getUTCFullYear()+"-"+ee(i.getUTCMonth()+1,2)+"-"+ee(i.getUTCDate(),2)+"T"+ee(i.getUTCHours(),2)+"-"+ee(i.getUTCMinutes(),2)+"-"+ee(i.getUTCSeconds(),2)+".0Z";C["x-ethers"]={client:h,gethFilename:"UTC--"+l+"--"+C.address,mnemonicCounter:(0,u.hexlify)(e).substring(2),mnemonicCiphertext:(0,u.hexlify)(n).substring(2),path:s,locale:c,version:"0.1"}}return JSON.stringify(C)}))}(this,e,r,t)}static createRandom(e){let r=y(16);e||(e={}),e.extraEntropy&&(r=(0,u.arrayify)((0,u.hexDataSlice)((0,l.w)((0,u.concat)([r,e.extraEntropy])),0,16)));const t=Y(r,e.locale);return Ee.fromMnemonic(t,e.path,e.locale)}static fromEncryptedJson(e,r,t){return we(e,r,t).then((e=>new Ee(e)))}static fromEncryptedJsonSync(e,r){return new Ee(ve(e,r))}static fromMnemonic(e,r,t){return r||(r=V),new Ee(j.fromMnemonic(e,null,t).derivePath(r))}}var Ce=t(47144),Ae=t(48834).Buffer,ke=128,xe=l.w;function Pe(e){var r=function(e){if(e){if(!Ae.isBuffer(e))throw new Error("EthCrypto.createPrivateKey(): given entropy is no Buffer");if(Ae.byteLength(e,"utf8")<ke)throw new Error("EthCrypto.createPrivateKey(): Entropy-size must be at least "+ke);return xe(e)}var r=xe(u.concat([y(32),y(32)])),t=u.concat([u.concat([y(32),r]),y(32)]);return xe(t)}(e),t=new Ee(r);return{privateKey:r,publicKey:(0,Ce.stripHexPrefix)(t.publicKey).slice(2),address:t.address}}var Ke=t(38460),Te=t(48834).Buffer;function Be(e){return e.startsWith("0x")?e.substring(2):e}function Re(e){return e.startsWith("0x")?e:"0x"+e}function De(e){return Te.from(e).toString("hex")}function Me(e){return new Uint8Array(Te.from(e,"hex"))}var Fe=t(48834).Buffer;function Ie(e){return 64===Fe.from(e,"hex").length&&(e="04"+e),De((0,Ke.publicKeyConvert)(Me(e),!0))}function Ge(e){64===Fe.from(e,"hex").length&&(e="04"+e);var r=De((0,Ke.publicKeyConvert)(Me(e),!1));return r=r.substring(2)}function _e(e){e=Ge(e);var r=(0,Ce.pubToAddress)((0,Ce.toBuffer)(Re(e)));return(0,Ce.toChecksumAddress)(Re(r.toString("hex")))}var Ue=t(69725),ze=t(48834).Buffer;function Le(e){if("string"==typeof e)return e;var r=Ie(e.ephemPublicKey);return ze.concat([ze.from(e.iv,"hex"),ze.from(r,"hex"),ze.from(e.mac,"hex"),ze.from(e.ciphertext,"hex")]).toString("hex")}function Oe(e){if("string"!=typeof e)return e;var r=ze.from(e,"hex"),t={iv:r.toString("hex",0,16),ephemPublicKey:r.toString("hex",16,49),mac:r.toString("hex",49,81),ciphertext:r.toString("hex",81,r.length)};return t.ephemPublicKey="04"+Ge(t.ephemPublicKey),t}var Ne=t(48834).Buffer;function We(e,r){r=Oe(r);var t=Be(e),n={iv:Ne.from(r.iv,"hex"),ephemPublicKey:Ne.from(r.ephemPublicKey,"hex"),ciphertext:Ne.from(r.ciphertext,"hex"),mac:Ne.from(r.mac,"hex")};return(0,Ue.pe)(Ne.from(t,"hex"),n).then((function(e){return e.toString()}))}var He=t(48834).Buffer;function Ve(e,r,t){var n="04"+(e=Ge(e));return(0,Ue.HI)(He.from(n,"hex"),He.from(r),t||{}).then((function(e){return{iv:e.iv.toString("hex"),ephemPublicKey:e.ephemPublicKey.toString("hex"),ciphertext:e.ciphertext.toString("hex"),mac:e.mac.toString("hex")}}))}function je(e){return e=Re(e),(0,Ce.privateToPublic)((0,Ce.toBuffer)(e)).toString("hex")}function Je(e,r){var t=(e=Be(e)).substring(0,e.length-2),n="1c"===e.slice(-2)?1:0,i=De((0,Ke.ecdsaRecover)(Me(t),n,Me(Be(r)),!1));return i=i.slice(2)}function Ye(e,r){return _e(Je(e,r))}var qe=t(48834).Buffer;function Ze(e,r){if(66!==(r=Re(r)).length)throw new Error("EthCrypto.sign(): Can only sign hashes, given: "+r);var t=(0,Ke.ecdsaSign)(new Uint8Array(qe.from(Be(r),"hex")),new Uint8Array(qe.from(Be(e),"hex"))),n=1===t.recid?"1c":"1b";return"0x"+qe.from(t.signature).toString("hex")+n}var $e=t(83498),Qe=t(48834).Buffer;function Xe(e,r){var t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(_e(je(r))!=e.from)throw new Error("EthCrypto.signTransaction(): rawTx.from does not match the address of the privateKey");var n=Qe.from(r.replace(/^.{2}/g,""),"hex");return $e.Transaction.fromTxData(e,t).sign(n).serialize().toString("hex")}function er(e,r){(null==r||r>e.length)&&(r=e.length);for(var t=0,n=new Array(r);t<r;t++)n[t]=e[t];return n}function rr(e){return function(e){if(Array.isArray(e))return er(e)}(e)||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(e)||function(e,r){if(e){if("string"==typeof e)return er(e,r);var t=Object.prototype.toString.call(e).slice(8,-1);return"Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t?Array.from(e):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?er(e,r):void 0}}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}var tr=t(50986);function nr(e,r,t){"string"==typeof e&&(e=JSON.parse(e));var n=new tr.lV(e,"0x"+r);return n.getDeployTransaction.apply(n,rr(t)).data}function ir(e,r){var t=(0,Ce.generateAddress)((0,Ce.toBuffer)(Re(e)),(0,Ce.toBuffer)(r)).toString("hex");return(0,Ce.toChecksumAddress)(Re(t))}const or=new RegExp("^bytes([0-9]+)$"),ar=new RegExp("^(u?int)([0-9]*)$"),sr=new RegExp("^(.*)\\[([0-9]*)\\]$"),cr="0000000000000000000000000000000000000000000000000000000000000000",lr=new h.Yd("solidity/5.7.0");function ur(e,r,t){switch(e){case"address":return t?(0,u.zeroPad)(r,32):(0,u.arrayify)(r);case"string":return(0,v.Y0)(r);case"bytes":return(0,u.arrayify)(r);case"bool":return r=r?"0x01":"0x00",t?(0,u.zeroPad)(r,32):(0,u.arrayify)(r)}let n=e.match(ar);if(n){let i=parseInt(n[2]||"256");return(n[2]&&String(i)!==n[2]||i%8!=0||0===i||i>256)&&lr.throwArgumentError("invalid number type","type",e),t&&(i=256),r=E.O$.from(r).toTwos(i),(0,u.zeroPad)(r,i/8)}if(n=e.match(or),n){const i=parseInt(n[1]);return(String(i)!==n[1]||0===i||i>32)&&lr.throwArgumentError("invalid bytes type","type",e),(0,u.arrayify)(r).byteLength!==i&&lr.throwArgumentError(`invalid value for ${e}`,"value",r),t?(0,u.arrayify)((r+cr).substring(0,66)):r}if(n=e.match(sr),n&&Array.isArray(r)){const t=n[1];parseInt(n[2]||String(r.length))!=r.length&&lr.throwArgumentError(`invalid array length for ${e}`,"value",r);const i=[];return r.forEach((function(e){i.push(ur(t,e,!0))})),(0,u.concat)(i)}return lr.throwArgumentError("invalid type","type",e)}function hr(e,r){e.length!=r.length&&lr.throwArgumentError("wrong number of values; expected ${ types.length }","values",r);const t=[];return e.forEach((function(e,n){t.push(ur(e,r[n]))})),(0,u.hexlify)((0,u.concat)(t))}function fr(e){var r=[],t=[];return Array.isArray(e)?e.forEach((function(e){r.push(e.type),t.push(e.value)})):(r.push("string"),t.push(e)),function(e,r){return(0,l.w)(hr(e,r))}(r,t)}var pr="Ethereum Signed Message:\n32",dr=t(48834).Buffer;function yr(e){var r=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(e=Be(e),!0===r)return dr.from(e,"hex").toString("base64");for(var t="";e.length%4!=0;)e="0"+e;for(var n=0;n<e.length;n+=4)t+=String.fromCharCode(parseInt(e.substring(n,n+4),16));return t}function gr(e){if(!0===(arguments.length>1&&void 0!==arguments[1]&&arguments[1]))return Re(dr.from(e,"base64").toString("hex"));for(var r="",t=0;t<e.length;t++)r+=((0==t?"":"000")+e.charCodeAt(t).toString(16)).slice(-4);return Re(r=r.toLowerCase())}function mr(e){var r=u.splitSignature(e);return{v:"0x".concat(r.v.toString(16)),r:r.r,s:r.s}}function wr(e){return u.joinSignature(e)}const vr={createIdentity:Pe,publicKey:i,decryptWithPrivateKey:We,encryptWithPublicKey:Ve,cipher:o,publicKeyByPrivateKey:je,recover:Ye,recoverPublicKey:Je,sign:Ze,signTransaction:Xe,txDataByCompiled:nr,calculateContractAddress:ir,hash:a,hex:s,vrs:c,util:n}},38460:(e,r,t)=>{e.exports=t(21007)(t(69161))},69161:(e,r,t)=>{const n=new(0,t(87554).ec)("secp256k1"),i=n.curve,o=i.n.constructor;function a(e){const r=e[0];switch(r){case 2:case 3:return 33!==e.length?null:function(e,r){let t=new o(r);if(t.cmp(i.p)>=0)return null;t=t.toRed(i.red);let a=t.redSqr().redIMul(t).redIAdd(i.b).redSqrt();return 3===e!==a.isOdd()&&(a=a.redNeg()),n.keyPair({pub:{x:t,y:a}})}(r,e.subarray(1,33));case 4:case 6:case 7:return 65!==e.length?null:function(e,r,t){let a=new o(r),s=new o(t);if(a.cmp(i.p)>=0||s.cmp(i.p)>=0)return null;if(a=a.toRed(i.red),s=s.toRed(i.red),(6===e||7===e)&&s.isOdd()!==(7===e))return null;const c=a.redSqr().redIMul(a);return s.redSqr().redISub(c.redIAdd(i.b)).isZero()?n.keyPair({pub:{x:a,y:s}}):null}(r,e.subarray(1,33),e.subarray(33,65));default:return null}}function s(e,r){const t=r.encode(null,33===e.length);for(let r=0;r<e.length;++r)e[r]=t[r]}e.exports={contextRandomize:()=>0,privateKeyVerify(e){const r=new o(e);return r.cmp(i.n)<0&&!r.isZero()?0:1},privateKeyNegate(e){const r=new o(e),t=i.n.sub(r).umod(i.n).toArrayLike(Uint8Array,"be",32);return e.set(t),0},privateKeyTweakAdd(e,r){const t=new o(r);if(t.cmp(i.n)>=0)return 1;if(t.iadd(new o(e)),t.cmp(i.n)>=0&&t.isub(i.n),t.isZero())return 1;const n=t.toArrayLike(Uint8Array,"be",32);return e.set(n),0},privateKeyTweakMul(e,r){let t=new o(r);if(t.cmp(i.n)>=0||t.isZero())return 1;t.imul(new o(e)),t.cmp(i.n)>=0&&(t=t.umod(i.n));const n=t.toArrayLike(Uint8Array,"be",32);return e.set(n),0},publicKeyVerify:e=>null===a(e)?1:0,publicKeyCreate(e,r){const t=new o(r);if(t.cmp(i.n)>=0||t.isZero())return 1;return s(e,n.keyFromPrivate(r).getPublic()),0},publicKeyConvert(e,r){const t=a(r);if(null===t)return 1;return s(e,t.getPublic()),0},publicKeyNegate(e,r){const t=a(r);if(null===t)return 1;const n=t.getPublic();return n.y=n.y.redNeg(),s(e,n),0},publicKeyCombine(e,r){const t=new Array(r.length);for(let e=0;e<r.length;++e)if(t[e]=a(r[e]),null===t[e])return 1;let n=t[0].getPublic();for(let e=1;e<t.length;++e)n=n.add(t[e].pub);return n.isInfinity()?2:(s(e,n),0)},publicKeyTweakAdd(e,r,t){const n=a(r);if(null===n)return 1;if((t=new o(t)).cmp(i.n)>=0)return 2;const c=n.getPublic().add(i.g.mul(t));return c.isInfinity()?2:(s(e,c),0)},publicKeyTweakMul(e,r,t){const n=a(r);if(null===n)return 1;if((t=new o(t)).cmp(i.n)>=0||t.isZero())return 2;return s(e,n.getPublic().mul(t)),0},signatureNormalize(e){const r=new o(e.subarray(0,32)),t=new o(e.subarray(32,64));return r.cmp(i.n)>=0||t.cmp(i.n)>=0?1:(1===t.cmp(n.nh)&&e.set(i.n.sub(t).toArrayLike(Uint8Array,"be",32),32),0)},signatureExport(e,r){const t=r.subarray(0,32),n=r.subarray(32,64);if(new o(t).cmp(i.n)>=0)return 1;if(new o(n).cmp(i.n)>=0)return 1;const{output:a}=e;let s=a.subarray(4,37);s[0]=0,s.set(t,1);let c=33,l=0;for(;c>1&&0===s[l]&&!(128&s[l+1]);--c,++l);if(s=s.subarray(l),128&s[0])return 1;if(c>1&&0===s[0]&&!(128&s[1]))return 1;let u=a.subarray(39,72);u[0]=0,u.set(n,1);let h=33,f=0;for(;h>1&&0===u[f]&&!(128&u[f+1]);--h,++f);return u=u.subarray(f),128&u[0]||h>1&&0===u[0]&&!(128&u[1])?1:(e.outputlen=6+c+h,a[0]=48,a[1]=e.outputlen-2,a[2]=2,a[3]=s.length,a.set(s,4),a[4+c]=2,a[5+c]=u.length,a.set(u,6+c),0)},signatureImport(e,r){if(r.length<8)return 1;if(r.length>72)return 1;if(48!==r[0])return 1;if(r[1]!==r.length-2)return 1;if(2!==r[2])return 1;const t=r[3];if(0===t)return 1;if(5+t>=r.length)return 1;if(2!==r[4+t])return 1;const n=r[5+t];if(0===n)return 1;if(6+t+n!==r.length)return 1;if(128&r[4])return 1;if(t>1&&0===r[4]&&!(128&r[5]))return 1;if(128&r[t+6])return 1;if(n>1&&0===r[t+6]&&!(128&r[t+7]))return 1;let a=r.subarray(4,4+t);if(33===a.length&&0===a[0]&&(a=a.subarray(1)),a.length>32)return 1;let s=r.subarray(6+t);if(33===s.length&&0===s[0]&&(s=s.slice(1)),s.length>32)throw new Error("S length is too long");let c=new o(a);c.cmp(i.n)>=0&&(c=new o(0));let l=new o(r.subarray(6+t));return l.cmp(i.n)>=0&&(l=new o(0)),e.set(c.toArrayLike(Uint8Array,"be",32),0),e.set(l.toArrayLike(Uint8Array,"be",32),32),0},ecdsaSign(e,r,t,a,s){if(s){const e=s;s=n=>{const i=e(r,t,null,a,n);if(!(i instanceof Uint8Array&&32===i.length))throw new Error("This is the way");return new o(i)}}const c=new o(t);if(c.cmp(i.n)>=0||c.isZero())return 1;let l;try{l=n.sign(r,t,{canonical:!0,k:s,pers:a})}catch(e){return 1}return e.signature.set(l.r.toArrayLike(Uint8Array,"be",32),0),e.signature.set(l.s.toArrayLike(Uint8Array,"be",32),32),e.recid=l.recoveryParam,0},ecdsaVerify(e,r,t){const s={r:e.subarray(0,32),s:e.subarray(32,64)},c=new o(s.r),l=new o(s.s);if(c.cmp(i.n)>=0||l.cmp(i.n)>=0)return 1;if(1===l.cmp(n.nh)||c.isZero()||l.isZero())return 3;const u=a(t);if(null===u)return 2;const h=u.getPublic();return n.verify(r,s,h)?0:3},ecdsaRecover(e,r,t,a){const c={r:r.slice(0,32),s:r.slice(32,64)},l=new o(c.r),u=new o(c.s);if(l.cmp(i.n)>=0||u.cmp(i.n)>=0)return 1;if(l.isZero()||u.isZero())return 2;let h;try{h=n.recoverPubKey(a,c,t)}catch(e){return 2}return s(e,h),0},ecdh(e,r,t,s,c,l,u){const h=a(r);if(null===h)return 1;const f=new o(t);if(f.cmp(i.n)>=0||f.isZero())return 2;const p=h.getPublic().mul(f);if(void 0===c){const r=p.encode(null,!0),t=n.hash().update(r).digest();for(let r=0;r<32;++r)e[r]=t[r]}else{l||(l=new Uint8Array(32));const r=p.getX().toArray("be",32);for(let e=0;e<32;++e)l[e]=r[e];u||(u=new Uint8Array(32));const t=p.getY().toArray("be",32);for(let e=0;e<32;++e)u[e]=t[e];const n=c(l,u,s);if(!(n instanceof Uint8Array&&n.length===e.length))return 2;e.set(n)}return 0}}},21007:e=>{const r="Impossible case. Please create issue.",t="The tweak was out of range or the resulted private key is invalid",n="The tweak was out of range or equal to zero",i="Unknow error on context randomization",o="Private Key is invalid",a="Public Key could not be parsed",s="Public Key serialization error",c="The sum of the public keys is not valid",l="Signature could not be parsed",u="The nonce generation function failed, or the private key was invalid",h="Public key could not be recover",f="Scalar was invalid (zero or overflow)";function p(e,r){if(!e)throw new Error(r)}function d(e,r,t){if(p(r instanceof Uint8Array,`Expected ${e} to be an Uint8Array`),void 0!==t)if(Array.isArray(t)){const n=`Expected ${e} to be an Uint8Array with length [${t.join(", ")}]`;p(t.includes(r.length),n)}else{const n=`Expected ${e} to be an Uint8Array with length ${t}`;p(r.length===t,n)}}function y(e){p("Boolean"===m(e),"Expected compressed to be a Boolean")}function g(e=(e=>new Uint8Array(e)),r){return"function"==typeof e&&(e=e(r)),d("output",e,r),e}function m(e){return Object.prototype.toString.call(e).slice(8,-1)}e.exports=e=>({contextRandomize(r){if(p(null===r||r instanceof Uint8Array,"Expected seed to be an Uint8Array or null"),null!==r&&d("seed",r,32),1===e.contextRandomize(r))throw new Error(i)},privateKeyVerify:r=>(d("private key",r,32),0===e.privateKeyVerify(r)),privateKeyNegate(t){switch(d("private key",t,32),e.privateKeyNegate(t)){case 0:return t;case 1:throw new Error(r)}},privateKeyTweakAdd(r,n){switch(d("private key",r,32),d("tweak",n,32),e.privateKeyTweakAdd(r,n)){case 0:return r;case 1:throw new Error(t)}},privateKeyTweakMul(r,t){switch(d("private key",r,32),d("tweak",t,32),e.privateKeyTweakMul(r,t)){case 0:return r;case 1:throw new Error(n)}},publicKeyVerify:r=>(d("public key",r,[33,65]),0===e.publicKeyVerify(r)),publicKeyCreate(r,t=!0,n){switch(d("private key",r,32),y(t),n=g(n,t?33:65),e.publicKeyCreate(n,r)){case 0:return n;case 1:throw new Error(o);case 2:throw new Error(s)}},publicKeyConvert(r,t=!0,n){switch(d("public key",r,[33,65]),y(t),n=g(n,t?33:65),e.publicKeyConvert(n,r)){case 0:return n;case 1:throw new Error(a);case 2:throw new Error(s)}},publicKeyNegate(t,n=!0,i){switch(d("public key",t,[33,65]),y(n),i=g(i,n?33:65),e.publicKeyNegate(i,t)){case 0:return i;case 1:throw new Error(a);case 2:throw new Error(r);case 3:throw new Error(s)}},publicKeyCombine(r,t=!0,n){p(Array.isArray(r),"Expected public keys to be an Array"),p(r.length>0,"Expected public keys array will have more than zero items");for(const e of r)d("public key",e,[33,65]);switch(y(t),n=g(n,t?33:65),e.publicKeyCombine(n,r)){case 0:return n;case 1:throw new Error(a);case 2:throw new Error(c);case 3:throw new Error(s)}},publicKeyTweakAdd(r,n,i=!0,o){switch(d("public key",r,[33,65]),d("tweak",n,32),y(i),o=g(o,i?33:65),e.publicKeyTweakAdd(o,r,n)){case 0:return o;case 1:throw new Error(a);case 2:throw new Error(t)}},publicKeyTweakMul(r,t,i=!0,o){switch(d("public key",r,[33,65]),d("tweak",t,32),y(i),o=g(o,i?33:65),e.publicKeyTweakMul(o,r,t)){case 0:return o;case 1:throw new Error(a);case 2:throw new Error(n)}},signatureNormalize(r){switch(d("signature",r,64),e.signatureNormalize(r)){case 0:return r;case 1:throw new Error(l)}},signatureExport(t,n){d("signature",t,64);const i={output:n=g(n,72),outputlen:72};switch(e.signatureExport(i,t)){case 0:return n.slice(0,i.outputlen);case 1:throw new Error(l);case 2:throw new Error(r)}},signatureImport(t,n){switch(d("signature",t),n=g(n,64),e.signatureImport(n,t)){case 0:return n;case 1:throw new Error(l);case 2:throw new Error(r)}},ecdsaSign(t,n,i={},o){d("message",t,32),d("private key",n,32),p("Object"===m(i),"Expected options to be an Object"),void 0!==i.data&&d("options.data",i.data),void 0!==i.noncefn&&p("Function"===m(i.noncefn),"Expected options.noncefn to be a Function");const a={signature:o=g(o,64),recid:null};switch(e.ecdsaSign(a,t,n,i.data,i.noncefn)){case 0:return a;case 1:throw new Error(u);case 2:throw new Error(r)}},ecdsaVerify(r,t,n){switch(d("signature",r,64),d("message",t,32),d("public key",n,[33,65]),e.ecdsaVerify(r,t,n)){case 0:return!0;case 3:return!1;case 1:throw new Error(l);case 2:throw new Error(a)}},ecdsaRecover(t,n,i,o=!0,a){switch(d("signature",t,64),p("Number"===m(n)&&n>=0&&n<=3,"Expected recovery id to be a Number within interval [0, 3]"),d("message",i,32),y(o),a=g(a,o?33:65),e.ecdsaRecover(a,t,n,i)){case 0:return a;case 1:throw new Error(l);case 2:throw new Error(h);case 3:throw new Error(r)}},ecdh(r,t,n={},i){switch(d("public key",r,[33,65]),d("private key",t,32),p("Object"===m(n),"Expected options to be an Object"),void 0!==n.data&&d("options.data",n.data),void 0!==n.hashfn?(p("Function"===m(n.hashfn),"Expected options.hashfn to be a Function"),void 0!==n.xbuf&&d("options.xbuf",n.xbuf,32),void 0!==n.ybuf&&d("options.ybuf",n.ybuf,32),d("output",i)):i=g(i,32),e.ecdh(i,r,t,n.data,n.hashfn,n.xbuf,n.ybuf)){case 0:return i;case 1:throw new Error(a);case 2:throw new Error(f)}}})},14689:function(e){"use strict";!function(r){const t=2147483647;function n(e){const r=new Uint32Array([1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298]);let t=1779033703,n=3144134277,i=1013904242,o=2773480762,a=1359893119,s=2600822924,c=528734635,l=1541459225;const u=new Uint32Array(64);function h(e){let h=0,f=e.length;for(;f>=64;){let p,d,y,g,m,w=t,v=n,b=i,S=o,E=a,C=s,A=c,k=l;for(d=0;d<16;d++)y=h+4*d,u[d]=(255&e[y])<<24|(255&e[y+1])<<16|(255&e[y+2])<<8|255&e[y+3];for(d=16;d<64;d++)p=u[d-2],g=(p>>>17|p<<15)^(p>>>19|p<<13)^p>>>10,p=u[d-15],m=(p>>>7|p<<25)^(p>>>18|p<<14)^p>>>3,u[d]=(g+u[d-7]|0)+(m+u[d-16]|0)|0;for(d=0;d<64;d++)g=(((E>>>6|E<<26)^(E>>>11|E<<21)^(E>>>25|E<<7))+(E&C^~E&A)|0)+(k+(r[d]+u[d]|0)|0)|0,m=((w>>>2|w<<30)^(w>>>13|w<<19)^(w>>>22|w<<10))+(w&v^w&b^v&b)|0,k=A,A=C,C=E,E=S+g|0,S=b,b=v,v=w,w=g+m|0;t=t+w|0,n=n+v|0,i=i+b|0,o=o+S|0,a=a+E|0,s=s+C|0,c=c+A|0,l=l+k|0,h+=64,f-=64}}h(e);let f,p=e.length%64,d=e.length/536870912|0,y=e.length<<3,g=p<56?56:120,m=e.slice(e.length-p,e.length);for(m.push(128),f=p+1;f<g;f++)m.push(0);return m.push(d>>>24&255),m.push(d>>>16&255),m.push(d>>>8&255),m.push(d>>>0&255),m.push(y>>>24&255),m.push(y>>>16&255),m.push(y>>>8&255),m.push(y>>>0&255),h(m),[t>>>24&255,t>>>16&255,t>>>8&255,t>>>0&255,n>>>24&255,n>>>16&255,n>>>8&255,n>>>0&255,i>>>24&255,i>>>16&255,i>>>8&255,i>>>0&255,o>>>24&255,o>>>16&255,o>>>8&255,o>>>0&255,a>>>24&255,a>>>16&255,a>>>8&255,a>>>0&255,s>>>24&255,s>>>16&255,s>>>8&255,s>>>0&255,c>>>24&255,c>>>16&255,c>>>8&255,c>>>0&255,l>>>24&255,l>>>16&255,l>>>8&255,l>>>0&255]}function i(e,r,t){e=e.length<=64?e:n(e);const i=64+r.length+4,o=new Array(i),a=new Array(64);let s,c=[];for(s=0;s<64;s++)o[s]=54;for(s=0;s<e.length;s++)o[s]^=e[s];for(s=0;s<r.length;s++)o[64+s]=r[s];for(s=i-4;s<i;s++)o[s]=0;for(s=0;s<64;s++)a[s]=92;for(s=0;s<e.length;s++)a[s]^=e[s];function l(){for(let e=i-1;e>=i-4;e--){if(o[e]++,o[e]<=255)return;o[e]=0}}for(;t>=32;)l(),c=c.concat(n(a.concat(n(o)))),t-=32;return t>0&&(l(),c=c.concat(n(a.concat(n(o))).slice(0,t))),c}function o(e,r,t,n,i){let o;for(l(e,16*(2*t-1),i,0,16),o=0;o<2*t;o++)c(e,16*o,i,16),s(i,n),l(i,0,e,r+16*o,16);for(o=0;o<t;o++)l(e,r+2*o*16,e,16*o,16);for(o=0;o<t;o++)l(e,r+16*(2*o+1),e,16*(o+t),16)}function a(e,r){return e<<r|e>>>32-r}function s(e,r){l(e,0,r,0,16);for(let e=8;e>0;e-=2)r[4]^=a(r[0]+r[12],7),r[8]^=a(r[4]+r[0],9),r[12]^=a(r[8]+r[4],13),r[0]^=a(r[12]+r[8],18),r[9]^=a(r[5]+r[1],7),r[13]^=a(r[9]+r[5],9),r[1]^=a(r[13]+r[9],13),r[5]^=a(r[1]+r[13],18),r[14]^=a(r[10]+r[6],7),r[2]^=a(r[14]+r[10],9),r[6]^=a(r[2]+r[14],13),r[10]^=a(r[6]+r[2],18),r[3]^=a(r[15]+r[11],7),r[7]^=a(r[3]+r[15],9),r[11]^=a(r[7]+r[3],13),r[15]^=a(r[11]+r[7],18),r[1]^=a(r[0]+r[3],7),r[2]^=a(r[1]+r[0],9),r[3]^=a(r[2]+r[1],13),r[0]^=a(r[3]+r[2],18),r[6]^=a(r[5]+r[4],7),r[7]^=a(r[6]+r[5],9),r[4]^=a(r[7]+r[6],13),r[5]^=a(r[4]+r[7],18),r[11]^=a(r[10]+r[9],7),r[8]^=a(r[11]+r[10],9),r[9]^=a(r[8]+r[11],13),r[10]^=a(r[9]+r[8],18),r[12]^=a(r[15]+r[14],7),r[13]^=a(r[12]+r[15],9),r[14]^=a(r[13]+r[12],13),r[15]^=a(r[14]+r[13],18);for(let t=0;t<16;++t)e[t]+=r[t]}function c(e,r,t,n){for(let i=0;i<n;i++)t[i]^=e[r+i]}function l(e,r,t,n,i){for(;i--;)t[n++]=e[r++]}function u(e){if(!e||"number"!=typeof e.length)return!1;for(let r=0;r<e.length;r++){const t=e[r];if("number"!=typeof t||t%1||t<0||t>=256)return!1}return!0}function h(e,r){if("number"!=typeof e||e%1)throw new Error("invalid "+r);return e}function f(e,r,n,a,s,f,p){if(n=h(n,"N"),a=h(a,"r"),s=h(s,"p"),f=h(f,"dkLen"),0===n||0!=(n&n-1))throw new Error("N must be power of 2");if(n>t/128/a)throw new Error("N too large");if(a>t/128/s)throw new Error("r too large");if(!u(e))throw new Error("password must be an array or buffer");if(e=Array.prototype.slice.call(e),!u(r))throw new Error("salt must be an array or buffer");r=Array.prototype.slice.call(r);let d=i(e,r,128*s*a);const y=new Uint32Array(32*s*a);for(let e=0;e<y.length;e++){const r=4*e;y[e]=(255&d[r+3])<<24|(255&d[r+2])<<16|(255&d[r+1])<<8|(255&d[r+0])<<0}const g=new Uint32Array(64*a),m=new Uint32Array(32*a*n),w=32*a,v=new Uint32Array(16),b=new Uint32Array(16),S=s*n*2;let E,C,A=0,k=null,x=!1,P=0,K=0;const T=p?parseInt(1e3/a):4294967295,B="undefined"!=typeof setImmediate?setImmediate:setTimeout,R=function(){if(x)return p(new Error("cancelled"),A/S);let r;switch(P){case 0:C=32*K*a,l(y,C,g,0,w),P=1,E=0;case 1:r=n-E,r>T&&(r=T);for(let e=0;e<r;e++)l(g,0,m,(E+e)*w,w),o(g,w,a,v,b);if(E+=r,A+=r,p){const e=parseInt(1e3*A/S);if(e!==k){if(x=p(null,A/S),x)break;k=e}}if(E<n)break;E=0,P=2;case 2:r=n-E,r>T&&(r=T);for(let e=0;e<r;e++){const e=g[16*(2*a-1)]&n-1;c(m,e*w,g,w),o(g,w,a,v,b)}if(E+=r,A+=r,p){const e=parseInt(1e3*A/S);if(e!==k){if(x=p(null,A/S),x)break;k=e}}if(E<n)break;if(l(g,0,y,C,w),K++,K<s){P=0;break}d=[];for(let e=0;e<y.length;e++)d.push(y[e]>>0&255),d.push(y[e]>>8&255),d.push(y[e]>>16&255),d.push(y[e]>>24&255);const t=i(e,d,f);return p&&p(null,1,t),t}p&&B(R)};if(!p)for(;;){const e=R();if(null!=e)return e}R()}const p={scrypt:function(e,r,t,n,i,o,a){return new Promise((function(s,c){let l=0;a&&a(0),f(e,r,t,n,i,o,(function(e,r,t){if(e)c(e);else if(t)a&&1!==l&&a(1),s(new Uint8Array(t));else if(a&&r!==l)return l=r,a(r)}))}))},syncScrypt:function(e,r,t,n,i,o){return new Uint8Array(f(e,r,t,n,i,o))}};e.exports=p}()}}]);
//# sourceMappingURL=5040.81073d1a.js.map