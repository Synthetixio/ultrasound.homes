{"version":3,"file":"chunk/5040.81073d1a.js","mappings":"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","sources":["webpack://@snx-v3/ultrasound/../../node_modules/aes-js/index.js","webpack://@snx-v3/ultrasound/../../node_modules/eccrypto/browser.js","webpack://@snx-v3/ultrasound/../../node_modules/@ethersproject/random/lib.esm/_version.js","webpack://@snx-v3/ultrasound/../../node_modules/@ethersproject/random/lib.esm/random.js","webpack://@snx-v3/ultrasound/../../node_modules/@ethersproject/pbkdf2/lib.esm/pbkdf2.js","webpack://@snx-v3/ultrasound/../../node_modules/@ethersproject/wordlists/lib.esm/_version.js","webpack://@snx-v3/ultrasound/../../node_modules/@ethersproject/wordlists/lib.esm/wordlist.js","webpack://@snx-v3/ultrasound/../../node_modules/@ethersproject/wordlists/lib.esm/lang-en.js","webpack://@snx-v3/ultrasound/../../node_modules/@ethersproject/wordlists/lib.esm/wordlists.js","webpack://@snx-v3/ultrasound/../../node_modules/@ethersproject/hdnode/lib.esm/index.js","webpack://@snx-v3/ultrasound/../../node_modules/@ethersproject/hdnode/lib.esm/_version.js","webpack://@snx-v3/ultrasound/../../node_modules/@ethersproject/json-wallets/lib.esm/utils.js","webpack://@snx-v3/ultrasound/../../node_modules/@ethersproject/json-wallets/lib.esm/_version.js","webpack://@snx-v3/ultrasound/../../node_modules/@ethersproject/json-wallets/lib.esm/keystore.js","webpack://@snx-v3/ultrasound/../../node_modules/@ethersproject/json-wallets/lib.esm/crowdsale.js","webpack://@snx-v3/ultrasound/../../node_modules/@ethersproject/json-wallets/lib.esm/inspect.js","webpack://@snx-v3/ultrasound/../../node_modules/@ethersproject/json-wallets/lib.esm/index.js","webpack://@snx-v3/ultrasound/../../node_modules/@ethersproject/wallet/lib.esm/index.js","webpack://@snx-v3/ultrasound/../../node_modules/@ethersproject/wallet/lib.esm/_version.js","webpack://@snx-v3/ultrasound/../../node_modules/@ethersproject/hash/lib.esm/message.js","webpack://@snx-v3/ultrasound/../../node_modules/eth-crypto/dist/es/create-identity.js","webpack://@snx-v3/ultrasound/../../node_modules/eth-crypto/dist/es/util.js","webpack://@snx-v3/ultrasound/../../node_modules/eth-crypto/dist/es/public-key.js","webpack://@snx-v3/ultrasound/../../node_modules/eth-crypto/dist/es/cipher.js","webpack://@snx-v3/ultrasound/../../node_modules/eth-crypto/dist/es/decrypt-with-private-key.js","webpack://@snx-v3/ultrasound/../../node_modules/eth-crypto/dist/es/encrypt-with-public-key.js","webpack://@snx-v3/ultrasound/../../node_modules/eth-crypto/dist/es/public-key-by-private-key.js","webpack://@snx-v3/ultrasound/../../node_modules/eth-crypto/dist/es/recover-public-key.js","webpack://@snx-v3/ultrasound/../../node_modules/eth-crypto/dist/es/recover.js","webpack://@snx-v3/ultrasound/../../node_modules/eth-crypto/dist/es/sign.js","webpack://@snx-v3/ultrasound/../../node_modules/eth-crypto/dist/es/sign-transaction.js","webpack://@snx-v3/ultrasound/../../node_modules/eth-crypto/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","webpack://@snx-v3/ultrasound/../../node_modules/eth-crypto/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","webpack://@snx-v3/ultrasound/../../node_modules/eth-crypto/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","webpack://@snx-v3/ultrasound/../../node_modules/eth-crypto/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","webpack://@snx-v3/ultrasound/../../node_modules/eth-crypto/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","webpack://@snx-v3/ultrasound/../../node_modules/eth-crypto/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","webpack://@snx-v3/ultrasound/../../node_modules/eth-crypto/dist/es/tx-data-by-compiled.js","webpack://@snx-v3/ultrasound/../../node_modules/eth-crypto/dist/es/calculate-contract-address.js","webpack://@snx-v3/ultrasound/../../node_modules/@ethersproject/solidity/lib.esm/_version.js","webpack://@snx-v3/ultrasound/../../node_modules/@ethersproject/solidity/lib.esm/index.js","webpack://@snx-v3/ultrasound/../../node_modules/eth-crypto/dist/es/hash.js","webpack://@snx-v3/ultrasound/../../node_modules/eth-crypto/dist/es/hex.js","webpack://@snx-v3/ultrasound/../../node_modules/eth-crypto/dist/es/vrs.js","webpack://@snx-v3/ultrasound/../../node_modules/eth-crypto/dist/es/index.js","webpack://@snx-v3/ultrasound/../../node_modules/eth-crypto/node_modules/secp256k1/elliptic.js","webpack://@snx-v3/ultrasound/../../node_modules/eth-crypto/node_modules/secp256k1/lib/elliptic.js","webpack://@snx-v3/ultrasound/../../node_modules/eth-crypto/node_modules/secp256k1/lib/index.js","webpack://@snx-v3/ultrasound/../../node_modules/scrypt-js/scrypt.js"],"sourcesContent":["\"use strict\";\n\n(function(root) {\n\n    function checkInt(value) {\n        return (parseInt(value) === value);\n    }\n\n    function checkInts(arrayish) {\n        if (!checkInt(arrayish.length)) { return false; }\n\n        for (var i = 0; i < arrayish.length; i++) {\n            if (!checkInt(arrayish[i]) || arrayish[i] < 0 || arrayish[i] > 255) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    function coerceArray(arg, copy) {\n\n        // ArrayBuffer view\n        if (arg.buffer && ArrayBuffer.isView(arg) && arg.name === 'Uint8Array') {\n\n            if (copy) {\n                if (arg.slice) {\n                    arg = arg.slice();\n                } else {\n                    arg = Array.prototype.slice.call(arg);\n                }\n            }\n\n            return arg;\n        }\n\n        // It's an array; check it is a valid representation of a byte\n        if (Array.isArray(arg)) {\n            if (!checkInts(arg)) {\n                throw new Error('Array contains invalid value: ' + arg);\n            }\n\n            return new Uint8Array(arg);\n        }\n\n        // Something else, but behaves like an array (maybe a Buffer? Arguments?)\n        if (checkInt(arg.length) && checkInts(arg)) {\n            return new Uint8Array(arg);\n        }\n\n        throw new Error('unsupported array-like object');\n    }\n\n    function createArray(length) {\n        return new Uint8Array(length);\n    }\n\n    function copyArray(sourceArray, targetArray, targetStart, sourceStart, sourceEnd) {\n        if (sourceStart != null || sourceEnd != null) {\n            if (sourceArray.slice) {\n                sourceArray = sourceArray.slice(sourceStart, sourceEnd);\n            } else {\n                sourceArray = Array.prototype.slice.call(sourceArray, sourceStart, sourceEnd);\n            }\n        }\n        targetArray.set(sourceArray, targetStart);\n    }\n\n\n\n    var convertUtf8 = (function() {\n        function toBytes(text) {\n            var result = [], i = 0;\n            text = encodeURI(text);\n            while (i < text.length) {\n                var c = text.charCodeAt(i++);\n\n                // if it is a % sign, encode the following 2 bytes as a hex value\n                if (c === 37) {\n                    result.push(parseInt(text.substr(i, 2), 16))\n                    i += 2;\n\n                // otherwise, just the actual byte\n                } else {\n                    result.push(c)\n                }\n            }\n\n            return coerceArray(result);\n        }\n\n        function fromBytes(bytes) {\n            var result = [], i = 0;\n\n            while (i < bytes.length) {\n                var c = bytes[i];\n\n                if (c < 128) {\n                    result.push(String.fromCharCode(c));\n                    i++;\n                } else if (c > 191 && c < 224) {\n                    result.push(String.fromCharCode(((c & 0x1f) << 6) | (bytes[i + 1] & 0x3f)));\n                    i += 2;\n                } else {\n                    result.push(String.fromCharCode(((c & 0x0f) << 12) | ((bytes[i + 1] & 0x3f) << 6) | (bytes[i + 2] & 0x3f)));\n                    i += 3;\n                }\n            }\n\n            return result.join('');\n        }\n\n        return {\n            toBytes: toBytes,\n            fromBytes: fromBytes,\n        }\n    })();\n\n    var convertHex = (function() {\n        function toBytes(text) {\n            var result = [];\n            for (var i = 0; i < text.length; i += 2) {\n                result.push(parseInt(text.substr(i, 2), 16));\n            }\n\n            return result;\n        }\n\n        // http://ixti.net/development/javascript/2011/11/11/base64-encodedecode-of-utf8-in-browser-with-js.html\n        var Hex = '0123456789abcdef';\n\n        function fromBytes(bytes) {\n                var result = [];\n                for (var i = 0; i < bytes.length; i++) {\n                    var v = bytes[i];\n                    result.push(Hex[(v & 0xf0) >> 4] + Hex[v & 0x0f]);\n                }\n                return result.join('');\n        }\n\n        return {\n            toBytes: toBytes,\n            fromBytes: fromBytes,\n        }\n    })();\n\n\n    // Number of rounds by keysize\n    var numberOfRounds = {16: 10, 24: 12, 32: 14}\n\n    // Round constant words\n    var rcon = [0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91];\n\n    // S-box and Inverse S-box (S is for Substitution)\n    var S = [0x63, 0x7c, 0x77, 0x7b, 0xf2, 0x6b, 0x6f, 0xc5, 0x30, 0x01, 0x67, 0x2b, 0xfe, 0xd7, 0xab, 0x76, 0xca, 0x82, 0xc9, 0x7d, 0xfa, 0x59, 0x47, 0xf0, 0xad, 0xd4, 0xa2, 0xaf, 0x9c, 0xa4, 0x72, 0xc0, 0xb7, 0xfd, 0x93, 0x26, 0x36, 0x3f, 0xf7, 0xcc, 0x34, 0xa5, 0xe5, 0xf1, 0x71, 0xd8, 0x31, 0x15, 0x04, 0xc7, 0x23, 0xc3, 0x18, 0x96, 0x05, 0x9a, 0x07, 0x12, 0x80, 0xe2, 0xeb, 0x27, 0xb2, 0x75, 0x09, 0x83, 0x2c, 0x1a, 0x1b, 0x6e, 0x5a, 0xa0, 0x52, 0x3b, 0xd6, 0xb3, 0x29, 0xe3, 0x2f, 0x84, 0x53, 0xd1, 0x00, 0xed, 0x20, 0xfc, 0xb1, 0x5b, 0x6a, 0xcb, 0xbe, 0x39, 0x4a, 0x4c, 0x58, 0xcf, 0xd0, 0xef, 0xaa, 0xfb, 0x43, 0x4d, 0x33, 0x85, 0x45, 0xf9, 0x02, 0x7f, 0x50, 0x3c, 0x9f, 0xa8, 0x51, 0xa3, 0x40, 0x8f, 0x92, 0x9d, 0x38, 0xf5, 0xbc, 0xb6, 0xda, 0x21, 0x10, 0xff, 0xf3, 0xd2, 0xcd, 0x0c, 0x13, 0xec, 0x5f, 0x97, 0x44, 0x17, 0xc4, 0xa7, 0x7e, 0x3d, 0x64, 0x5d, 0x19, 0x73, 0x60, 0x81, 0x4f, 0xdc, 0x22, 0x2a, 0x90, 0x88, 0x46, 0xee, 0xb8, 0x14, 0xde, 0x5e, 0x0b, 0xdb, 0xe0, 0x32, 0x3a, 0x0a, 0x49, 0x06, 0x24, 0x5c, 0xc2, 0xd3, 0xac, 0x62, 0x91, 0x95, 0xe4, 0x79, 0xe7, 0xc8, 0x37, 0x6d, 0x8d, 0xd5, 0x4e, 0xa9, 0x6c, 0x56, 0xf4, 0xea, 0x65, 0x7a, 0xae, 0x08, 0xba, 0x78, 0x25, 0x2e, 0x1c, 0xa6, 0xb4, 0xc6, 0xe8, 0xdd, 0x74, 0x1f, 0x4b, 0xbd, 0x8b, 0x8a, 0x70, 0x3e, 0xb5, 0x66, 0x48, 0x03, 0xf6, 0x0e, 0x61, 0x35, 0x57, 0xb9, 0x86, 0xc1, 0x1d, 0x9e, 0xe1, 0xf8, 0x98, 0x11, 0x69, 0xd9, 0x8e, 0x94, 0x9b, 0x1e, 0x87, 0xe9, 0xce, 0x55, 0x28, 0xdf, 0x8c, 0xa1, 0x89, 0x0d, 0xbf, 0xe6, 0x42, 0x68, 0x41, 0x99, 0x2d, 0x0f, 0xb0, 0x54, 0xbb, 0x16];\n    var Si =[0x52, 0x09, 0x6a, 0xd5, 0x30, 0x36, 0xa5, 0x38, 0xbf, 0x40, 0xa3, 0x9e, 0x81, 0xf3, 0xd7, 0xfb, 0x7c, 0xe3, 0x39, 0x82, 0x9b, 0x2f, 0xff, 0x87, 0x34, 0x8e, 0x43, 0x44, 0xc4, 0xde, 0xe9, 0xcb, 0x54, 0x7b, 0x94, 0x32, 0xa6, 0xc2, 0x23, 0x3d, 0xee, 0x4c, 0x95, 0x0b, 0x42, 0xfa, 0xc3, 0x4e, 0x08, 0x2e, 0xa1, 0x66, 0x28, 0xd9, 0x24, 0xb2, 0x76, 0x5b, 0xa2, 0x49, 0x6d, 0x8b, 0xd1, 0x25, 0x72, 0xf8, 0xf6, 0x64, 0x86, 0x68, 0x98, 0x16, 0xd4, 0xa4, 0x5c, 0xcc, 0x5d, 0x65, 0xb6, 0x92, 0x6c, 0x70, 0x48, 0x50, 0xfd, 0xed, 0xb9, 0xda, 0x5e, 0x15, 0x46, 0x57, 0xa7, 0x8d, 0x9d, 0x84, 0x90, 0xd8, 0xab, 0x00, 0x8c, 0xbc, 0xd3, 0x0a, 0xf7, 0xe4, 0x58, 0x05, 0xb8, 0xb3, 0x45, 0x06, 0xd0, 0x2c, 0x1e, 0x8f, 0xca, 0x3f, 0x0f, 0x02, 0xc1, 0xaf, 0xbd, 0x03, 0x01, 0x13, 0x8a, 0x6b, 0x3a, 0x91, 0x11, 0x41, 0x4f, 0x67, 0xdc, 0xea, 0x97, 0xf2, 0xcf, 0xce, 0xf0, 0xb4, 0xe6, 0x73, 0x96, 0xac, 0x74, 0x22, 0xe7, 0xad, 0x35, 0x85, 0xe2, 0xf9, 0x37, 0xe8, 0x1c, 0x75, 0xdf, 0x6e, 0x47, 0xf1, 0x1a, 0x71, 0x1d, 0x29, 0xc5, 0x89, 0x6f, 0xb7, 0x62, 0x0e, 0xaa, 0x18, 0xbe, 0x1b, 0xfc, 0x56, 0x3e, 0x4b, 0xc6, 0xd2, 0x79, 0x20, 0x9a, 0xdb, 0xc0, 0xfe, 0x78, 0xcd, 0x5a, 0xf4, 0x1f, 0xdd, 0xa8, 0x33, 0x88, 0x07, 0xc7, 0x31, 0xb1, 0x12, 0x10, 0x59, 0x27, 0x80, 0xec, 0x5f, 0x60, 0x51, 0x7f, 0xa9, 0x19, 0xb5, 0x4a, 0x0d, 0x2d, 0xe5, 0x7a, 0x9f, 0x93, 0xc9, 0x9c, 0xef, 0xa0, 0xe0, 0x3b, 0x4d, 0xae, 0x2a, 0xf5, 0xb0, 0xc8, 0xeb, 0xbb, 0x3c, 0x83, 0x53, 0x99, 0x61, 0x17, 0x2b, 0x04, 0x7e, 0xba, 0x77, 0xd6, 0x26, 0xe1, 0x69, 0x14, 0x63, 0x55, 0x21, 0x0c, 0x7d];\n\n    // Transformations for encryption\n    var T1 = [0xc66363a5, 0xf87c7c84, 0xee777799, 0xf67b7b8d, 0xfff2f20d, 0xd66b6bbd, 0xde6f6fb1, 0x91c5c554, 0x60303050, 0x02010103, 0xce6767a9, 0x562b2b7d, 0xe7fefe19, 0xb5d7d762, 0x4dababe6, 0xec76769a, 0x8fcaca45, 0x1f82829d, 0x89c9c940, 0xfa7d7d87, 0xeffafa15, 0xb25959eb, 0x8e4747c9, 0xfbf0f00b, 0x41adadec, 0xb3d4d467, 0x5fa2a2fd, 0x45afafea, 0x239c9cbf, 0x53a4a4f7, 0xe4727296, 0x9bc0c05b, 0x75b7b7c2, 0xe1fdfd1c, 0x3d9393ae, 0x4c26266a, 0x6c36365a, 0x7e3f3f41, 0xf5f7f702, 0x83cccc4f, 0x6834345c, 0x51a5a5f4, 0xd1e5e534, 0xf9f1f108, 0xe2717193, 0xabd8d873, 0x62313153, 0x2a15153f, 0x0804040c, 0x95c7c752, 0x46232365, 0x9dc3c35e, 0x30181828, 0x379696a1, 0x0a05050f, 0x2f9a9ab5, 0x0e070709, 0x24121236, 0x1b80809b, 0xdfe2e23d, 0xcdebeb26, 0x4e272769, 0x7fb2b2cd, 0xea75759f, 0x1209091b, 0x1d83839e, 0x582c2c74, 0x341a1a2e, 0x361b1b2d, 0xdc6e6eb2, 0xb45a5aee, 0x5ba0a0fb, 0xa45252f6, 0x763b3b4d, 0xb7d6d661, 0x7db3b3ce, 0x5229297b, 0xdde3e33e, 0x5e2f2f71, 0x13848497, 0xa65353f5, 0xb9d1d168, 0x00000000, 0xc1eded2c, 0x40202060, 0xe3fcfc1f, 0x79b1b1c8, 0xb65b5bed, 0xd46a6abe, 0x8dcbcb46, 0x67bebed9, 0x7239394b, 0x944a4ade, 0x984c4cd4, 0xb05858e8, 0x85cfcf4a, 0xbbd0d06b, 0xc5efef2a, 0x4faaaae5, 0xedfbfb16, 0x864343c5, 0x9a4d4dd7, 0x66333355, 0x11858594, 0x8a4545cf, 0xe9f9f910, 0x04020206, 0xfe7f7f81, 0xa05050f0, 0x783c3c44, 0x259f9fba, 0x4ba8a8e3, 0xa25151f3, 0x5da3a3fe, 0x804040c0, 0x058f8f8a, 0x3f9292ad, 0x219d9dbc, 0x70383848, 0xf1f5f504, 0x63bcbcdf, 0x77b6b6c1, 0xafdada75, 0x42212163, 0x20101030, 0xe5ffff1a, 0xfdf3f30e, 0xbfd2d26d, 0x81cdcd4c, 0x180c0c14, 0x26131335, 0xc3ecec2f, 0xbe5f5fe1, 0x359797a2, 0x884444cc, 0x2e171739, 0x93c4c457, 0x55a7a7f2, 0xfc7e7e82, 0x7a3d3d47, 0xc86464ac, 0xba5d5de7, 0x3219192b, 0xe6737395, 0xc06060a0, 0x19818198, 0x9e4f4fd1, 0xa3dcdc7f, 0x44222266, 0x542a2a7e, 0x3b9090ab, 0x0b888883, 0x8c4646ca, 0xc7eeee29, 0x6bb8b8d3, 0x2814143c, 0xa7dede79, 0xbc5e5ee2, 0x160b0b1d, 0xaddbdb76, 0xdbe0e03b, 0x64323256, 0x743a3a4e, 0x140a0a1e, 0x924949db, 0x0c06060a, 0x4824246c, 0xb85c5ce4, 0x9fc2c25d, 0xbdd3d36e, 0x43acacef, 0xc46262a6, 0x399191a8, 0x319595a4, 0xd3e4e437, 0xf279798b, 0xd5e7e732, 0x8bc8c843, 0x6e373759, 0xda6d6db7, 0x018d8d8c, 0xb1d5d564, 0x9c4e4ed2, 0x49a9a9e0, 0xd86c6cb4, 0xac5656fa, 0xf3f4f407, 0xcfeaea25, 0xca6565af, 0xf47a7a8e, 0x47aeaee9, 0x10080818, 0x6fbabad5, 0xf0787888, 0x4a25256f, 0x5c2e2e72, 0x381c1c24, 0x57a6a6f1, 0x73b4b4c7, 0x97c6c651, 0xcbe8e823, 0xa1dddd7c, 0xe874749c, 0x3e1f1f21, 0x964b4bdd, 0x61bdbddc, 0x0d8b8b86, 0x0f8a8a85, 0xe0707090, 0x7c3e3e42, 0x71b5b5c4, 0xcc6666aa, 0x904848d8, 0x06030305, 0xf7f6f601, 0x1c0e0e12, 0xc26161a3, 0x6a35355f, 0xae5757f9, 0x69b9b9d0, 0x17868691, 0x99c1c158, 0x3a1d1d27, 0x279e9eb9, 0xd9e1e138, 0xebf8f813, 0x2b9898b3, 0x22111133, 0xd26969bb, 0xa9d9d970, 0x078e8e89, 0x339494a7, 0x2d9b9bb6, 0x3c1e1e22, 0x15878792, 0xc9e9e920, 0x87cece49, 0xaa5555ff, 0x50282878, 0xa5dfdf7a, 0x038c8c8f, 0x59a1a1f8, 0x09898980, 0x1a0d0d17, 0x65bfbfda, 0xd7e6e631, 0x844242c6, 0xd06868b8, 0x824141c3, 0x299999b0, 0x5a2d2d77, 0x1e0f0f11, 0x7bb0b0cb, 0xa85454fc, 0x6dbbbbd6, 0x2c16163a];\n    var T2 = [0xa5c66363, 0x84f87c7c, 0x99ee7777, 0x8df67b7b, 0x0dfff2f2, 0xbdd66b6b, 0xb1de6f6f, 0x5491c5c5, 0x50603030, 0x03020101, 0xa9ce6767, 0x7d562b2b, 0x19e7fefe, 0x62b5d7d7, 0xe64dabab, 0x9aec7676, 0x458fcaca, 0x9d1f8282, 0x4089c9c9, 0x87fa7d7d, 0x15effafa, 0xebb25959, 0xc98e4747, 0x0bfbf0f0, 0xec41adad, 0x67b3d4d4, 0xfd5fa2a2, 0xea45afaf, 0xbf239c9c, 0xf753a4a4, 0x96e47272, 0x5b9bc0c0, 0xc275b7b7, 0x1ce1fdfd, 0xae3d9393, 0x6a4c2626, 0x5a6c3636, 0x417e3f3f, 0x02f5f7f7, 0x4f83cccc, 0x5c683434, 0xf451a5a5, 0x34d1e5e5, 0x08f9f1f1, 0x93e27171, 0x73abd8d8, 0x53623131, 0x3f2a1515, 0x0c080404, 0x5295c7c7, 0x65462323, 0x5e9dc3c3, 0x28301818, 0xa1379696, 0x0f0a0505, 0xb52f9a9a, 0x090e0707, 0x36241212, 0x9b1b8080, 0x3ddfe2e2, 0x26cdebeb, 0x694e2727, 0xcd7fb2b2, 0x9fea7575, 0x1b120909, 0x9e1d8383, 0x74582c2c, 0x2e341a1a, 0x2d361b1b, 0xb2dc6e6e, 0xeeb45a5a, 0xfb5ba0a0, 0xf6a45252, 0x4d763b3b, 0x61b7d6d6, 0xce7db3b3, 0x7b522929, 0x3edde3e3, 0x715e2f2f, 0x97138484, 0xf5a65353, 0x68b9d1d1, 0x00000000, 0x2cc1eded, 0x60402020, 0x1fe3fcfc, 0xc879b1b1, 0xedb65b5b, 0xbed46a6a, 0x468dcbcb, 0xd967bebe, 0x4b723939, 0xde944a4a, 0xd4984c4c, 0xe8b05858, 0x4a85cfcf, 0x6bbbd0d0, 0x2ac5efef, 0xe54faaaa, 0x16edfbfb, 0xc5864343, 0xd79a4d4d, 0x55663333, 0x94118585, 0xcf8a4545, 0x10e9f9f9, 0x06040202, 0x81fe7f7f, 0xf0a05050, 0x44783c3c, 0xba259f9f, 0xe34ba8a8, 0xf3a25151, 0xfe5da3a3, 0xc0804040, 0x8a058f8f, 0xad3f9292, 0xbc219d9d, 0x48703838, 0x04f1f5f5, 0xdf63bcbc, 0xc177b6b6, 0x75afdada, 0x63422121, 0x30201010, 0x1ae5ffff, 0x0efdf3f3, 0x6dbfd2d2, 0x4c81cdcd, 0x14180c0c, 0x35261313, 0x2fc3ecec, 0xe1be5f5f, 0xa2359797, 0xcc884444, 0x392e1717, 0x5793c4c4, 0xf255a7a7, 0x82fc7e7e, 0x477a3d3d, 0xacc86464, 0xe7ba5d5d, 0x2b321919, 0x95e67373, 0xa0c06060, 0x98198181, 0xd19e4f4f, 0x7fa3dcdc, 0x66442222, 0x7e542a2a, 0xab3b9090, 0x830b8888, 0xca8c4646, 0x29c7eeee, 0xd36bb8b8, 0x3c281414, 0x79a7dede, 0xe2bc5e5e, 0x1d160b0b, 0x76addbdb, 0x3bdbe0e0, 0x56643232, 0x4e743a3a, 0x1e140a0a, 0xdb924949, 0x0a0c0606, 0x6c482424, 0xe4b85c5c, 0x5d9fc2c2, 0x6ebdd3d3, 0xef43acac, 0xa6c46262, 0xa8399191, 0xa4319595, 0x37d3e4e4, 0x8bf27979, 0x32d5e7e7, 0x438bc8c8, 0x596e3737, 0xb7da6d6d, 0x8c018d8d, 0x64b1d5d5, 0xd29c4e4e, 0xe049a9a9, 0xb4d86c6c, 0xfaac5656, 0x07f3f4f4, 0x25cfeaea, 0xafca6565, 0x8ef47a7a, 0xe947aeae, 0x18100808, 0xd56fbaba, 0x88f07878, 0x6f4a2525, 0x725c2e2e, 0x24381c1c, 0xf157a6a6, 0xc773b4b4, 0x5197c6c6, 0x23cbe8e8, 0x7ca1dddd, 0x9ce87474, 0x213e1f1f, 0xdd964b4b, 0xdc61bdbd, 0x860d8b8b, 0x850f8a8a, 0x90e07070, 0x427c3e3e, 0xc471b5b5, 0xaacc6666, 0xd8904848, 0x05060303, 0x01f7f6f6, 0x121c0e0e, 0xa3c26161, 0x5f6a3535, 0xf9ae5757, 0xd069b9b9, 0x91178686, 0x5899c1c1, 0x273a1d1d, 0xb9279e9e, 0x38d9e1e1, 0x13ebf8f8, 0xb32b9898, 0x33221111, 0xbbd26969, 0x70a9d9d9, 0x89078e8e, 0xa7339494, 0xb62d9b9b, 0x223c1e1e, 0x92158787, 0x20c9e9e9, 0x4987cece, 0xffaa5555, 0x78502828, 0x7aa5dfdf, 0x8f038c8c, 0xf859a1a1, 0x80098989, 0x171a0d0d, 0xda65bfbf, 0x31d7e6e6, 0xc6844242, 0xb8d06868, 0xc3824141, 0xb0299999, 0x775a2d2d, 0x111e0f0f, 0xcb7bb0b0, 0xfca85454, 0xd66dbbbb, 0x3a2c1616];\n    var T3 = [0x63a5c663, 0x7c84f87c, 0x7799ee77, 0x7b8df67b, 0xf20dfff2, 0x6bbdd66b, 0x6fb1de6f, 0xc55491c5, 0x30506030, 0x01030201, 0x67a9ce67, 0x2b7d562b, 0xfe19e7fe, 0xd762b5d7, 0xabe64dab, 0x769aec76, 0xca458fca, 0x829d1f82, 0xc94089c9, 0x7d87fa7d, 0xfa15effa, 0x59ebb259, 0x47c98e47, 0xf00bfbf0, 0xadec41ad, 0xd467b3d4, 0xa2fd5fa2, 0xafea45af, 0x9cbf239c, 0xa4f753a4, 0x7296e472, 0xc05b9bc0, 0xb7c275b7, 0xfd1ce1fd, 0x93ae3d93, 0x266a4c26, 0x365a6c36, 0x3f417e3f, 0xf702f5f7, 0xcc4f83cc, 0x345c6834, 0xa5f451a5, 0xe534d1e5, 0xf108f9f1, 0x7193e271, 0xd873abd8, 0x31536231, 0x153f2a15, 0x040c0804, 0xc75295c7, 0x23654623, 0xc35e9dc3, 0x18283018, 0x96a13796, 0x050f0a05, 0x9ab52f9a, 0x07090e07, 0x12362412, 0x809b1b80, 0xe23ddfe2, 0xeb26cdeb, 0x27694e27, 0xb2cd7fb2, 0x759fea75, 0x091b1209, 0x839e1d83, 0x2c74582c, 0x1a2e341a, 0x1b2d361b, 0x6eb2dc6e, 0x5aeeb45a, 0xa0fb5ba0, 0x52f6a452, 0x3b4d763b, 0xd661b7d6, 0xb3ce7db3, 0x297b5229, 0xe33edde3, 0x2f715e2f, 0x84971384, 0x53f5a653, 0xd168b9d1, 0x00000000, 0xed2cc1ed, 0x20604020, 0xfc1fe3fc, 0xb1c879b1, 0x5bedb65b, 0x6abed46a, 0xcb468dcb, 0xbed967be, 0x394b7239, 0x4ade944a, 0x4cd4984c, 0x58e8b058, 0xcf4a85cf, 0xd06bbbd0, 0xef2ac5ef, 0xaae54faa, 0xfb16edfb, 0x43c58643, 0x4dd79a4d, 0x33556633, 0x85941185, 0x45cf8a45, 0xf910e9f9, 0x02060402, 0x7f81fe7f, 0x50f0a050, 0x3c44783c, 0x9fba259f, 0xa8e34ba8, 0x51f3a251, 0xa3fe5da3, 0x40c08040, 0x8f8a058f, 0x92ad3f92, 0x9dbc219d, 0x38487038, 0xf504f1f5, 0xbcdf63bc, 0xb6c177b6, 0xda75afda, 0x21634221, 0x10302010, 0xff1ae5ff, 0xf30efdf3, 0xd26dbfd2, 0xcd4c81cd, 0x0c14180c, 0x13352613, 0xec2fc3ec, 0x5fe1be5f, 0x97a23597, 0x44cc8844, 0x17392e17, 0xc45793c4, 0xa7f255a7, 0x7e82fc7e, 0x3d477a3d, 0x64acc864, 0x5de7ba5d, 0x192b3219, 0x7395e673, 0x60a0c060, 0x81981981, 0x4fd19e4f, 0xdc7fa3dc, 0x22664422, 0x2a7e542a, 0x90ab3b90, 0x88830b88, 0x46ca8c46, 0xee29c7ee, 0xb8d36bb8, 0x143c2814, 0xde79a7de, 0x5ee2bc5e, 0x0b1d160b, 0xdb76addb, 0xe03bdbe0, 0x32566432, 0x3a4e743a, 0x0a1e140a, 0x49db9249, 0x060a0c06, 0x246c4824, 0x5ce4b85c, 0xc25d9fc2, 0xd36ebdd3, 0xacef43ac, 0x62a6c462, 0x91a83991, 0x95a43195, 0xe437d3e4, 0x798bf279, 0xe732d5e7, 0xc8438bc8, 0x37596e37, 0x6db7da6d, 0x8d8c018d, 0xd564b1d5, 0x4ed29c4e, 0xa9e049a9, 0x6cb4d86c, 0x56faac56, 0xf407f3f4, 0xea25cfea, 0x65afca65, 0x7a8ef47a, 0xaee947ae, 0x08181008, 0xbad56fba, 0x7888f078, 0x256f4a25, 0x2e725c2e, 0x1c24381c, 0xa6f157a6, 0xb4c773b4, 0xc65197c6, 0xe823cbe8, 0xdd7ca1dd, 0x749ce874, 0x1f213e1f, 0x4bdd964b, 0xbddc61bd, 0x8b860d8b, 0x8a850f8a, 0x7090e070, 0x3e427c3e, 0xb5c471b5, 0x66aacc66, 0x48d89048, 0x03050603, 0xf601f7f6, 0x0e121c0e, 0x61a3c261, 0x355f6a35, 0x57f9ae57, 0xb9d069b9, 0x86911786, 0xc15899c1, 0x1d273a1d, 0x9eb9279e, 0xe138d9e1, 0xf813ebf8, 0x98b32b98, 0x11332211, 0x69bbd269, 0xd970a9d9, 0x8e89078e, 0x94a73394, 0x9bb62d9b, 0x1e223c1e, 0x87921587, 0xe920c9e9, 0xce4987ce, 0x55ffaa55, 0x28785028, 0xdf7aa5df, 0x8c8f038c, 0xa1f859a1, 0x89800989, 0x0d171a0d, 0xbfda65bf, 0xe631d7e6, 0x42c68442, 0x68b8d068, 0x41c38241, 0x99b02999, 0x2d775a2d, 0x0f111e0f, 0xb0cb7bb0, 0x54fca854, 0xbbd66dbb, 0x163a2c16];\n    var T4 = [0x6363a5c6, 0x7c7c84f8, 0x777799ee, 0x7b7b8df6, 0xf2f20dff, 0x6b6bbdd6, 0x6f6fb1de, 0xc5c55491, 0x30305060, 0x01010302, 0x6767a9ce, 0x2b2b7d56, 0xfefe19e7, 0xd7d762b5, 0xababe64d, 0x76769aec, 0xcaca458f, 0x82829d1f, 0xc9c94089, 0x7d7d87fa, 0xfafa15ef, 0x5959ebb2, 0x4747c98e, 0xf0f00bfb, 0xadadec41, 0xd4d467b3, 0xa2a2fd5f, 0xafafea45, 0x9c9cbf23, 0xa4a4f753, 0x727296e4, 0xc0c05b9b, 0xb7b7c275, 0xfdfd1ce1, 0x9393ae3d, 0x26266a4c, 0x36365a6c, 0x3f3f417e, 0xf7f702f5, 0xcccc4f83, 0x34345c68, 0xa5a5f451, 0xe5e534d1, 0xf1f108f9, 0x717193e2, 0xd8d873ab, 0x31315362, 0x15153f2a, 0x04040c08, 0xc7c75295, 0x23236546, 0xc3c35e9d, 0x18182830, 0x9696a137, 0x05050f0a, 0x9a9ab52f, 0x0707090e, 0x12123624, 0x80809b1b, 0xe2e23ddf, 0xebeb26cd, 0x2727694e, 0xb2b2cd7f, 0x75759fea, 0x09091b12, 0x83839e1d, 0x2c2c7458, 0x1a1a2e34, 0x1b1b2d36, 0x6e6eb2dc, 0x5a5aeeb4, 0xa0a0fb5b, 0x5252f6a4, 0x3b3b4d76, 0xd6d661b7, 0xb3b3ce7d, 0x29297b52, 0xe3e33edd, 0x2f2f715e, 0x84849713, 0x5353f5a6, 0xd1d168b9, 0x00000000, 0xeded2cc1, 0x20206040, 0xfcfc1fe3, 0xb1b1c879, 0x5b5bedb6, 0x6a6abed4, 0xcbcb468d, 0xbebed967, 0x39394b72, 0x4a4ade94, 0x4c4cd498, 0x5858e8b0, 0xcfcf4a85, 0xd0d06bbb, 0xefef2ac5, 0xaaaae54f, 0xfbfb16ed, 0x4343c586, 0x4d4dd79a, 0x33335566, 0x85859411, 0x4545cf8a, 0xf9f910e9, 0x02020604, 0x7f7f81fe, 0x5050f0a0, 0x3c3c4478, 0x9f9fba25, 0xa8a8e34b, 0x5151f3a2, 0xa3a3fe5d, 0x4040c080, 0x8f8f8a05, 0x9292ad3f, 0x9d9dbc21, 0x38384870, 0xf5f504f1, 0xbcbcdf63, 0xb6b6c177, 0xdada75af, 0x21216342, 0x10103020, 0xffff1ae5, 0xf3f30efd, 0xd2d26dbf, 0xcdcd4c81, 0x0c0c1418, 0x13133526, 0xecec2fc3, 0x5f5fe1be, 0x9797a235, 0x4444cc88, 0x1717392e, 0xc4c45793, 0xa7a7f255, 0x7e7e82fc, 0x3d3d477a, 0x6464acc8, 0x5d5de7ba, 0x19192b32, 0x737395e6, 0x6060a0c0, 0x81819819, 0x4f4fd19e, 0xdcdc7fa3, 0x22226644, 0x2a2a7e54, 0x9090ab3b, 0x8888830b, 0x4646ca8c, 0xeeee29c7, 0xb8b8d36b, 0x14143c28, 0xdede79a7, 0x5e5ee2bc, 0x0b0b1d16, 0xdbdb76ad, 0xe0e03bdb, 0x32325664, 0x3a3a4e74, 0x0a0a1e14, 0x4949db92, 0x06060a0c, 0x24246c48, 0x5c5ce4b8, 0xc2c25d9f, 0xd3d36ebd, 0xacacef43, 0x6262a6c4, 0x9191a839, 0x9595a431, 0xe4e437d3, 0x79798bf2, 0xe7e732d5, 0xc8c8438b, 0x3737596e, 0x6d6db7da, 0x8d8d8c01, 0xd5d564b1, 0x4e4ed29c, 0xa9a9e049, 0x6c6cb4d8, 0x5656faac, 0xf4f407f3, 0xeaea25cf, 0x6565afca, 0x7a7a8ef4, 0xaeaee947, 0x08081810, 0xbabad56f, 0x787888f0, 0x25256f4a, 0x2e2e725c, 0x1c1c2438, 0xa6a6f157, 0xb4b4c773, 0xc6c65197, 0xe8e823cb, 0xdddd7ca1, 0x74749ce8, 0x1f1f213e, 0x4b4bdd96, 0xbdbddc61, 0x8b8b860d, 0x8a8a850f, 0x707090e0, 0x3e3e427c, 0xb5b5c471, 0x6666aacc, 0x4848d890, 0x03030506, 0xf6f601f7, 0x0e0e121c, 0x6161a3c2, 0x35355f6a, 0x5757f9ae, 0xb9b9d069, 0x86869117, 0xc1c15899, 0x1d1d273a, 0x9e9eb927, 0xe1e138d9, 0xf8f813eb, 0x9898b32b, 0x11113322, 0x6969bbd2, 0xd9d970a9, 0x8e8e8907, 0x9494a733, 0x9b9bb62d, 0x1e1e223c, 0x87879215, 0xe9e920c9, 0xcece4987, 0x5555ffaa, 0x28287850, 0xdfdf7aa5, 0x8c8c8f03, 0xa1a1f859, 0x89898009, 0x0d0d171a, 0xbfbfda65, 0xe6e631d7, 0x4242c684, 0x6868b8d0, 0x4141c382, 0x9999b029, 0x2d2d775a, 0x0f0f111e, 0xb0b0cb7b, 0x5454fca8, 0xbbbbd66d, 0x16163a2c];\n\n    // Transformations for decryption\n    var T5 = [0x51f4a750, 0x7e416553, 0x1a17a4c3, 0x3a275e96, 0x3bab6bcb, 0x1f9d45f1, 0xacfa58ab, 0x4be30393, 0x2030fa55, 0xad766df6, 0x88cc7691, 0xf5024c25, 0x4fe5d7fc, 0xc52acbd7, 0x26354480, 0xb562a38f, 0xdeb15a49, 0x25ba1b67, 0x45ea0e98, 0x5dfec0e1, 0xc32f7502, 0x814cf012, 0x8d4697a3, 0x6bd3f9c6, 0x038f5fe7, 0x15929c95, 0xbf6d7aeb, 0x955259da, 0xd4be832d, 0x587421d3, 0x49e06929, 0x8ec9c844, 0x75c2896a, 0xf48e7978, 0x99583e6b, 0x27b971dd, 0xbee14fb6, 0xf088ad17, 0xc920ac66, 0x7dce3ab4, 0x63df4a18, 0xe51a3182, 0x97513360, 0x62537f45, 0xb16477e0, 0xbb6bae84, 0xfe81a01c, 0xf9082b94, 0x70486858, 0x8f45fd19, 0x94de6c87, 0x527bf8b7, 0xab73d323, 0x724b02e2, 0xe31f8f57, 0x6655ab2a, 0xb2eb2807, 0x2fb5c203, 0x86c57b9a, 0xd33708a5, 0x302887f2, 0x23bfa5b2, 0x02036aba, 0xed16825c, 0x8acf1c2b, 0xa779b492, 0xf307f2f0, 0x4e69e2a1, 0x65daf4cd, 0x0605bed5, 0xd134621f, 0xc4a6fe8a, 0x342e539d, 0xa2f355a0, 0x058ae132, 0xa4f6eb75, 0x0b83ec39, 0x4060efaa, 0x5e719f06, 0xbd6e1051, 0x3e218af9, 0x96dd063d, 0xdd3e05ae, 0x4de6bd46, 0x91548db5, 0x71c45d05, 0x0406d46f, 0x605015ff, 0x1998fb24, 0xd6bde997, 0x894043cc, 0x67d99e77, 0xb0e842bd, 0x07898b88, 0xe7195b38, 0x79c8eedb, 0xa17c0a47, 0x7c420fe9, 0xf8841ec9, 0x00000000, 0x09808683, 0x322bed48, 0x1e1170ac, 0x6c5a724e, 0xfd0efffb, 0x0f853856, 0x3daed51e, 0x362d3927, 0x0a0fd964, 0x685ca621, 0x9b5b54d1, 0x24362e3a, 0x0c0a67b1, 0x9357e70f, 0xb4ee96d2, 0x1b9b919e, 0x80c0c54f, 0x61dc20a2, 0x5a774b69, 0x1c121a16, 0xe293ba0a, 0xc0a02ae5, 0x3c22e043, 0x121b171d, 0x0e090d0b, 0xf28bc7ad, 0x2db6a8b9, 0x141ea9c8, 0x57f11985, 0xaf75074c, 0xee99ddbb, 0xa37f60fd, 0xf701269f, 0x5c72f5bc, 0x44663bc5, 0x5bfb7e34, 0x8b432976, 0xcb23c6dc, 0xb6edfc68, 0xb8e4f163, 0xd731dcca, 0x42638510, 0x13972240, 0x84c61120, 0x854a247d, 0xd2bb3df8, 0xaef93211, 0xc729a16d, 0x1d9e2f4b, 0xdcb230f3, 0x0d8652ec, 0x77c1e3d0, 0x2bb3166c, 0xa970b999, 0x119448fa, 0x47e96422, 0xa8fc8cc4, 0xa0f03f1a, 0x567d2cd8, 0x223390ef, 0x87494ec7, 0xd938d1c1, 0x8ccaa2fe, 0x98d40b36, 0xa6f581cf, 0xa57ade28, 0xdab78e26, 0x3fadbfa4, 0x2c3a9de4, 0x5078920d, 0x6a5fcc9b, 0x547e4662, 0xf68d13c2, 0x90d8b8e8, 0x2e39f75e, 0x82c3aff5, 0x9f5d80be, 0x69d0937c, 0x6fd52da9, 0xcf2512b3, 0xc8ac993b, 0x10187da7, 0xe89c636e, 0xdb3bbb7b, 0xcd267809, 0x6e5918f4, 0xec9ab701, 0x834f9aa8, 0xe6956e65, 0xaaffe67e, 0x21bccf08, 0xef15e8e6, 0xbae79bd9, 0x4a6f36ce, 0xea9f09d4, 0x29b07cd6, 0x31a4b2af, 0x2a3f2331, 0xc6a59430, 0x35a266c0, 0x744ebc37, 0xfc82caa6, 0xe090d0b0, 0x33a7d815, 0xf104984a, 0x41ecdaf7, 0x7fcd500e, 0x1791f62f, 0x764dd68d, 0x43efb04d, 0xccaa4d54, 0xe49604df, 0x9ed1b5e3, 0x4c6a881b, 0xc12c1fb8, 0x4665517f, 0x9d5eea04, 0x018c355d, 0xfa877473, 0xfb0b412e, 0xb3671d5a, 0x92dbd252, 0xe9105633, 0x6dd64713, 0x9ad7618c, 0x37a10c7a, 0x59f8148e, 0xeb133c89, 0xcea927ee, 0xb761c935, 0xe11ce5ed, 0x7a47b13c, 0x9cd2df59, 0x55f2733f, 0x1814ce79, 0x73c737bf, 0x53f7cdea, 0x5ffdaa5b, 0xdf3d6f14, 0x7844db86, 0xcaaff381, 0xb968c43e, 0x3824342c, 0xc2a3405f, 0x161dc372, 0xbce2250c, 0x283c498b, 0xff0d9541, 0x39a80171, 0x080cb3de, 0xd8b4e49c, 0x6456c190, 0x7bcb8461, 0xd532b670, 0x486c5c74, 0xd0b85742];\n    var T6 = [0x5051f4a7, 0x537e4165, 0xc31a17a4, 0x963a275e, 0xcb3bab6b, 0xf11f9d45, 0xabacfa58, 0x934be303, 0x552030fa, 0xf6ad766d, 0x9188cc76, 0x25f5024c, 0xfc4fe5d7, 0xd7c52acb, 0x80263544, 0x8fb562a3, 0x49deb15a, 0x6725ba1b, 0x9845ea0e, 0xe15dfec0, 0x02c32f75, 0x12814cf0, 0xa38d4697, 0xc66bd3f9, 0xe7038f5f, 0x9515929c, 0xebbf6d7a, 0xda955259, 0x2dd4be83, 0xd3587421, 0x2949e069, 0x448ec9c8, 0x6a75c289, 0x78f48e79, 0x6b99583e, 0xdd27b971, 0xb6bee14f, 0x17f088ad, 0x66c920ac, 0xb47dce3a, 0x1863df4a, 0x82e51a31, 0x60975133, 0x4562537f, 0xe0b16477, 0x84bb6bae, 0x1cfe81a0, 0x94f9082b, 0x58704868, 0x198f45fd, 0x8794de6c, 0xb7527bf8, 0x23ab73d3, 0xe2724b02, 0x57e31f8f, 0x2a6655ab, 0x07b2eb28, 0x032fb5c2, 0x9a86c57b, 0xa5d33708, 0xf2302887, 0xb223bfa5, 0xba02036a, 0x5ced1682, 0x2b8acf1c, 0x92a779b4, 0xf0f307f2, 0xa14e69e2, 0xcd65daf4, 0xd50605be, 0x1fd13462, 0x8ac4a6fe, 0x9d342e53, 0xa0a2f355, 0x32058ae1, 0x75a4f6eb, 0x390b83ec, 0xaa4060ef, 0x065e719f, 0x51bd6e10, 0xf93e218a, 0x3d96dd06, 0xaedd3e05, 0x464de6bd, 0xb591548d, 0x0571c45d, 0x6f0406d4, 0xff605015, 0x241998fb, 0x97d6bde9, 0xcc894043, 0x7767d99e, 0xbdb0e842, 0x8807898b, 0x38e7195b, 0xdb79c8ee, 0x47a17c0a, 0xe97c420f, 0xc9f8841e, 0x00000000, 0x83098086, 0x48322bed, 0xac1e1170, 0x4e6c5a72, 0xfbfd0eff, 0x560f8538, 0x1e3daed5, 0x27362d39, 0x640a0fd9, 0x21685ca6, 0xd19b5b54, 0x3a24362e, 0xb10c0a67, 0x0f9357e7, 0xd2b4ee96, 0x9e1b9b91, 0x4f80c0c5, 0xa261dc20, 0x695a774b, 0x161c121a, 0x0ae293ba, 0xe5c0a02a, 0x433c22e0, 0x1d121b17, 0x0b0e090d, 0xadf28bc7, 0xb92db6a8, 0xc8141ea9, 0x8557f119, 0x4caf7507, 0xbbee99dd, 0xfda37f60, 0x9ff70126, 0xbc5c72f5, 0xc544663b, 0x345bfb7e, 0x768b4329, 0xdccb23c6, 0x68b6edfc, 0x63b8e4f1, 0xcad731dc, 0x10426385, 0x40139722, 0x2084c611, 0x7d854a24, 0xf8d2bb3d, 0x11aef932, 0x6dc729a1, 0x4b1d9e2f, 0xf3dcb230, 0xec0d8652, 0xd077c1e3, 0x6c2bb316, 0x99a970b9, 0xfa119448, 0x2247e964, 0xc4a8fc8c, 0x1aa0f03f, 0xd8567d2c, 0xef223390, 0xc787494e, 0xc1d938d1, 0xfe8ccaa2, 0x3698d40b, 0xcfa6f581, 0x28a57ade, 0x26dab78e, 0xa43fadbf, 0xe42c3a9d, 0x0d507892, 0x9b6a5fcc, 0x62547e46, 0xc2f68d13, 0xe890d8b8, 0x5e2e39f7, 0xf582c3af, 0xbe9f5d80, 0x7c69d093, 0xa96fd52d, 0xb3cf2512, 0x3bc8ac99, 0xa710187d, 0x6ee89c63, 0x7bdb3bbb, 0x09cd2678, 0xf46e5918, 0x01ec9ab7, 0xa8834f9a, 0x65e6956e, 0x7eaaffe6, 0x0821bccf, 0xe6ef15e8, 0xd9bae79b, 0xce4a6f36, 0xd4ea9f09, 0xd629b07c, 0xaf31a4b2, 0x312a3f23, 0x30c6a594, 0xc035a266, 0x37744ebc, 0xa6fc82ca, 0xb0e090d0, 0x1533a7d8, 0x4af10498, 0xf741ecda, 0x0e7fcd50, 0x2f1791f6, 0x8d764dd6, 0x4d43efb0, 0x54ccaa4d, 0xdfe49604, 0xe39ed1b5, 0x1b4c6a88, 0xb8c12c1f, 0x7f466551, 0x049d5eea, 0x5d018c35, 0x73fa8774, 0x2efb0b41, 0x5ab3671d, 0x5292dbd2, 0x33e91056, 0x136dd647, 0x8c9ad761, 0x7a37a10c, 0x8e59f814, 0x89eb133c, 0xeecea927, 0x35b761c9, 0xede11ce5, 0x3c7a47b1, 0x599cd2df, 0x3f55f273, 0x791814ce, 0xbf73c737, 0xea53f7cd, 0x5b5ffdaa, 0x14df3d6f, 0x867844db, 0x81caaff3, 0x3eb968c4, 0x2c382434, 0x5fc2a340, 0x72161dc3, 0x0cbce225, 0x8b283c49, 0x41ff0d95, 0x7139a801, 0xde080cb3, 0x9cd8b4e4, 0x906456c1, 0x617bcb84, 0x70d532b6, 0x74486c5c, 0x42d0b857];\n    var T7 = [0xa75051f4, 0x65537e41, 0xa4c31a17, 0x5e963a27, 0x6bcb3bab, 0x45f11f9d, 0x58abacfa, 0x03934be3, 0xfa552030, 0x6df6ad76, 0x769188cc, 0x4c25f502, 0xd7fc4fe5, 0xcbd7c52a, 0x44802635, 0xa38fb562, 0x5a49deb1, 0x1b6725ba, 0x0e9845ea, 0xc0e15dfe, 0x7502c32f, 0xf012814c, 0x97a38d46, 0xf9c66bd3, 0x5fe7038f, 0x9c951592, 0x7aebbf6d, 0x59da9552, 0x832dd4be, 0x21d35874, 0x692949e0, 0xc8448ec9, 0x896a75c2, 0x7978f48e, 0x3e6b9958, 0x71dd27b9, 0x4fb6bee1, 0xad17f088, 0xac66c920, 0x3ab47dce, 0x4a1863df, 0x3182e51a, 0x33609751, 0x7f456253, 0x77e0b164, 0xae84bb6b, 0xa01cfe81, 0x2b94f908, 0x68587048, 0xfd198f45, 0x6c8794de, 0xf8b7527b, 0xd323ab73, 0x02e2724b, 0x8f57e31f, 0xab2a6655, 0x2807b2eb, 0xc2032fb5, 0x7b9a86c5, 0x08a5d337, 0x87f23028, 0xa5b223bf, 0x6aba0203, 0x825ced16, 0x1c2b8acf, 0xb492a779, 0xf2f0f307, 0xe2a14e69, 0xf4cd65da, 0xbed50605, 0x621fd134, 0xfe8ac4a6, 0x539d342e, 0x55a0a2f3, 0xe132058a, 0xeb75a4f6, 0xec390b83, 0xefaa4060, 0x9f065e71, 0x1051bd6e, 0x8af93e21, 0x063d96dd, 0x05aedd3e, 0xbd464de6, 0x8db59154, 0x5d0571c4, 0xd46f0406, 0x15ff6050, 0xfb241998, 0xe997d6bd, 0x43cc8940, 0x9e7767d9, 0x42bdb0e8, 0x8b880789, 0x5b38e719, 0xeedb79c8, 0x0a47a17c, 0x0fe97c42, 0x1ec9f884, 0x00000000, 0x86830980, 0xed48322b, 0x70ac1e11, 0x724e6c5a, 0xfffbfd0e, 0x38560f85, 0xd51e3dae, 0x3927362d, 0xd9640a0f, 0xa621685c, 0x54d19b5b, 0x2e3a2436, 0x67b10c0a, 0xe70f9357, 0x96d2b4ee, 0x919e1b9b, 0xc54f80c0, 0x20a261dc, 0x4b695a77, 0x1a161c12, 0xba0ae293, 0x2ae5c0a0, 0xe0433c22, 0x171d121b, 0x0d0b0e09, 0xc7adf28b, 0xa8b92db6, 0xa9c8141e, 0x198557f1, 0x074caf75, 0xddbbee99, 0x60fda37f, 0x269ff701, 0xf5bc5c72, 0x3bc54466, 0x7e345bfb, 0x29768b43, 0xc6dccb23, 0xfc68b6ed, 0xf163b8e4, 0xdccad731, 0x85104263, 0x22401397, 0x112084c6, 0x247d854a, 0x3df8d2bb, 0x3211aef9, 0xa16dc729, 0x2f4b1d9e, 0x30f3dcb2, 0x52ec0d86, 0xe3d077c1, 0x166c2bb3, 0xb999a970, 0x48fa1194, 0x642247e9, 0x8cc4a8fc, 0x3f1aa0f0, 0x2cd8567d, 0x90ef2233, 0x4ec78749, 0xd1c1d938, 0xa2fe8cca, 0x0b3698d4, 0x81cfa6f5, 0xde28a57a, 0x8e26dab7, 0xbfa43fad, 0x9de42c3a, 0x920d5078, 0xcc9b6a5f, 0x4662547e, 0x13c2f68d, 0xb8e890d8, 0xf75e2e39, 0xaff582c3, 0x80be9f5d, 0x937c69d0, 0x2da96fd5, 0x12b3cf25, 0x993bc8ac, 0x7da71018, 0x636ee89c, 0xbb7bdb3b, 0x7809cd26, 0x18f46e59, 0xb701ec9a, 0x9aa8834f, 0x6e65e695, 0xe67eaaff, 0xcf0821bc, 0xe8e6ef15, 0x9bd9bae7, 0x36ce4a6f, 0x09d4ea9f, 0x7cd629b0, 0xb2af31a4, 0x23312a3f, 0x9430c6a5, 0x66c035a2, 0xbc37744e, 0xcaa6fc82, 0xd0b0e090, 0xd81533a7, 0x984af104, 0xdaf741ec, 0x500e7fcd, 0xf62f1791, 0xd68d764d, 0xb04d43ef, 0x4d54ccaa, 0x04dfe496, 0xb5e39ed1, 0x881b4c6a, 0x1fb8c12c, 0x517f4665, 0xea049d5e, 0x355d018c, 0x7473fa87, 0x412efb0b, 0x1d5ab367, 0xd25292db, 0x5633e910, 0x47136dd6, 0x618c9ad7, 0x0c7a37a1, 0x148e59f8, 0x3c89eb13, 0x27eecea9, 0xc935b761, 0xe5ede11c, 0xb13c7a47, 0xdf599cd2, 0x733f55f2, 0xce791814, 0x37bf73c7, 0xcdea53f7, 0xaa5b5ffd, 0x6f14df3d, 0xdb867844, 0xf381caaf, 0xc43eb968, 0x342c3824, 0x405fc2a3, 0xc372161d, 0x250cbce2, 0x498b283c, 0x9541ff0d, 0x017139a8, 0xb3de080c, 0xe49cd8b4, 0xc1906456, 0x84617bcb, 0xb670d532, 0x5c74486c, 0x5742d0b8];\n    var T8 = [0xf4a75051, 0x4165537e, 0x17a4c31a, 0x275e963a, 0xab6bcb3b, 0x9d45f11f, 0xfa58abac, 0xe303934b, 0x30fa5520, 0x766df6ad, 0xcc769188, 0x024c25f5, 0xe5d7fc4f, 0x2acbd7c5, 0x35448026, 0x62a38fb5, 0xb15a49de, 0xba1b6725, 0xea0e9845, 0xfec0e15d, 0x2f7502c3, 0x4cf01281, 0x4697a38d, 0xd3f9c66b, 0x8f5fe703, 0x929c9515, 0x6d7aebbf, 0x5259da95, 0xbe832dd4, 0x7421d358, 0xe0692949, 0xc9c8448e, 0xc2896a75, 0x8e7978f4, 0x583e6b99, 0xb971dd27, 0xe14fb6be, 0x88ad17f0, 0x20ac66c9, 0xce3ab47d, 0xdf4a1863, 0x1a3182e5, 0x51336097, 0x537f4562, 0x6477e0b1, 0x6bae84bb, 0x81a01cfe, 0x082b94f9, 0x48685870, 0x45fd198f, 0xde6c8794, 0x7bf8b752, 0x73d323ab, 0x4b02e272, 0x1f8f57e3, 0x55ab2a66, 0xeb2807b2, 0xb5c2032f, 0xc57b9a86, 0x3708a5d3, 0x2887f230, 0xbfa5b223, 0x036aba02, 0x16825ced, 0xcf1c2b8a, 0x79b492a7, 0x07f2f0f3, 0x69e2a14e, 0xdaf4cd65, 0x05bed506, 0x34621fd1, 0xa6fe8ac4, 0x2e539d34, 0xf355a0a2, 0x8ae13205, 0xf6eb75a4, 0x83ec390b, 0x60efaa40, 0x719f065e, 0x6e1051bd, 0x218af93e, 0xdd063d96, 0x3e05aedd, 0xe6bd464d, 0x548db591, 0xc45d0571, 0x06d46f04, 0x5015ff60, 0x98fb2419, 0xbde997d6, 0x4043cc89, 0xd99e7767, 0xe842bdb0, 0x898b8807, 0x195b38e7, 0xc8eedb79, 0x7c0a47a1, 0x420fe97c, 0x841ec9f8, 0x00000000, 0x80868309, 0x2bed4832, 0x1170ac1e, 0x5a724e6c, 0x0efffbfd, 0x8538560f, 0xaed51e3d, 0x2d392736, 0x0fd9640a, 0x5ca62168, 0x5b54d19b, 0x362e3a24, 0x0a67b10c, 0x57e70f93, 0xee96d2b4, 0x9b919e1b, 0xc0c54f80, 0xdc20a261, 0x774b695a, 0x121a161c, 0x93ba0ae2, 0xa02ae5c0, 0x22e0433c, 0x1b171d12, 0x090d0b0e, 0x8bc7adf2, 0xb6a8b92d, 0x1ea9c814, 0xf1198557, 0x75074caf, 0x99ddbbee, 0x7f60fda3, 0x01269ff7, 0x72f5bc5c, 0x663bc544, 0xfb7e345b, 0x4329768b, 0x23c6dccb, 0xedfc68b6, 0xe4f163b8, 0x31dccad7, 0x63851042, 0x97224013, 0xc6112084, 0x4a247d85, 0xbb3df8d2, 0xf93211ae, 0x29a16dc7, 0x9e2f4b1d, 0xb230f3dc, 0x8652ec0d, 0xc1e3d077, 0xb3166c2b, 0x70b999a9, 0x9448fa11, 0xe9642247, 0xfc8cc4a8, 0xf03f1aa0, 0x7d2cd856, 0x3390ef22, 0x494ec787, 0x38d1c1d9, 0xcaa2fe8c, 0xd40b3698, 0xf581cfa6, 0x7ade28a5, 0xb78e26da, 0xadbfa43f, 0x3a9de42c, 0x78920d50, 0x5fcc9b6a, 0x7e466254, 0x8d13c2f6, 0xd8b8e890, 0x39f75e2e, 0xc3aff582, 0x5d80be9f, 0xd0937c69, 0xd52da96f, 0x2512b3cf, 0xac993bc8, 0x187da710, 0x9c636ee8, 0x3bbb7bdb, 0x267809cd, 0x5918f46e, 0x9ab701ec, 0x4f9aa883, 0x956e65e6, 0xffe67eaa, 0xbccf0821, 0x15e8e6ef, 0xe79bd9ba, 0x6f36ce4a, 0x9f09d4ea, 0xb07cd629, 0xa4b2af31, 0x3f23312a, 0xa59430c6, 0xa266c035, 0x4ebc3774, 0x82caa6fc, 0x90d0b0e0, 0xa7d81533, 0x04984af1, 0xecdaf741, 0xcd500e7f, 0x91f62f17, 0x4dd68d76, 0xefb04d43, 0xaa4d54cc, 0x9604dfe4, 0xd1b5e39e, 0x6a881b4c, 0x2c1fb8c1, 0x65517f46, 0x5eea049d, 0x8c355d01, 0x877473fa, 0x0b412efb, 0x671d5ab3, 0xdbd25292, 0x105633e9, 0xd647136d, 0xd7618c9a, 0xa10c7a37, 0xf8148e59, 0x133c89eb, 0xa927eece, 0x61c935b7, 0x1ce5ede1, 0x47b13c7a, 0xd2df599c, 0xf2733f55, 0x14ce7918, 0xc737bf73, 0xf7cdea53, 0xfdaa5b5f, 0x3d6f14df, 0x44db8678, 0xaff381ca, 0x68c43eb9, 0x24342c38, 0xa3405fc2, 0x1dc37216, 0xe2250cbc, 0x3c498b28, 0x0d9541ff, 0xa8017139, 0x0cb3de08, 0xb4e49cd8, 0x56c19064, 0xcb84617b, 0x32b670d5, 0x6c5c7448, 0xb85742d0];\n\n    // Transformations for decryption key expansion\n    var U1 = [0x00000000, 0x0e090d0b, 0x1c121a16, 0x121b171d, 0x3824342c, 0x362d3927, 0x24362e3a, 0x2a3f2331, 0x70486858, 0x7e416553, 0x6c5a724e, 0x62537f45, 0x486c5c74, 0x4665517f, 0x547e4662, 0x5a774b69, 0xe090d0b0, 0xee99ddbb, 0xfc82caa6, 0xf28bc7ad, 0xd8b4e49c, 0xd6bde997, 0xc4a6fe8a, 0xcaaff381, 0x90d8b8e8, 0x9ed1b5e3, 0x8ccaa2fe, 0x82c3aff5, 0xa8fc8cc4, 0xa6f581cf, 0xb4ee96d2, 0xbae79bd9, 0xdb3bbb7b, 0xd532b670, 0xc729a16d, 0xc920ac66, 0xe31f8f57, 0xed16825c, 0xff0d9541, 0xf104984a, 0xab73d323, 0xa57ade28, 0xb761c935, 0xb968c43e, 0x9357e70f, 0x9d5eea04, 0x8f45fd19, 0x814cf012, 0x3bab6bcb, 0x35a266c0, 0x27b971dd, 0x29b07cd6, 0x038f5fe7, 0x0d8652ec, 0x1f9d45f1, 0x119448fa, 0x4be30393, 0x45ea0e98, 0x57f11985, 0x59f8148e, 0x73c737bf, 0x7dce3ab4, 0x6fd52da9, 0x61dc20a2, 0xad766df6, 0xa37f60fd, 0xb16477e0, 0xbf6d7aeb, 0x955259da, 0x9b5b54d1, 0x894043cc, 0x87494ec7, 0xdd3e05ae, 0xd33708a5, 0xc12c1fb8, 0xcf2512b3, 0xe51a3182, 0xeb133c89, 0xf9082b94, 0xf701269f, 0x4de6bd46, 0x43efb04d, 0x51f4a750, 0x5ffdaa5b, 0x75c2896a, 0x7bcb8461, 0x69d0937c, 0x67d99e77, 0x3daed51e, 0x33a7d815, 0x21bccf08, 0x2fb5c203, 0x058ae132, 0x0b83ec39, 0x1998fb24, 0x1791f62f, 0x764dd68d, 0x7844db86, 0x6a5fcc9b, 0x6456c190, 0x4e69e2a1, 0x4060efaa, 0x527bf8b7, 0x5c72f5bc, 0x0605bed5, 0x080cb3de, 0x1a17a4c3, 0x141ea9c8, 0x3e218af9, 0x302887f2, 0x223390ef, 0x2c3a9de4, 0x96dd063d, 0x98d40b36, 0x8acf1c2b, 0x84c61120, 0xaef93211, 0xa0f03f1a, 0xb2eb2807, 0xbce2250c, 0xe6956e65, 0xe89c636e, 0xfa877473, 0xf48e7978, 0xdeb15a49, 0xd0b85742, 0xc2a3405f, 0xccaa4d54, 0x41ecdaf7, 0x4fe5d7fc, 0x5dfec0e1, 0x53f7cdea, 0x79c8eedb, 0x77c1e3d0, 0x65daf4cd, 0x6bd3f9c6, 0x31a4b2af, 0x3fadbfa4, 0x2db6a8b9, 0x23bfa5b2, 0x09808683, 0x07898b88, 0x15929c95, 0x1b9b919e, 0xa17c0a47, 0xaf75074c, 0xbd6e1051, 0xb3671d5a, 0x99583e6b, 0x97513360, 0x854a247d, 0x8b432976, 0xd134621f, 0xdf3d6f14, 0xcd267809, 0xc32f7502, 0xe9105633, 0xe7195b38, 0xf5024c25, 0xfb0b412e, 0x9ad7618c, 0x94de6c87, 0x86c57b9a, 0x88cc7691, 0xa2f355a0, 0xacfa58ab, 0xbee14fb6, 0xb0e842bd, 0xea9f09d4, 0xe49604df, 0xf68d13c2, 0xf8841ec9, 0xd2bb3df8, 0xdcb230f3, 0xcea927ee, 0xc0a02ae5, 0x7a47b13c, 0x744ebc37, 0x6655ab2a, 0x685ca621, 0x42638510, 0x4c6a881b, 0x5e719f06, 0x5078920d, 0x0a0fd964, 0x0406d46f, 0x161dc372, 0x1814ce79, 0x322bed48, 0x3c22e043, 0x2e39f75e, 0x2030fa55, 0xec9ab701, 0xe293ba0a, 0xf088ad17, 0xfe81a01c, 0xd4be832d, 0xdab78e26, 0xc8ac993b, 0xc6a59430, 0x9cd2df59, 0x92dbd252, 0x80c0c54f, 0x8ec9c844, 0xa4f6eb75, 0xaaffe67e, 0xb8e4f163, 0xb6edfc68, 0x0c0a67b1, 0x02036aba, 0x10187da7, 0x1e1170ac, 0x342e539d, 0x3a275e96, 0x283c498b, 0x26354480, 0x7c420fe9, 0x724b02e2, 0x605015ff, 0x6e5918f4, 0x44663bc5, 0x4a6f36ce, 0x587421d3, 0x567d2cd8, 0x37a10c7a, 0x39a80171, 0x2bb3166c, 0x25ba1b67, 0x0f853856, 0x018c355d, 0x13972240, 0x1d9e2f4b, 0x47e96422, 0x49e06929, 0x5bfb7e34, 0x55f2733f, 0x7fcd500e, 0x71c45d05, 0x63df4a18, 0x6dd64713, 0xd731dcca, 0xd938d1c1, 0xcb23c6dc, 0xc52acbd7, 0xef15e8e6, 0xe11ce5ed, 0xf307f2f0, 0xfd0efffb, 0xa779b492, 0xa970b999, 0xbb6bae84, 0xb562a38f, 0x9f5d80be, 0x91548db5, 0x834f9aa8, 0x8d4697a3];\n    var U2 = [0x00000000, 0x0b0e090d, 0x161c121a, 0x1d121b17, 0x2c382434, 0x27362d39, 0x3a24362e, 0x312a3f23, 0x58704868, 0x537e4165, 0x4e6c5a72, 0x4562537f, 0x74486c5c, 0x7f466551, 0x62547e46, 0x695a774b, 0xb0e090d0, 0xbbee99dd, 0xa6fc82ca, 0xadf28bc7, 0x9cd8b4e4, 0x97d6bde9, 0x8ac4a6fe, 0x81caaff3, 0xe890d8b8, 0xe39ed1b5, 0xfe8ccaa2, 0xf582c3af, 0xc4a8fc8c, 0xcfa6f581, 0xd2b4ee96, 0xd9bae79b, 0x7bdb3bbb, 0x70d532b6, 0x6dc729a1, 0x66c920ac, 0x57e31f8f, 0x5ced1682, 0x41ff0d95, 0x4af10498, 0x23ab73d3, 0x28a57ade, 0x35b761c9, 0x3eb968c4, 0x0f9357e7, 0x049d5eea, 0x198f45fd, 0x12814cf0, 0xcb3bab6b, 0xc035a266, 0xdd27b971, 0xd629b07c, 0xe7038f5f, 0xec0d8652, 0xf11f9d45, 0xfa119448, 0x934be303, 0x9845ea0e, 0x8557f119, 0x8e59f814, 0xbf73c737, 0xb47dce3a, 0xa96fd52d, 0xa261dc20, 0xf6ad766d, 0xfda37f60, 0xe0b16477, 0xebbf6d7a, 0xda955259, 0xd19b5b54, 0xcc894043, 0xc787494e, 0xaedd3e05, 0xa5d33708, 0xb8c12c1f, 0xb3cf2512, 0x82e51a31, 0x89eb133c, 0x94f9082b, 0x9ff70126, 0x464de6bd, 0x4d43efb0, 0x5051f4a7, 0x5b5ffdaa, 0x6a75c289, 0x617bcb84, 0x7c69d093, 0x7767d99e, 0x1e3daed5, 0x1533a7d8, 0x0821bccf, 0x032fb5c2, 0x32058ae1, 0x390b83ec, 0x241998fb, 0x2f1791f6, 0x8d764dd6, 0x867844db, 0x9b6a5fcc, 0x906456c1, 0xa14e69e2, 0xaa4060ef, 0xb7527bf8, 0xbc5c72f5, 0xd50605be, 0xde080cb3, 0xc31a17a4, 0xc8141ea9, 0xf93e218a, 0xf2302887, 0xef223390, 0xe42c3a9d, 0x3d96dd06, 0x3698d40b, 0x2b8acf1c, 0x2084c611, 0x11aef932, 0x1aa0f03f, 0x07b2eb28, 0x0cbce225, 0x65e6956e, 0x6ee89c63, 0x73fa8774, 0x78f48e79, 0x49deb15a, 0x42d0b857, 0x5fc2a340, 0x54ccaa4d, 0xf741ecda, 0xfc4fe5d7, 0xe15dfec0, 0xea53f7cd, 0xdb79c8ee, 0xd077c1e3, 0xcd65daf4, 0xc66bd3f9, 0xaf31a4b2, 0xa43fadbf, 0xb92db6a8, 0xb223bfa5, 0x83098086, 0x8807898b, 0x9515929c, 0x9e1b9b91, 0x47a17c0a, 0x4caf7507, 0x51bd6e10, 0x5ab3671d, 0x6b99583e, 0x60975133, 0x7d854a24, 0x768b4329, 0x1fd13462, 0x14df3d6f, 0x09cd2678, 0x02c32f75, 0x33e91056, 0x38e7195b, 0x25f5024c, 0x2efb0b41, 0x8c9ad761, 0x8794de6c, 0x9a86c57b, 0x9188cc76, 0xa0a2f355, 0xabacfa58, 0xb6bee14f, 0xbdb0e842, 0xd4ea9f09, 0xdfe49604, 0xc2f68d13, 0xc9f8841e, 0xf8d2bb3d, 0xf3dcb230, 0xeecea927, 0xe5c0a02a, 0x3c7a47b1, 0x37744ebc, 0x2a6655ab, 0x21685ca6, 0x10426385, 0x1b4c6a88, 0x065e719f, 0x0d507892, 0x640a0fd9, 0x6f0406d4, 0x72161dc3, 0x791814ce, 0x48322bed, 0x433c22e0, 0x5e2e39f7, 0x552030fa, 0x01ec9ab7, 0x0ae293ba, 0x17f088ad, 0x1cfe81a0, 0x2dd4be83, 0x26dab78e, 0x3bc8ac99, 0x30c6a594, 0x599cd2df, 0x5292dbd2, 0x4f80c0c5, 0x448ec9c8, 0x75a4f6eb, 0x7eaaffe6, 0x63b8e4f1, 0x68b6edfc, 0xb10c0a67, 0xba02036a, 0xa710187d, 0xac1e1170, 0x9d342e53, 0x963a275e, 0x8b283c49, 0x80263544, 0xe97c420f, 0xe2724b02, 0xff605015, 0xf46e5918, 0xc544663b, 0xce4a6f36, 0xd3587421, 0xd8567d2c, 0x7a37a10c, 0x7139a801, 0x6c2bb316, 0x6725ba1b, 0x560f8538, 0x5d018c35, 0x40139722, 0x4b1d9e2f, 0x2247e964, 0x2949e069, 0x345bfb7e, 0x3f55f273, 0x0e7fcd50, 0x0571c45d, 0x1863df4a, 0x136dd647, 0xcad731dc, 0xc1d938d1, 0xdccb23c6, 0xd7c52acb, 0xe6ef15e8, 0xede11ce5, 0xf0f307f2, 0xfbfd0eff, 0x92a779b4, 0x99a970b9, 0x84bb6bae, 0x8fb562a3, 0xbe9f5d80, 0xb591548d, 0xa8834f9a, 0xa38d4697];\n    var U3 = [0x00000000, 0x0d0b0e09, 0x1a161c12, 0x171d121b, 0x342c3824, 0x3927362d, 0x2e3a2436, 0x23312a3f, 0x68587048, 0x65537e41, 0x724e6c5a, 0x7f456253, 0x5c74486c, 0x517f4665, 0x4662547e, 0x4b695a77, 0xd0b0e090, 0xddbbee99, 0xcaa6fc82, 0xc7adf28b, 0xe49cd8b4, 0xe997d6bd, 0xfe8ac4a6, 0xf381caaf, 0xb8e890d8, 0xb5e39ed1, 0xa2fe8cca, 0xaff582c3, 0x8cc4a8fc, 0x81cfa6f5, 0x96d2b4ee, 0x9bd9bae7, 0xbb7bdb3b, 0xb670d532, 0xa16dc729, 0xac66c920, 0x8f57e31f, 0x825ced16, 0x9541ff0d, 0x984af104, 0xd323ab73, 0xde28a57a, 0xc935b761, 0xc43eb968, 0xe70f9357, 0xea049d5e, 0xfd198f45, 0xf012814c, 0x6bcb3bab, 0x66c035a2, 0x71dd27b9, 0x7cd629b0, 0x5fe7038f, 0x52ec0d86, 0x45f11f9d, 0x48fa1194, 0x03934be3, 0x0e9845ea, 0x198557f1, 0x148e59f8, 0x37bf73c7, 0x3ab47dce, 0x2da96fd5, 0x20a261dc, 0x6df6ad76, 0x60fda37f, 0x77e0b164, 0x7aebbf6d, 0x59da9552, 0x54d19b5b, 0x43cc8940, 0x4ec78749, 0x05aedd3e, 0x08a5d337, 0x1fb8c12c, 0x12b3cf25, 0x3182e51a, 0x3c89eb13, 0x2b94f908, 0x269ff701, 0xbd464de6, 0xb04d43ef, 0xa75051f4, 0xaa5b5ffd, 0x896a75c2, 0x84617bcb, 0x937c69d0, 0x9e7767d9, 0xd51e3dae, 0xd81533a7, 0xcf0821bc, 0xc2032fb5, 0xe132058a, 0xec390b83, 0xfb241998, 0xf62f1791, 0xd68d764d, 0xdb867844, 0xcc9b6a5f, 0xc1906456, 0xe2a14e69, 0xefaa4060, 0xf8b7527b, 0xf5bc5c72, 0xbed50605, 0xb3de080c, 0xa4c31a17, 0xa9c8141e, 0x8af93e21, 0x87f23028, 0x90ef2233, 0x9de42c3a, 0x063d96dd, 0x0b3698d4, 0x1c2b8acf, 0x112084c6, 0x3211aef9, 0x3f1aa0f0, 0x2807b2eb, 0x250cbce2, 0x6e65e695, 0x636ee89c, 0x7473fa87, 0x7978f48e, 0x5a49deb1, 0x5742d0b8, 0x405fc2a3, 0x4d54ccaa, 0xdaf741ec, 0xd7fc4fe5, 0xc0e15dfe, 0xcdea53f7, 0xeedb79c8, 0xe3d077c1, 0xf4cd65da, 0xf9c66bd3, 0xb2af31a4, 0xbfa43fad, 0xa8b92db6, 0xa5b223bf, 0x86830980, 0x8b880789, 0x9c951592, 0x919e1b9b, 0x0a47a17c, 0x074caf75, 0x1051bd6e, 0x1d5ab367, 0x3e6b9958, 0x33609751, 0x247d854a, 0x29768b43, 0x621fd134, 0x6f14df3d, 0x7809cd26, 0x7502c32f, 0x5633e910, 0x5b38e719, 0x4c25f502, 0x412efb0b, 0x618c9ad7, 0x6c8794de, 0x7b9a86c5, 0x769188cc, 0x55a0a2f3, 0x58abacfa, 0x4fb6bee1, 0x42bdb0e8, 0x09d4ea9f, 0x04dfe496, 0x13c2f68d, 0x1ec9f884, 0x3df8d2bb, 0x30f3dcb2, 0x27eecea9, 0x2ae5c0a0, 0xb13c7a47, 0xbc37744e, 0xab2a6655, 0xa621685c, 0x85104263, 0x881b4c6a, 0x9f065e71, 0x920d5078, 0xd9640a0f, 0xd46f0406, 0xc372161d, 0xce791814, 0xed48322b, 0xe0433c22, 0xf75e2e39, 0xfa552030, 0xb701ec9a, 0xba0ae293, 0xad17f088, 0xa01cfe81, 0x832dd4be, 0x8e26dab7, 0x993bc8ac, 0x9430c6a5, 0xdf599cd2, 0xd25292db, 0xc54f80c0, 0xc8448ec9, 0xeb75a4f6, 0xe67eaaff, 0xf163b8e4, 0xfc68b6ed, 0x67b10c0a, 0x6aba0203, 0x7da71018, 0x70ac1e11, 0x539d342e, 0x5e963a27, 0x498b283c, 0x44802635, 0x0fe97c42, 0x02e2724b, 0x15ff6050, 0x18f46e59, 0x3bc54466, 0x36ce4a6f, 0x21d35874, 0x2cd8567d, 0x0c7a37a1, 0x017139a8, 0x166c2bb3, 0x1b6725ba, 0x38560f85, 0x355d018c, 0x22401397, 0x2f4b1d9e, 0x642247e9, 0x692949e0, 0x7e345bfb, 0x733f55f2, 0x500e7fcd, 0x5d0571c4, 0x4a1863df, 0x47136dd6, 0xdccad731, 0xd1c1d938, 0xc6dccb23, 0xcbd7c52a, 0xe8e6ef15, 0xe5ede11c, 0xf2f0f307, 0xfffbfd0e, 0xb492a779, 0xb999a970, 0xae84bb6b, 0xa38fb562, 0x80be9f5d, 0x8db59154, 0x9aa8834f, 0x97a38d46];\n    var U4 = [0x00000000, 0x090d0b0e, 0x121a161c, 0x1b171d12, 0x24342c38, 0x2d392736, 0x362e3a24, 0x3f23312a, 0x48685870, 0x4165537e, 0x5a724e6c, 0x537f4562, 0x6c5c7448, 0x65517f46, 0x7e466254, 0x774b695a, 0x90d0b0e0, 0x99ddbbee, 0x82caa6fc, 0x8bc7adf2, 0xb4e49cd8, 0xbde997d6, 0xa6fe8ac4, 0xaff381ca, 0xd8b8e890, 0xd1b5e39e, 0xcaa2fe8c, 0xc3aff582, 0xfc8cc4a8, 0xf581cfa6, 0xee96d2b4, 0xe79bd9ba, 0x3bbb7bdb, 0x32b670d5, 0x29a16dc7, 0x20ac66c9, 0x1f8f57e3, 0x16825ced, 0x0d9541ff, 0x04984af1, 0x73d323ab, 0x7ade28a5, 0x61c935b7, 0x68c43eb9, 0x57e70f93, 0x5eea049d, 0x45fd198f, 0x4cf01281, 0xab6bcb3b, 0xa266c035, 0xb971dd27, 0xb07cd629, 0x8f5fe703, 0x8652ec0d, 0x9d45f11f, 0x9448fa11, 0xe303934b, 0xea0e9845, 0xf1198557, 0xf8148e59, 0xc737bf73, 0xce3ab47d, 0xd52da96f, 0xdc20a261, 0x766df6ad, 0x7f60fda3, 0x6477e0b1, 0x6d7aebbf, 0x5259da95, 0x5b54d19b, 0x4043cc89, 0x494ec787, 0x3e05aedd, 0x3708a5d3, 0x2c1fb8c1, 0x2512b3cf, 0x1a3182e5, 0x133c89eb, 0x082b94f9, 0x01269ff7, 0xe6bd464d, 0xefb04d43, 0xf4a75051, 0xfdaa5b5f, 0xc2896a75, 0xcb84617b, 0xd0937c69, 0xd99e7767, 0xaed51e3d, 0xa7d81533, 0xbccf0821, 0xb5c2032f, 0x8ae13205, 0x83ec390b, 0x98fb2419, 0x91f62f17, 0x4dd68d76, 0x44db8678, 0x5fcc9b6a, 0x56c19064, 0x69e2a14e, 0x60efaa40, 0x7bf8b752, 0x72f5bc5c, 0x05bed506, 0x0cb3de08, 0x17a4c31a, 0x1ea9c814, 0x218af93e, 0x2887f230, 0x3390ef22, 0x3a9de42c, 0xdd063d96, 0xd40b3698, 0xcf1c2b8a, 0xc6112084, 0xf93211ae, 0xf03f1aa0, 0xeb2807b2, 0xe2250cbc, 0x956e65e6, 0x9c636ee8, 0x877473fa, 0x8e7978f4, 0xb15a49de, 0xb85742d0, 0xa3405fc2, 0xaa4d54cc, 0xecdaf741, 0xe5d7fc4f, 0xfec0e15d, 0xf7cdea53, 0xc8eedb79, 0xc1e3d077, 0xdaf4cd65, 0xd3f9c66b, 0xa4b2af31, 0xadbfa43f, 0xb6a8b92d, 0xbfa5b223, 0x80868309, 0x898b8807, 0x929c9515, 0x9b919e1b, 0x7c0a47a1, 0x75074caf, 0x6e1051bd, 0x671d5ab3, 0x583e6b99, 0x51336097, 0x4a247d85, 0x4329768b, 0x34621fd1, 0x3d6f14df, 0x267809cd, 0x2f7502c3, 0x105633e9, 0x195b38e7, 0x024c25f5, 0x0b412efb, 0xd7618c9a, 0xde6c8794, 0xc57b9a86, 0xcc769188, 0xf355a0a2, 0xfa58abac, 0xe14fb6be, 0xe842bdb0, 0x9f09d4ea, 0x9604dfe4, 0x8d13c2f6, 0x841ec9f8, 0xbb3df8d2, 0xb230f3dc, 0xa927eece, 0xa02ae5c0, 0x47b13c7a, 0x4ebc3774, 0x55ab2a66, 0x5ca62168, 0x63851042, 0x6a881b4c, 0x719f065e, 0x78920d50, 0x0fd9640a, 0x06d46f04, 0x1dc37216, 0x14ce7918, 0x2bed4832, 0x22e0433c, 0x39f75e2e, 0x30fa5520, 0x9ab701ec, 0x93ba0ae2, 0x88ad17f0, 0x81a01cfe, 0xbe832dd4, 0xb78e26da, 0xac993bc8, 0xa59430c6, 0xd2df599c, 0xdbd25292, 0xc0c54f80, 0xc9c8448e, 0xf6eb75a4, 0xffe67eaa, 0xe4f163b8, 0xedfc68b6, 0x0a67b10c, 0x036aba02, 0x187da710, 0x1170ac1e, 0x2e539d34, 0x275e963a, 0x3c498b28, 0x35448026, 0x420fe97c, 0x4b02e272, 0x5015ff60, 0x5918f46e, 0x663bc544, 0x6f36ce4a, 0x7421d358, 0x7d2cd856, 0xa10c7a37, 0xa8017139, 0xb3166c2b, 0xba1b6725, 0x8538560f, 0x8c355d01, 0x97224013, 0x9e2f4b1d, 0xe9642247, 0xe0692949, 0xfb7e345b, 0xf2733f55, 0xcd500e7f, 0xc45d0571, 0xdf4a1863, 0xd647136d, 0x31dccad7, 0x38d1c1d9, 0x23c6dccb, 0x2acbd7c5, 0x15e8e6ef, 0x1ce5ede1, 0x07f2f0f3, 0x0efffbfd, 0x79b492a7, 0x70b999a9, 0x6bae84bb, 0x62a38fb5, 0x5d80be9f, 0x548db591, 0x4f9aa883, 0x4697a38d];\n\n    function convertToInt32(bytes) {\n        var result = [];\n        for (var i = 0; i < bytes.length; i += 4) {\n            result.push(\n                (bytes[i    ] << 24) |\n                (bytes[i + 1] << 16) |\n                (bytes[i + 2] <<  8) |\n                 bytes[i + 3]\n            );\n        }\n        return result;\n    }\n\n    var AES = function(key) {\n        if (!(this instanceof AES)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        Object.defineProperty(this, 'key', {\n            value: coerceArray(key, true)\n        });\n\n        this._prepare();\n    }\n\n\n    AES.prototype._prepare = function() {\n\n        var rounds = numberOfRounds[this.key.length];\n        if (rounds == null) {\n            throw new Error('invalid key size (must be 16, 24 or 32 bytes)');\n        }\n\n        // encryption round keys\n        this._Ke = [];\n\n        // decryption round keys\n        this._Kd = [];\n\n        for (var i = 0; i <= rounds; i++) {\n            this._Ke.push([0, 0, 0, 0]);\n            this._Kd.push([0, 0, 0, 0]);\n        }\n\n        var roundKeyCount = (rounds + 1) * 4;\n        var KC = this.key.length / 4;\n\n        // convert the key into ints\n        var tk = convertToInt32(this.key);\n\n        // copy values into round key arrays\n        var index;\n        for (var i = 0; i < KC; i++) {\n            index = i >> 2;\n            this._Ke[index][i % 4] = tk[i];\n            this._Kd[rounds - index][i % 4] = tk[i];\n        }\n\n        // key expansion (fips-197 section 5.2)\n        var rconpointer = 0;\n        var t = KC, tt;\n        while (t < roundKeyCount) {\n            tt = tk[KC - 1];\n            tk[0] ^= ((S[(tt >> 16) & 0xFF] << 24) ^\n                      (S[(tt >>  8) & 0xFF] << 16) ^\n                      (S[ tt        & 0xFF] <<  8) ^\n                       S[(tt >> 24) & 0xFF]        ^\n                      (rcon[rconpointer] << 24));\n            rconpointer += 1;\n\n            // key expansion (for non-256 bit)\n            if (KC != 8) {\n                for (var i = 1; i < KC; i++) {\n                    tk[i] ^= tk[i - 1];\n                }\n\n            // key expansion for 256-bit keys is \"slightly different\" (fips-197)\n            } else {\n                for (var i = 1; i < (KC / 2); i++) {\n                    tk[i] ^= tk[i - 1];\n                }\n                tt = tk[(KC / 2) - 1];\n\n                tk[KC / 2] ^= (S[ tt        & 0xFF]        ^\n                              (S[(tt >>  8) & 0xFF] <<  8) ^\n                              (S[(tt >> 16) & 0xFF] << 16) ^\n                              (S[(tt >> 24) & 0xFF] << 24));\n\n                for (var i = (KC / 2) + 1; i < KC; i++) {\n                    tk[i] ^= tk[i - 1];\n                }\n            }\n\n            // copy values into round key arrays\n            var i = 0, r, c;\n            while (i < KC && t < roundKeyCount) {\n                r = t >> 2;\n                c = t % 4;\n                this._Ke[r][c] = tk[i];\n                this._Kd[rounds - r][c] = tk[i++];\n                t++;\n            }\n        }\n\n        // inverse-cipher-ify the decryption round key (fips-197 section 5.3)\n        for (var r = 1; r < rounds; r++) {\n            for (var c = 0; c < 4; c++) {\n                tt = this._Kd[r][c];\n                this._Kd[r][c] = (U1[(tt >> 24) & 0xFF] ^\n                                  U2[(tt >> 16) & 0xFF] ^\n                                  U3[(tt >>  8) & 0xFF] ^\n                                  U4[ tt        & 0xFF]);\n            }\n        }\n    }\n\n    AES.prototype.encrypt = function(plaintext) {\n        if (plaintext.length != 16) {\n            throw new Error('invalid plaintext size (must be 16 bytes)');\n        }\n\n        var rounds = this._Ke.length - 1;\n        var a = [0, 0, 0, 0];\n\n        // convert plaintext to (ints ^ key)\n        var t = convertToInt32(plaintext);\n        for (var i = 0; i < 4; i++) {\n            t[i] ^= this._Ke[0][i];\n        }\n\n        // apply round transforms\n        for (var r = 1; r < rounds; r++) {\n            for (var i = 0; i < 4; i++) {\n                a[i] = (T1[(t[ i         ] >> 24) & 0xff] ^\n                        T2[(t[(i + 1) % 4] >> 16) & 0xff] ^\n                        T3[(t[(i + 2) % 4] >>  8) & 0xff] ^\n                        T4[ t[(i + 3) % 4]        & 0xff] ^\n                        this._Ke[r][i]);\n            }\n            t = a.slice();\n        }\n\n        // the last round is special\n        var result = createArray(16), tt;\n        for (var i = 0; i < 4; i++) {\n            tt = this._Ke[rounds][i];\n            result[4 * i    ] = (S[(t[ i         ] >> 24) & 0xff] ^ (tt >> 24)) & 0xff;\n            result[4 * i + 1] = (S[(t[(i + 1) % 4] >> 16) & 0xff] ^ (tt >> 16)) & 0xff;\n            result[4 * i + 2] = (S[(t[(i + 2) % 4] >>  8) & 0xff] ^ (tt >>  8)) & 0xff;\n            result[4 * i + 3] = (S[ t[(i + 3) % 4]        & 0xff] ^  tt       ) & 0xff;\n        }\n\n        return result;\n    }\n\n    AES.prototype.decrypt = function(ciphertext) {\n        if (ciphertext.length != 16) {\n            throw new Error('invalid ciphertext size (must be 16 bytes)');\n        }\n\n        var rounds = this._Kd.length - 1;\n        var a = [0, 0, 0, 0];\n\n        // convert plaintext to (ints ^ key)\n        var t = convertToInt32(ciphertext);\n        for (var i = 0; i < 4; i++) {\n            t[i] ^= this._Kd[0][i];\n        }\n\n        // apply round transforms\n        for (var r = 1; r < rounds; r++) {\n            for (var i = 0; i < 4; i++) {\n                a[i] = (T5[(t[ i          ] >> 24) & 0xff] ^\n                        T6[(t[(i + 3) % 4] >> 16) & 0xff] ^\n                        T7[(t[(i + 2) % 4] >>  8) & 0xff] ^\n                        T8[ t[(i + 1) % 4]        & 0xff] ^\n                        this._Kd[r][i]);\n            }\n            t = a.slice();\n        }\n\n        // the last round is special\n        var result = createArray(16), tt;\n        for (var i = 0; i < 4; i++) {\n            tt = this._Kd[rounds][i];\n            result[4 * i    ] = (Si[(t[ i         ] >> 24) & 0xff] ^ (tt >> 24)) & 0xff;\n            result[4 * i + 1] = (Si[(t[(i + 3) % 4] >> 16) & 0xff] ^ (tt >> 16)) & 0xff;\n            result[4 * i + 2] = (Si[(t[(i + 2) % 4] >>  8) & 0xff] ^ (tt >>  8)) & 0xff;\n            result[4 * i + 3] = (Si[ t[(i + 1) % 4]        & 0xff] ^  tt       ) & 0xff;\n        }\n\n        return result;\n    }\n\n\n    /**\n     *  Mode Of Operation - Electonic Codebook (ECB)\n     */\n    var ModeOfOperationECB = function(key) {\n        if (!(this instanceof ModeOfOperationECB)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Electronic Code Block\";\n        this.name = \"ecb\";\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationECB.prototype.encrypt = function(plaintext) {\n        plaintext = coerceArray(plaintext);\n\n        if ((plaintext.length % 16) !== 0) {\n            throw new Error('invalid plaintext size (must be multiple of 16 bytes)');\n        }\n\n        var ciphertext = createArray(plaintext.length);\n        var block = createArray(16);\n\n        for (var i = 0; i < plaintext.length; i += 16) {\n            copyArray(plaintext, block, 0, i, i + 16);\n            block = this._aes.encrypt(block);\n            copyArray(block, ciphertext, i);\n        }\n\n        return ciphertext;\n    }\n\n    ModeOfOperationECB.prototype.decrypt = function(ciphertext) {\n        ciphertext = coerceArray(ciphertext);\n\n        if ((ciphertext.length % 16) !== 0) {\n            throw new Error('invalid ciphertext size (must be multiple of 16 bytes)');\n        }\n\n        var plaintext = createArray(ciphertext.length);\n        var block = createArray(16);\n\n        for (var i = 0; i < ciphertext.length; i += 16) {\n            copyArray(ciphertext, block, 0, i, i + 16);\n            block = this._aes.decrypt(block);\n            copyArray(block, plaintext, i);\n        }\n\n        return plaintext;\n    }\n\n\n    /**\n     *  Mode Of Operation - Cipher Block Chaining (CBC)\n     */\n    var ModeOfOperationCBC = function(key, iv) {\n        if (!(this instanceof ModeOfOperationCBC)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Cipher Block Chaining\";\n        this.name = \"cbc\";\n\n        if (!iv) {\n            iv = createArray(16);\n\n        } else if (iv.length != 16) {\n            throw new Error('invalid initialation vector size (must be 16 bytes)');\n        }\n\n        this._lastCipherblock = coerceArray(iv, true);\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationCBC.prototype.encrypt = function(plaintext) {\n        plaintext = coerceArray(plaintext);\n\n        if ((plaintext.length % 16) !== 0) {\n            throw new Error('invalid plaintext size (must be multiple of 16 bytes)');\n        }\n\n        var ciphertext = createArray(plaintext.length);\n        var block = createArray(16);\n\n        for (var i = 0; i < plaintext.length; i += 16) {\n            copyArray(plaintext, block, 0, i, i + 16);\n\n            for (var j = 0; j < 16; j++) {\n                block[j] ^= this._lastCipherblock[j];\n            }\n\n            this._lastCipherblock = this._aes.encrypt(block);\n            copyArray(this._lastCipherblock, ciphertext, i);\n        }\n\n        return ciphertext;\n    }\n\n    ModeOfOperationCBC.prototype.decrypt = function(ciphertext) {\n        ciphertext = coerceArray(ciphertext);\n\n        if ((ciphertext.length % 16) !== 0) {\n            throw new Error('invalid ciphertext size (must be multiple of 16 bytes)');\n        }\n\n        var plaintext = createArray(ciphertext.length);\n        var block = createArray(16);\n\n        for (var i = 0; i < ciphertext.length; i += 16) {\n            copyArray(ciphertext, block, 0, i, i + 16);\n            block = this._aes.decrypt(block);\n\n            for (var j = 0; j < 16; j++) {\n                plaintext[i + j] = block[j] ^ this._lastCipherblock[j];\n            }\n\n            copyArray(ciphertext, this._lastCipherblock, 0, i, i + 16);\n        }\n\n        return plaintext;\n    }\n\n\n    /**\n     *  Mode Of Operation - Cipher Feedback (CFB)\n     */\n    var ModeOfOperationCFB = function(key, iv, segmentSize) {\n        if (!(this instanceof ModeOfOperationCFB)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Cipher Feedback\";\n        this.name = \"cfb\";\n\n        if (!iv) {\n            iv = createArray(16);\n\n        } else if (iv.length != 16) {\n            throw new Error('invalid initialation vector size (must be 16 size)');\n        }\n\n        if (!segmentSize) { segmentSize = 1; }\n\n        this.segmentSize = segmentSize;\n\n        this._shiftRegister = coerceArray(iv, true);\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationCFB.prototype.encrypt = function(plaintext) {\n        if ((plaintext.length % this.segmentSize) != 0) {\n            throw new Error('invalid plaintext size (must be segmentSize bytes)');\n        }\n\n        var encrypted = coerceArray(plaintext, true);\n\n        var xorSegment;\n        for (var i = 0; i < encrypted.length; i += this.segmentSize) {\n            xorSegment = this._aes.encrypt(this._shiftRegister);\n            for (var j = 0; j < this.segmentSize; j++) {\n                encrypted[i + j] ^= xorSegment[j];\n            }\n\n            // Shift the register\n            copyArray(this._shiftRegister, this._shiftRegister, 0, this.segmentSize);\n            copyArray(encrypted, this._shiftRegister, 16 - this.segmentSize, i, i + this.segmentSize);\n        }\n\n        return encrypted;\n    }\n\n    ModeOfOperationCFB.prototype.decrypt = function(ciphertext) {\n        if ((ciphertext.length % this.segmentSize) != 0) {\n            throw new Error('invalid ciphertext size (must be segmentSize bytes)');\n        }\n\n        var plaintext = coerceArray(ciphertext, true);\n\n        var xorSegment;\n        for (var i = 0; i < plaintext.length; i += this.segmentSize) {\n            xorSegment = this._aes.encrypt(this._shiftRegister);\n\n            for (var j = 0; j < this.segmentSize; j++) {\n                plaintext[i + j] ^= xorSegment[j];\n            }\n\n            // Shift the register\n            copyArray(this._shiftRegister, this._shiftRegister, 0, this.segmentSize);\n            copyArray(ciphertext, this._shiftRegister, 16 - this.segmentSize, i, i + this.segmentSize);\n        }\n\n        return plaintext;\n    }\n\n    /**\n     *  Mode Of Operation - Output Feedback (OFB)\n     */\n    var ModeOfOperationOFB = function(key, iv) {\n        if (!(this instanceof ModeOfOperationOFB)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Output Feedback\";\n        this.name = \"ofb\";\n\n        if (!iv) {\n            iv = createArray(16);\n\n        } else if (iv.length != 16) {\n            throw new Error('invalid initialation vector size (must be 16 bytes)');\n        }\n\n        this._lastPrecipher = coerceArray(iv, true);\n        this._lastPrecipherIndex = 16;\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationOFB.prototype.encrypt = function(plaintext) {\n        var encrypted = coerceArray(plaintext, true);\n\n        for (var i = 0; i < encrypted.length; i++) {\n            if (this._lastPrecipherIndex === 16) {\n                this._lastPrecipher = this._aes.encrypt(this._lastPrecipher);\n                this._lastPrecipherIndex = 0;\n            }\n            encrypted[i] ^= this._lastPrecipher[this._lastPrecipherIndex++];\n        }\n\n        return encrypted;\n    }\n\n    // Decryption is symetric\n    ModeOfOperationOFB.prototype.decrypt = ModeOfOperationOFB.prototype.encrypt;\n\n\n    /**\n     *  Counter object for CTR common mode of operation\n     */\n    var Counter = function(initialValue) {\n        if (!(this instanceof Counter)) {\n            throw Error('Counter must be instanitated with `new`');\n        }\n\n        // We allow 0, but anything false-ish uses the default 1\n        if (initialValue !== 0 && !initialValue) { initialValue = 1; }\n\n        if (typeof(initialValue) === 'number') {\n            this._counter = createArray(16);\n            this.setValue(initialValue);\n\n        } else {\n            this.setBytes(initialValue);\n        }\n    }\n\n    Counter.prototype.setValue = function(value) {\n        if (typeof(value) !== 'number' || parseInt(value) != value) {\n            throw new Error('invalid counter value (must be an integer)');\n        }\n\n        for (var index = 15; index >= 0; --index) {\n            this._counter[index] = value % 256;\n            value = value >> 8;\n        }\n    }\n\n    Counter.prototype.setBytes = function(bytes) {\n        bytes = coerceArray(bytes, true);\n\n        if (bytes.length != 16) {\n            throw new Error('invalid counter bytes size (must be 16 bytes)');\n        }\n\n        this._counter = bytes;\n    };\n\n    Counter.prototype.increment = function() {\n        for (var i = 15; i >= 0; i--) {\n            if (this._counter[i] === 255) {\n                this._counter[i] = 0;\n            } else {\n                this._counter[i]++;\n                break;\n            }\n        }\n    }\n\n\n    /**\n     *  Mode Of Operation - Counter (CTR)\n     */\n    var ModeOfOperationCTR = function(key, counter) {\n        if (!(this instanceof ModeOfOperationCTR)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Counter\";\n        this.name = \"ctr\";\n\n        if (!(counter instanceof Counter)) {\n            counter = new Counter(counter)\n        }\n\n        this._counter = counter;\n\n        this._remainingCounter = null;\n        this._remainingCounterIndex = 16;\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationCTR.prototype.encrypt = function(plaintext) {\n        var encrypted = coerceArray(plaintext, true);\n\n        for (var i = 0; i < encrypted.length; i++) {\n            if (this._remainingCounterIndex === 16) {\n                this._remainingCounter = this._aes.encrypt(this._counter._counter);\n                this._remainingCounterIndex = 0;\n                this._counter.increment();\n            }\n            encrypted[i] ^= this._remainingCounter[this._remainingCounterIndex++];\n        }\n\n        return encrypted;\n    }\n\n    // Decryption is symetric\n    ModeOfOperationCTR.prototype.decrypt = ModeOfOperationCTR.prototype.encrypt;\n\n\n    ///////////////////////\n    // Padding\n\n    // See:https://tools.ietf.org/html/rfc2315\n    function pkcs7pad(data) {\n        data = coerceArray(data, true);\n        var padder = 16 - (data.length % 16);\n        var result = createArray(data.length + padder);\n        copyArray(data, result);\n        for (var i = data.length; i < result.length; i++) {\n            result[i] = padder;\n        }\n        return result;\n    }\n\n    function pkcs7strip(data) {\n        data = coerceArray(data, true);\n        if (data.length < 16) { throw new Error('PKCS#7 invalid length'); }\n\n        var padder = data[data.length - 1];\n        if (padder > 16) { throw new Error('PKCS#7 padding byte out of range'); }\n\n        var length = data.length - padder;\n        for (var i = 0; i < padder; i++) {\n            if (data[length + i] !== padder) {\n                throw new Error('PKCS#7 invalid padding byte');\n            }\n        }\n\n        var result = createArray(length);\n        copyArray(data, result, 0, 0, length);\n        return result;\n    }\n\n    ///////////////////////\n    // Exporting\n\n\n    // The block cipher\n    var aesjs = {\n        AES: AES,\n        Counter: Counter,\n\n        ModeOfOperation: {\n            ecb: ModeOfOperationECB,\n            cbc: ModeOfOperationCBC,\n            cfb: ModeOfOperationCFB,\n            ofb: ModeOfOperationOFB,\n            ctr: ModeOfOperationCTR\n        },\n\n        utils: {\n            hex: convertHex,\n            utf8: convertUtf8\n        },\n\n        padding: {\n            pkcs7: {\n                pad: pkcs7pad,\n                strip: pkcs7strip\n            }\n        },\n\n        _arrayTest: {\n            coerceArray: coerceArray,\n            createArray: createArray,\n            copyArray: copyArray,\n        }\n    };\n\n\n    // node.js\n    if (typeof exports !== 'undefined') {\n        module.exports = aesjs\n\n    // RequireJS/AMD\n    // http://www.requirejs.org/docs/api.html\n    // https://github.com/amdjs/amdjs-api/wiki/AMD\n    } else if (typeof(define) === 'function' && define.amd) {\n        define(aesjs);\n\n    // Web Browsers\n    } else {\n\n        // If there was an existing library at \"aesjs\" make sure it's still available\n        if (root.aesjs) {\n            aesjs._aesjs = root.aesjs;\n        }\n\n        root.aesjs = aesjs;\n    }\n\n\n})(this);\n","\"use strict\";\n\nvar EC = require(\"elliptic\").ec;\n\nvar ec = new EC(\"secp256k1\");\nvar browserCrypto = global.crypto || global.msCrypto || {};\nvar subtle = browserCrypto.subtle || browserCrypto.webkitSubtle;\n\nvar nodeCrypto = require('crypto');\n\nconst EC_GROUP_ORDER = Buffer.from('fffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141', 'hex');\nconst ZERO32 = Buffer.alloc(32, 0);\n\nfunction assert(condition, message) {\n  if (!condition) {\n    throw new Error(message || \"Assertion failed\");\n  }\n}\n\nfunction isScalar (x) {\n  return Buffer.isBuffer(x) && x.length === 32;\n}\n\nfunction isValidPrivateKey(privateKey) {\n  if (!isScalar(privateKey))\n  {\n    return false;\n  }\n  return privateKey.compare(ZERO32) > 0 && // > 0\n  privateKey.compare(EC_GROUP_ORDER) < 0; // < G\n}\n\n// Compare two buffers in constant time to prevent timing attacks.\nfunction equalConstTime(b1, b2) {\n  if (b1.length !== b2.length) {\n    return false;\n  }\n  var res = 0;\n  for (var i = 0; i < b1.length; i++) {\n    res |= b1[i] ^ b2[i];  // jshint ignore:line\n  }\n  return res === 0;\n}\n\n/* This must check if we're in the browser or\nnot, since the functions are different and does\nnot convert using browserify */\nfunction randomBytes(size) {\n  var arr = new Uint8Array(size);\n  if (typeof browserCrypto.getRandomValues === 'undefined') {\n    return Buffer.from(nodeCrypto.randomBytes(size));\n  } else {\n    browserCrypto.getRandomValues(arr);\n  }\n  return Buffer.from(arr);\n}\n\nfunction sha512(msg) {\n  return new Promise(function(resolve) {\n    var hash = nodeCrypto.createHash('sha512');\n    var result = hash.update(msg).digest();\n    resolve(new Uint8Array(result));\n  });\n}\n\nfunction getAes(op) {\n  return function(iv, key, data) {\n    return new Promise(function(resolve) {\n      if (subtle) {\n        var importAlgorithm = {name: \"AES-CBC\"};\n        var keyp = subtle.importKey(\"raw\", key, importAlgorithm, false, [op]);\n        return keyp.then(function(cryptoKey) {\n          var encAlgorithm = {name: \"AES-CBC\", iv: iv};\n          return subtle[op](encAlgorithm, cryptoKey, data);\n        }).then(function(result) {\n          resolve(Buffer.from(new Uint8Array(result)));\n        });\n      } else {\n        if (op === 'encrypt') {\n          var cipher = nodeCrypto.createCipheriv('aes-256-cbc', key, iv);\n          let firstChunk = cipher.update(data);\n          let secondChunk = cipher.final();\n          resolve(Buffer.concat([firstChunk, secondChunk]));\n        }\n        else if (op === 'decrypt') {\n          var decipher = nodeCrypto.createDecipheriv('aes-256-cbc', key, iv);\n          let firstChunk = decipher.update(data);\n          let secondChunk = decipher.final();\n          resolve(Buffer.concat([firstChunk, secondChunk]));\n        }\n      }\n    });\n  };\n}\n\nvar aesCbcEncrypt = getAes(\"encrypt\");\nvar aesCbcDecrypt = getAes(\"decrypt\");\n\nfunction hmacSha256Sign(key, msg) {\n  return new Promise(function(resolve) {\n    var hmac = nodeCrypto.createHmac('sha256', Buffer.from(key));\n    hmac.update(msg);\n    var result = hmac.digest();\n    resolve(result);\n  });\n}\n\nfunction hmacSha256Verify(key, msg, sig) {\n  return new Promise(function(resolve) {\n    var hmac = nodeCrypto.createHmac('sha256', Buffer.from(key));\n    hmac.update(msg);\n    var expectedSig = hmac.digest();\n    resolve(equalConstTime(expectedSig, sig));\n  });\n}\n\n/**\n  * Generate a new valid private key. Will use the window.crypto or window.msCrypto as source\n  * depending on your browser.\n  * @return {Buffer} A 32-byte private key.\n  * @function\n  */\nexports.generatePrivate = function () {\n  var privateKey = randomBytes(32);\n  while (!isValidPrivateKey(privateKey)) {\n    privateKey = randomBytes(32);\n  }\n  return privateKey;\n};\n\nvar getPublic = exports.getPublic = function(privateKey) {\n  // This function has sync API so we throw an error immediately.\n  assert(privateKey.length === 32, \"Bad private key\");\n  assert(isValidPrivateKey(privateKey), \"Bad private key\");\n  // XXX(Kagami): `elliptic.utils.encode` returns array for every\n  // encoding except `hex`.\n  return Buffer.from(ec.keyFromPrivate(privateKey).getPublic(\"arr\"));\n};\n\n/**\n * Get compressed version of public key.\n */\nvar getPublicCompressed = exports.getPublicCompressed = function(privateKey) { // jshint ignore:line\n  assert(privateKey.length === 32, \"Bad private key\");\n  assert(isValidPrivateKey(privateKey), \"Bad private key\");\n  // See https://github.com/wanderer/secp256k1-node/issues/46\n  let compressed = true;\n  return Buffer.from(ec.keyFromPrivate(privateKey).getPublic(compressed, \"arr\"));\n};\n\n// NOTE(Kagami): We don't use promise shim in Browser implementation\n// because it's supported natively in new browsers (see\n// <http://caniuse.com/#feat=promises>) and we can use only new browsers\n// because of the WebCryptoAPI (see\n// <http://caniuse.com/#feat=cryptography>).\nexports.sign = function(privateKey, msg) {\n  return new Promise(function(resolve) {\n    assert(privateKey.length === 32, \"Bad private key\");\n    assert(isValidPrivateKey(privateKey), \"Bad private key\");\n    assert(msg.length > 0, \"Message should not be empty\");\n    assert(msg.length <= 32, \"Message is too long\");\n    resolve(Buffer.from(ec.sign(msg, privateKey, {canonical: true}).toDER()));\n  });\n};\n\nexports.verify = function(publicKey, msg, sig) {\n  return new Promise(function(resolve, reject) {\n    assert(publicKey.length === 65 || publicKey.length === 33, \"Bad public key\");\n    if (publicKey.length === 65)\n    {\n      assert(publicKey[0] === 4, \"Bad public key\");\n    }\n    if (publicKey.length === 33)\n    {\n      assert(publicKey[0] === 2 || publicKey[0] === 3, \"Bad public key\");\n    }\n    assert(msg.length > 0, \"Message should not be empty\");\n    assert(msg.length <= 32, \"Message is too long\");\n    if (ec.verify(msg, sig, publicKey)) {\n      resolve(null);\n    } else {\n      reject(new Error(\"Bad signature\"));\n    }\n  });\n};\n\nvar derive = exports.derive = function(privateKeyA, publicKeyB) {\n  return new Promise(function(resolve) {\n    assert(Buffer.isBuffer(privateKeyA), \"Bad private key\");\n    assert(Buffer.isBuffer(publicKeyB), \"Bad public key\");\n    assert(privateKeyA.length === 32, \"Bad private key\");\n    assert(isValidPrivateKey(privateKeyA), \"Bad private key\");\n    assert(publicKeyB.length === 65 || publicKeyB.length === 33, \"Bad public key\");\n    if (publicKeyB.length === 65)\n    {\n      assert(publicKeyB[0] === 4, \"Bad public key\");\n    }\n    if (publicKeyB.length === 33)\n    {\n      assert(publicKeyB[0] === 2 || publicKeyB[0] === 3, \"Bad public key\");\n    }\n    var keyA = ec.keyFromPrivate(privateKeyA);\n    var keyB = ec.keyFromPublic(publicKeyB);\n    var Px = keyA.derive(keyB.getPublic());  // BN instance\n    resolve(Buffer.from(Px.toArray()));\n  });\n};\n\nexports.encrypt = function(publicKeyTo, msg, opts) {\n  opts = opts || {};\n  // Tmp variables to save context from flat promises;\n  var iv, ephemPublicKey, ciphertext, macKey;\n  return new Promise(function(resolve) {\n    var ephemPrivateKey = opts.ephemPrivateKey || randomBytes(32);\n    // There is a very unlikely possibility that it is not a valid key\n    while(!isValidPrivateKey(ephemPrivateKey))\n    {\n      ephemPrivateKey = opts.ephemPrivateKey || randomBytes(32);\n    }\n    ephemPublicKey = getPublic(ephemPrivateKey);\n    resolve(derive(ephemPrivateKey, publicKeyTo));\n  }).then(function(Px) {\n    return sha512(Px);\n  }).then(function(hash) {\n    iv = opts.iv || randomBytes(16);\n    var encryptionKey = hash.slice(0, 32);\n    macKey = hash.slice(32);\n    return aesCbcEncrypt(iv, encryptionKey, msg);\n  }).then(function(data) {\n    ciphertext = data;\n    var dataToMac = Buffer.concat([iv, ephemPublicKey, ciphertext]);\n    return hmacSha256Sign(macKey, dataToMac);\n  }).then(function(mac) {\n    return {\n      iv: iv,\n      ephemPublicKey: ephemPublicKey,\n      ciphertext: ciphertext,\n      mac: mac,\n    };\n  });\n};\n\nexports.decrypt = function(privateKey, opts) {\n  // Tmp variable to save context from flat promises;\n  var encryptionKey;\n  return derive(privateKey, opts.ephemPublicKey).then(function(Px) {\n    return sha512(Px);\n  }).then(function(hash) {\n    encryptionKey = hash.slice(0, 32);\n    var macKey = hash.slice(32);\n    var dataToMac = Buffer.concat([\n      opts.iv,\n      opts.ephemPublicKey,\n      opts.ciphertext\n    ]);\n    return hmacSha256Verify(macKey, dataToMac, opts.mac);\n  }).then(function(macGood) {\n    assert(macGood, \"Bad MAC\");\n    return aesCbcDecrypt(opts.iv, encryptionKey, opts.ciphertext);\n  }).then(function(msg) {\n    return Buffer.from(new Uint8Array(msg));\n  });\n};\n\n","export const version = \"random/5.7.0\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nimport { arrayify } from \"@ethersproject/bytes\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n// Debugging line for testing browser lib in node\n//const window = { crypto: { getRandomValues: () => { } } };\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/globalThis\nfunction getGlobal() {\n    if (typeof self !== 'undefined') {\n        return self;\n    }\n    if (typeof window !== 'undefined') {\n        return window;\n    }\n    if (typeof global !== 'undefined') {\n        return global;\n    }\n    throw new Error('unable to locate global object');\n}\n;\nconst anyGlobal = getGlobal();\nlet crypto = anyGlobal.crypto || anyGlobal.msCrypto;\nif (!crypto || !crypto.getRandomValues) {\n    logger.warn(\"WARNING: Missing strong random number source\");\n    crypto = {\n        getRandomValues: function (buffer) {\n            return logger.throwError(\"no secure random source avaialble\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"crypto.getRandomValues\"\n            });\n        }\n    };\n}\nexport function randomBytes(length) {\n    if (length <= 0 || length > 1024 || (length % 1) || length != length) {\n        logger.throwArgumentError(\"invalid length\", \"length\", length);\n    }\n    const result = new Uint8Array(length);\n    crypto.getRandomValues(result);\n    return arrayify(result);\n}\n;\n//# sourceMappingURL=random.js.map","\"use strict\";\nimport { arrayify, hexlify } from \"@ethersproject/bytes\";\nimport { computeHmac } from \"@ethersproject/sha2\";\nexport function pbkdf2(password, salt, iterations, keylen, hashAlgorithm) {\n    password = arrayify(password);\n    salt = arrayify(salt);\n    let hLen;\n    let l = 1;\n    const DK = new Uint8Array(keylen);\n    const block1 = new Uint8Array(salt.length + 4);\n    block1.set(salt);\n    //salt.copy(block1, 0, 0, salt.length)\n    let r;\n    let T;\n    for (let i = 1; i <= l; i++) {\n        //block1.writeUInt32BE(i, salt.length)\n        block1[salt.length] = (i >> 24) & 0xff;\n        block1[salt.length + 1] = (i >> 16) & 0xff;\n        block1[salt.length + 2] = (i >> 8) & 0xff;\n        block1[salt.length + 3] = i & 0xff;\n        //let U = createHmac(password).update(block1).digest();\n        let U = arrayify(computeHmac(hashAlgorithm, password, block1));\n        if (!hLen) {\n            hLen = U.length;\n            T = new Uint8Array(hLen);\n            l = Math.ceil(keylen / hLen);\n            r = keylen - (l - 1) * hLen;\n        }\n        //U.copy(T, 0, 0, hLen)\n        T.set(U);\n        for (let j = 1; j < iterations; j++) {\n            //U = createHmac(password).update(U).digest();\n            U = arrayify(computeHmac(hashAlgorithm, password, U));\n            for (let k = 0; k < hLen; k++)\n                T[k] ^= U[k];\n        }\n        const destPos = (i - 1) * hLen;\n        const len = (i === l ? r : hLen);\n        //T.copy(DK, destPos, 0, len)\n        DK.set(arrayify(T).slice(0, len), destPos);\n    }\n    return hexlify(DK);\n}\n//# sourceMappingURL=pbkdf2.js.map","export const version = \"wordlists/5.7.0\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\n// This gets overridden by rollup\nconst exportWordlist = false;\nimport { id } from \"@ethersproject/hash\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nexport const logger = new Logger(version);\nexport class Wordlist {\n    constructor(locale) {\n        logger.checkAbstract(new.target, Wordlist);\n        defineReadOnly(this, \"locale\", locale);\n    }\n    // Subclasses may override this\n    split(mnemonic) {\n        return mnemonic.toLowerCase().split(/ +/g);\n    }\n    // Subclasses may override this\n    join(words) {\n        return words.join(\" \");\n    }\n    static check(wordlist) {\n        const words = [];\n        for (let i = 0; i < 2048; i++) {\n            const word = wordlist.getWord(i);\n            /* istanbul ignore if */\n            if (i !== wordlist.getWordIndex(word)) {\n                return \"0x\";\n            }\n            words.push(word);\n        }\n        return id(words.join(\"\\n\") + \"\\n\");\n    }\n    static register(lang, name) {\n        if (!name) {\n            name = lang.locale;\n        }\n        /* istanbul ignore if */\n        if (exportWordlist) {\n            try {\n                const anyGlobal = window;\n                if (anyGlobal._ethers && anyGlobal._ethers.wordlists) {\n                    if (!anyGlobal._ethers.wordlists[name]) {\n                        defineReadOnly(anyGlobal._ethers.wordlists, name, lang);\n                    }\n                }\n            }\n            catch (error) { }\n        }\n    }\n}\n//# sourceMappingURL=wordlist.js.map","\"use strict\";\nimport { Wordlist } from \"./wordlist\";\nconst words = \"AbandonAbilityAbleAboutAboveAbsentAbsorbAbstractAbsurdAbuseAccessAccidentAccountAccuseAchieveAcidAcousticAcquireAcrossActActionActorActressActualAdaptAddAddictAddressAdjustAdmitAdultAdvanceAdviceAerobicAffairAffordAfraidAgainAgeAgentAgreeAheadAimAirAirportAisleAlarmAlbumAlcoholAlertAlienAllAlleyAllowAlmostAloneAlphaAlreadyAlsoAlterAlwaysAmateurAmazingAmongAmountAmusedAnalystAnchorAncientAngerAngleAngryAnimalAnkleAnnounceAnnualAnotherAnswerAntennaAntiqueAnxietyAnyApartApologyAppearAppleApproveAprilArchArcticAreaArenaArgueArmArmedArmorArmyAroundArrangeArrestArriveArrowArtArtefactArtistArtworkAskAspectAssaultAssetAssistAssumeAsthmaAthleteAtomAttackAttendAttitudeAttractAuctionAuditAugustAuntAuthorAutoAutumnAverageAvocadoAvoidAwakeAwareAwayAwesomeAwfulAwkwardAxisBabyBachelorBaconBadgeBagBalanceBalconyBallBambooBananaBannerBarBarelyBargainBarrelBaseBasicBasketBattleBeachBeanBeautyBecauseBecomeBeefBeforeBeginBehaveBehindBelieveBelowBeltBenchBenefitBestBetrayBetterBetweenBeyondBicycleBidBikeBindBiologyBirdBirthBitterBlackBladeBlameBlanketBlastBleakBlessBlindBloodBlossomBlouseBlueBlurBlushBoardBoatBodyBoilBombBoneBonusBookBoostBorderBoringBorrowBossBottomBounceBoxBoyBracketBrainBrandBrassBraveBreadBreezeBrickBridgeBriefBrightBringBriskBroccoliBrokenBronzeBroomBrotherBrownBrushBubbleBuddyBudgetBuffaloBuildBulbBulkBulletBundleBunkerBurdenBurgerBurstBusBusinessBusyButterBuyerBuzzCabbageCabinCableCactusCageCakeCallCalmCameraCampCanCanalCancelCandyCannonCanoeCanvasCanyonCapableCapitalCaptainCarCarbonCardCargoCarpetCarryCartCaseCashCasinoCastleCasualCatCatalogCatchCategoryCattleCaughtCauseCautionCaveCeilingCeleryCementCensusCenturyCerealCertainChairChalkChampionChangeChaosChapterChargeChaseChatCheapCheckCheeseChefCherryChestChickenChiefChildChimneyChoiceChooseChronicChuckleChunkChurnCigarCinnamonCircleCitizenCityCivilClaimClapClarifyClawClayCleanClerkCleverClickClientCliffClimbClinicClipClockClogCloseClothCloudClownClubClumpClusterClutchCoachCoastCoconutCodeCoffeeCoilCoinCollectColorColumnCombineComeComfortComicCommonCompanyConcertConductConfirmCongressConnectConsiderControlConvinceCookCoolCopperCopyCoralCoreCornCorrectCostCottonCouchCountryCoupleCourseCousinCoverCoyoteCrackCradleCraftCramCraneCrashCraterCrawlCrazyCreamCreditCreekCrewCricketCrimeCrispCriticCropCrossCrouchCrowdCrucialCruelCruiseCrumbleCrunchCrushCryCrystalCubeCultureCupCupboardCuriousCurrentCurtainCurveCushionCustomCuteCycleDadDamageDampDanceDangerDaringDashDaughterDawnDayDealDebateDebrisDecadeDecemberDecideDeclineDecorateDecreaseDeerDefenseDefineDefyDegreeDelayDeliverDemandDemiseDenialDentistDenyDepartDependDepositDepthDeputyDeriveDescribeDesertDesignDeskDespairDestroyDetailDetectDevelopDeviceDevoteDiagramDialDiamondDiaryDiceDieselDietDifferDigitalDignityDilemmaDinnerDinosaurDirectDirtDisagreeDiscoverDiseaseDishDismissDisorderDisplayDistanceDivertDivideDivorceDizzyDoctorDocumentDogDollDolphinDomainDonateDonkeyDonorDoorDoseDoubleDoveDraftDragonDramaDrasticDrawDreamDressDriftDrillDrinkDripDriveDropDrumDryDuckDumbDuneDuringDustDutchDutyDwarfDynamicEagerEagleEarlyEarnEarthEasilyEastEasyEchoEcologyEconomyEdgeEditEducateEffortEggEightEitherElbowElderElectricElegantElementElephantElevatorEliteElseEmbarkEmbodyEmbraceEmergeEmotionEmployEmpowerEmptyEnableEnactEndEndlessEndorseEnemyEnergyEnforceEngageEngineEnhanceEnjoyEnlistEnoughEnrichEnrollEnsureEnterEntireEntryEnvelopeEpisodeEqualEquipEraEraseErodeErosionErrorEruptEscapeEssayEssenceEstateEternalEthicsEvidenceEvilEvokeEvolveExactExampleExcessExchangeExciteExcludeExcuseExecuteExerciseExhaustExhibitExileExistExitExoticExpandExpectExpireExplainExposeExpressExtendExtraEyeEyebrowFabricFaceFacultyFadeFaintFaithFallFalseFameFamilyFamousFanFancyFantasyFarmFashionFatFatalFatherFatigueFaultFavoriteFeatureFebruaryFederalFeeFeedFeelFemaleFenceFestivalFetchFeverFewFiberFictionFieldFigureFileFilmFilterFinalFindFineFingerFinishFireFirmFirstFiscalFishFitFitnessFixFlagFlameFlashFlatFlavorFleeFlightFlipFloatFlockFloorFlowerFluidFlushFlyFoamFocusFogFoilFoldFollowFoodFootForceForestForgetForkFortuneForumForwardFossilFosterFoundFoxFragileFrameFrequentFreshFriendFringeFrogFrontFrostFrownFrozenFruitFuelFunFunnyFurnaceFuryFutureGadgetGainGalaxyGalleryGameGapGarageGarbageGardenGarlicGarmentGasGaspGateGatherGaugeGazeGeneralGeniusGenreGentleGenuineGestureGhostGiantGiftGiggleGingerGiraffeGirlGiveGladGlanceGlareGlassGlideGlimpseGlobeGloomGloryGloveGlowGlueGoatGoddessGoldGoodGooseGorillaGospelGossipGovernGownGrabGraceGrainGrantGrapeGrassGravityGreatGreenGridGriefGritGroceryGroupGrowGruntGuardGuessGuideGuiltGuitarGunGymHabitHairHalfHammerHamsterHandHappyHarborHardHarshHarvestHatHaveHawkHazardHeadHealthHeartHeavyHedgehogHeightHelloHelmetHelpHenHeroHiddenHighHillHintHipHireHistoryHobbyHockeyHoldHoleHolidayHollowHomeHoneyHoodHopeHornHorrorHorseHospitalHostHotelHourHoverHubHugeHumanHumbleHumorHundredHungryHuntHurdleHurryHurtHusbandHybridIceIconIdeaIdentifyIdleIgnoreIllIllegalIllnessImageImitateImmenseImmuneImpactImposeImproveImpulseInchIncludeIncomeIncreaseIndexIndicateIndoorIndustryInfantInflictInformInhaleInheritInitialInjectInjuryInmateInnerInnocentInputInquiryInsaneInsectInsideInspireInstallIntactInterestIntoInvestInviteInvolveIronIslandIsolateIssueItemIvoryJacketJaguarJarJazzJealousJeansJellyJewelJobJoinJokeJourneyJoyJudgeJuiceJumpJungleJuniorJunkJustKangarooKeenKeepKetchupKeyKickKidKidneyKindKingdomKissKitKitchenKiteKittenKiwiKneeKnifeKnockKnowLabLabelLaborLadderLadyLakeLampLanguageLaptopLargeLaterLatinLaughLaundryLavaLawLawnLawsuitLayerLazyLeaderLeafLearnLeaveLectureLeftLegLegalLegendLeisureLemonLendLengthLensLeopardLessonLetterLevelLiarLibertyLibraryLicenseLifeLiftLightLikeLimbLimitLinkLionLiquidListLittleLiveLizardLoadLoanLobsterLocalLockLogicLonelyLongLoopLotteryLoudLoungeLoveLoyalLuckyLuggageLumberLunarLunchLuxuryLyricsMachineMadMagicMagnetMaidMailMainMajorMakeMammalManManageMandateMangoMansionManualMapleMarbleMarchMarginMarineMarketMarriageMaskMassMasterMatchMaterialMathMatrixMatterMaximumMazeMeadowMeanMeasureMeatMechanicMedalMediaMelodyMeltMemberMemoryMentionMenuMercyMergeMeritMerryMeshMessageMetalMethodMiddleMidnightMilkMillionMimicMindMinimumMinorMinuteMiracleMirrorMiseryMissMistakeMixMixedMixtureMobileModelModifyMomMomentMonitorMonkeyMonsterMonthMoonMoralMoreMorningMosquitoMotherMotionMotorMountainMouseMoveMovieMuchMuffinMuleMultiplyMuscleMuseumMushroomMusicMustMutualMyselfMysteryMythNaiveNameNapkinNarrowNastyNationNatureNearNeckNeedNegativeNeglectNeitherNephewNerveNestNetNetworkNeutralNeverNewsNextNiceNightNobleNoiseNomineeNoodleNormalNorthNoseNotableNoteNothingNoticeNovelNowNuclearNumberNurseNutOakObeyObjectObligeObscureObserveObtainObviousOccurOceanOctoberOdorOffOfferOfficeOftenOilOkayOldOliveOlympicOmitOnceOneOnionOnlineOnlyOpenOperaOpinionOpposeOptionOrangeOrbitOrchardOrderOrdinaryOrganOrientOriginalOrphanOstrichOtherOutdoorOuterOutputOutsideOvalOvenOverOwnOwnerOxygenOysterOzonePactPaddlePagePairPalacePalmPandaPanelPanicPantherPaperParadeParentParkParrotPartyPassPatchPathPatientPatrolPatternPausePavePaymentPeacePeanutPearPeasantPelicanPenPenaltyPencilPeoplePepperPerfectPermitPersonPetPhonePhotoPhrasePhysicalPianoPicnicPicturePiecePigPigeonPillPilotPinkPioneerPipePistolPitchPizzaPlacePlanetPlasticPlatePlayPleasePledgePluckPlugPlungePoemPoetPointPolarPolePolicePondPonyPoolPopularPortionPositionPossiblePostPotatoPotteryPovertyPowderPowerPracticePraisePredictPreferPreparePresentPrettyPreventPricePridePrimaryPrintPriorityPrisonPrivatePrizeProblemProcessProduceProfitProgramProjectPromoteProofPropertyProsperProtectProudProvidePublicPuddingPullPulpPulsePumpkinPunchPupilPuppyPurchasePurityPurposePursePushPutPuzzlePyramidQualityQuantumQuarterQuestionQuickQuitQuizQuoteRabbitRaccoonRaceRackRadarRadioRailRainRaiseRallyRampRanchRandomRangeRapidRareRateRatherRavenRawRazorReadyRealReasonRebelRebuildRecallReceiveRecipeRecordRecycleReduceReflectReformRefuseRegionRegretRegularRejectRelaxReleaseReliefRelyRemainRememberRemindRemoveRenderRenewRentReopenRepairRepeatReplaceReportRequireRescueResembleResistResourceResponseResultRetireRetreatReturnReunionRevealReviewRewardRhythmRibRibbonRiceRichRideRidgeRifleRightRigidRingRiotRippleRiskRitualRivalRiverRoadRoastRobotRobustRocketRomanceRoofRookieRoomRoseRotateRoughRoundRouteRoyalRubberRudeRugRuleRunRunwayRuralSadSaddleSadnessSafeSailSaladSalmonSalonSaltSaluteSameSampleSandSatisfySatoshiSauceSausageSaveSayScaleScanScareScatterSceneSchemeSchoolScienceScissorsScorpionScoutScrapScreenScriptScrubSeaSearchSeasonSeatSecondSecretSectionSecuritySeedSeekSegmentSelectSellSeminarSeniorSenseSentenceSeriesServiceSessionSettleSetupSevenShadowShaftShallowShareShedShellSheriffShieldShiftShineShipShiverShockShoeShootShopShortShoulderShoveShrimpShrugShuffleShySiblingSickSideSiegeSightSignSilentSilkSillySilverSimilarSimpleSinceSingSirenSisterSituateSixSizeSkateSketchSkiSkillSkinSkirtSkullSlabSlamSleepSlenderSliceSlideSlightSlimSloganSlotSlowSlushSmallSmartSmileSmokeSmoothSnackSnakeSnapSniffSnowSoapSoccerSocialSockSodaSoftSolarSoldierSolidSolutionSolveSomeoneSongSoonSorrySortSoulSoundSoupSourceSouthSpaceSpareSpatialSpawnSpeakSpecialSpeedSpellSpendSphereSpiceSpiderSpikeSpinSpiritSplitSpoilSponsorSpoonSportSpotSpraySpreadSpringSpySquareSqueezeSquirrelStableStadiumStaffStageStairsStampStandStartStateStaySteakSteelStemStepStereoStickStillStingStockStomachStoneStoolStoryStoveStrategyStreetStrikeStrongStruggleStudentStuffStumbleStyleSubjectSubmitSubwaySuccessSuchSuddenSufferSugarSuggestSuitSummerSunSunnySunsetSuperSupplySupremeSureSurfaceSurgeSurpriseSurroundSurveySuspectSustainSwallowSwampSwapSwarmSwearSweetSwiftSwimSwingSwitchSwordSymbolSymptomSyrupSystemTableTackleTagTailTalentTalkTankTapeTargetTaskTasteTattooTaxiTeachTeamTellTenTenantTennisTentTermTestTextThankThatThemeThenTheoryThereTheyThingThisThoughtThreeThriveThrowThumbThunderTicketTideTigerTiltTimberTimeTinyTipTiredTissueTitleToastTobaccoTodayToddlerToeTogetherToiletTokenTomatoTomorrowToneTongueTonightToolToothTopTopicToppleTorchTornadoTortoiseTossTotalTouristTowardTowerTownToyTrackTradeTrafficTragicTrainTransferTrapTrashTravelTrayTreatTreeTrendTrialTribeTrickTriggerTrimTripTrophyTroubleTruckTrueTrulyTrumpetTrustTruthTryTubeTuitionTumbleTunaTunnelTurkeyTurnTurtleTwelveTwentyTwiceTwinTwistTwoTypeTypicalUglyUmbrellaUnableUnawareUncleUncoverUnderUndoUnfairUnfoldUnhappyUniformUniqueUnitUniverseUnknownUnlockUntilUnusualUnveilUpdateUpgradeUpholdUponUpperUpsetUrbanUrgeUsageUseUsedUsefulUselessUsualUtilityVacantVacuumVagueValidValleyValveVanVanishVaporVariousVastVaultVehicleVelvetVendorVentureVenueVerbVerifyVersionVeryVesselVeteranViableVibrantViciousVictoryVideoViewVillageVintageViolinVirtualVirusVisaVisitVisualVitalVividVocalVoiceVoidVolcanoVolumeVoteVoyageWageWagonWaitWalkWallWalnutWantWarfareWarmWarriorWashWaspWasteWaterWaveWayWealthWeaponWearWeaselWeatherWebWeddingWeekendWeirdWelcomeWestWetWhaleWhatWheatWheelWhenWhereWhipWhisperWideWidthWifeWildWillWinWindowWineWingWinkWinnerWinterWireWisdomWiseWishWitnessWolfWomanWonderWoodWoolWordWorkWorldWorryWorthWrapWreckWrestleWristWriteWrongYardYearYellowYouYoungYouthZebraZeroZoneZoo\";\nlet wordlist = null;\nfunction loadWords(lang) {\n    if (wordlist != null) {\n        return;\n    }\n    wordlist = words.replace(/([A-Z])/g, \" $1\").toLowerCase().substring(1).split(\" \");\n    // Verify the computed list matches the official list\n    /* istanbul ignore if */\n    if (Wordlist.check(lang) !== \"0x3c8acc1e7b08d8e76f9fda015ef48dc8c710a73cb7e0f77b2c18a9b5a7adde60\") {\n        wordlist = null;\n        throw new Error(\"BIP39 Wordlist for en (English) FAILED\");\n    }\n}\nclass LangEn extends Wordlist {\n    constructor() {\n        super(\"en\");\n    }\n    getWord(index) {\n        loadWords(this);\n        return wordlist[index];\n    }\n    getWordIndex(word) {\n        loadWords(this);\n        return wordlist.indexOf(word);\n    }\n}\nconst langEn = new LangEn();\nWordlist.register(langEn);\nexport { langEn };\n//# sourceMappingURL=lang-en.js.map","\"use strict\";\nimport { langEn as en } from \"./lang-en\";\nexport const wordlists = {\n    en: en\n};\n//# sourceMappingURL=wordlists.js.map","\"use strict\";\nimport { Base58 } from \"@ethersproject/basex\";\nimport { arrayify, concat, hexDataSlice, hexZeroPad, hexlify } from \"@ethersproject/bytes\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { toUtf8Bytes, UnicodeNormalizationForm } from \"@ethersproject/strings\";\nimport { pbkdf2 } from \"@ethersproject/pbkdf2\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\nimport { SigningKey } from \"@ethersproject/signing-key\";\nimport { computeHmac, ripemd160, sha256, SupportedAlgorithm } from \"@ethersproject/sha2\";\nimport { computeAddress } from \"@ethersproject/transactions\";\nimport { wordlists } from \"@ethersproject/wordlists\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nconst N = BigNumber.from(\"0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141\");\n// \"Bitcoin seed\"\nconst MasterSecret = toUtf8Bytes(\"Bitcoin seed\");\nconst HardenedBit = 0x80000000;\n// Returns a byte with the MSB bits set\nfunction getUpperMask(bits) {\n    return ((1 << bits) - 1) << (8 - bits);\n}\n// Returns a byte with the LSB bits set\nfunction getLowerMask(bits) {\n    return (1 << bits) - 1;\n}\nfunction bytes32(value) {\n    return hexZeroPad(hexlify(value), 32);\n}\nfunction base58check(data) {\n    return Base58.encode(concat([data, hexDataSlice(sha256(sha256(data)), 0, 4)]));\n}\nfunction getWordlist(wordlist) {\n    if (wordlist == null) {\n        return wordlists[\"en\"];\n    }\n    if (typeof (wordlist) === \"string\") {\n        const words = wordlists[wordlist];\n        if (words == null) {\n            logger.throwArgumentError(\"unknown locale\", \"wordlist\", wordlist);\n        }\n        return words;\n    }\n    return wordlist;\n}\nconst _constructorGuard = {};\nexport const defaultPath = \"m/44'/60'/0'/0/0\";\n;\nexport class HDNode {\n    /**\n     *  This constructor should not be called directly.\n     *\n     *  Please use:\n     *   - fromMnemonic\n     *   - fromSeed\n     */\n    constructor(constructorGuard, privateKey, publicKey, parentFingerprint, chainCode, index, depth, mnemonicOrPath) {\n        /* istanbul ignore if */\n        if (constructorGuard !== _constructorGuard) {\n            throw new Error(\"HDNode constructor cannot be called directly\");\n        }\n        if (privateKey) {\n            const signingKey = new SigningKey(privateKey);\n            defineReadOnly(this, \"privateKey\", signingKey.privateKey);\n            defineReadOnly(this, \"publicKey\", signingKey.compressedPublicKey);\n        }\n        else {\n            defineReadOnly(this, \"privateKey\", null);\n            defineReadOnly(this, \"publicKey\", hexlify(publicKey));\n        }\n        defineReadOnly(this, \"parentFingerprint\", parentFingerprint);\n        defineReadOnly(this, \"fingerprint\", hexDataSlice(ripemd160(sha256(this.publicKey)), 0, 4));\n        defineReadOnly(this, \"address\", computeAddress(this.publicKey));\n        defineReadOnly(this, \"chainCode\", chainCode);\n        defineReadOnly(this, \"index\", index);\n        defineReadOnly(this, \"depth\", depth);\n        if (mnemonicOrPath == null) {\n            // From a source that does not preserve the path (e.g. extended keys)\n            defineReadOnly(this, \"mnemonic\", null);\n            defineReadOnly(this, \"path\", null);\n        }\n        else if (typeof (mnemonicOrPath) === \"string\") {\n            // From a source that does not preserve the mnemonic (e.g. neutered)\n            defineReadOnly(this, \"mnemonic\", null);\n            defineReadOnly(this, \"path\", mnemonicOrPath);\n        }\n        else {\n            // From a fully qualified source\n            defineReadOnly(this, \"mnemonic\", mnemonicOrPath);\n            defineReadOnly(this, \"path\", mnemonicOrPath.path);\n        }\n    }\n    get extendedKey() {\n        // We only support the mainnet values for now, but if anyone needs\n        // testnet values, let me know. I believe current sentiment is that\n        // we should always use mainnet, and use BIP-44 to derive the network\n        //   - Mainnet: public=0x0488B21E, private=0x0488ADE4\n        //   - Testnet: public=0x043587CF, private=0x04358394\n        if (this.depth >= 256) {\n            throw new Error(\"Depth too large!\");\n        }\n        return base58check(concat([\n            ((this.privateKey != null) ? \"0x0488ADE4\" : \"0x0488B21E\"),\n            hexlify(this.depth),\n            this.parentFingerprint,\n            hexZeroPad(hexlify(this.index), 4),\n            this.chainCode,\n            ((this.privateKey != null) ? concat([\"0x00\", this.privateKey]) : this.publicKey),\n        ]));\n    }\n    neuter() {\n        return new HDNode(_constructorGuard, null, this.publicKey, this.parentFingerprint, this.chainCode, this.index, this.depth, this.path);\n    }\n    _derive(index) {\n        if (index > 0xffffffff) {\n            throw new Error(\"invalid index - \" + String(index));\n        }\n        // Base path\n        let path = this.path;\n        if (path) {\n            path += \"/\" + (index & ~HardenedBit);\n        }\n        const data = new Uint8Array(37);\n        if (index & HardenedBit) {\n            if (!this.privateKey) {\n                throw new Error(\"cannot derive child of neutered node\");\n            }\n            // Data = 0x00 || ser_256(k_par)\n            data.set(arrayify(this.privateKey), 1);\n            // Hardened path\n            if (path) {\n                path += \"'\";\n            }\n        }\n        else {\n            // Data = ser_p(point(k_par))\n            data.set(arrayify(this.publicKey));\n        }\n        // Data += ser_32(i)\n        for (let i = 24; i >= 0; i -= 8) {\n            data[33 + (i >> 3)] = ((index >> (24 - i)) & 0xff);\n        }\n        const I = arrayify(computeHmac(SupportedAlgorithm.sha512, this.chainCode, data));\n        const IL = I.slice(0, 32);\n        const IR = I.slice(32);\n        // The private key\n        let ki = null;\n        // The public key\n        let Ki = null;\n        if (this.privateKey) {\n            ki = bytes32(BigNumber.from(IL).add(this.privateKey).mod(N));\n        }\n        else {\n            const ek = new SigningKey(hexlify(IL));\n            Ki = ek._addPoint(this.publicKey);\n        }\n        let mnemonicOrPath = path;\n        const srcMnemonic = this.mnemonic;\n        if (srcMnemonic) {\n            mnemonicOrPath = Object.freeze({\n                phrase: srcMnemonic.phrase,\n                path: path,\n                locale: (srcMnemonic.locale || \"en\")\n            });\n        }\n        return new HDNode(_constructorGuard, ki, Ki, this.fingerprint, bytes32(IR), index, this.depth + 1, mnemonicOrPath);\n    }\n    derivePath(path) {\n        const components = path.split(\"/\");\n        if (components.length === 0 || (components[0] === \"m\" && this.depth !== 0)) {\n            throw new Error(\"invalid path - \" + path);\n        }\n        if (components[0] === \"m\") {\n            components.shift();\n        }\n        let result = this;\n        for (let i = 0; i < components.length; i++) {\n            const component = components[i];\n            if (component.match(/^[0-9]+'$/)) {\n                const index = parseInt(component.substring(0, component.length - 1));\n                if (index >= HardenedBit) {\n                    throw new Error(\"invalid path index - \" + component);\n                }\n                result = result._derive(HardenedBit + index);\n            }\n            else if (component.match(/^[0-9]+$/)) {\n                const index = parseInt(component);\n                if (index >= HardenedBit) {\n                    throw new Error(\"invalid path index - \" + component);\n                }\n                result = result._derive(index);\n            }\n            else {\n                throw new Error(\"invalid path component - \" + component);\n            }\n        }\n        return result;\n    }\n    static _fromSeed(seed, mnemonic) {\n        const seedArray = arrayify(seed);\n        if (seedArray.length < 16 || seedArray.length > 64) {\n            throw new Error(\"invalid seed\");\n        }\n        const I = arrayify(computeHmac(SupportedAlgorithm.sha512, MasterSecret, seedArray));\n        return new HDNode(_constructorGuard, bytes32(I.slice(0, 32)), null, \"0x00000000\", bytes32(I.slice(32)), 0, 0, mnemonic);\n    }\n    static fromMnemonic(mnemonic, password, wordlist) {\n        // If a locale name was passed in, find the associated wordlist\n        wordlist = getWordlist(wordlist);\n        // Normalize the case and spacing in the mnemonic (throws if the mnemonic is invalid)\n        mnemonic = entropyToMnemonic(mnemonicToEntropy(mnemonic, wordlist), wordlist);\n        return HDNode._fromSeed(mnemonicToSeed(mnemonic, password), {\n            phrase: mnemonic,\n            path: \"m\",\n            locale: wordlist.locale\n        });\n    }\n    static fromSeed(seed) {\n        return HDNode._fromSeed(seed, null);\n    }\n    static fromExtendedKey(extendedKey) {\n        const bytes = Base58.decode(extendedKey);\n        if (bytes.length !== 82 || base58check(bytes.slice(0, 78)) !== extendedKey) {\n            logger.throwArgumentError(\"invalid extended key\", \"extendedKey\", \"[REDACTED]\");\n        }\n        const depth = bytes[4];\n        const parentFingerprint = hexlify(bytes.slice(5, 9));\n        const index = parseInt(hexlify(bytes.slice(9, 13)).substring(2), 16);\n        const chainCode = hexlify(bytes.slice(13, 45));\n        const key = bytes.slice(45, 78);\n        switch (hexlify(bytes.slice(0, 4))) {\n            // Public Key\n            case \"0x0488b21e\":\n            case \"0x043587cf\":\n                return new HDNode(_constructorGuard, null, hexlify(key), parentFingerprint, chainCode, index, depth, null);\n            // Private Key\n            case \"0x0488ade4\":\n            case \"0x04358394 \":\n                if (key[0] !== 0) {\n                    break;\n                }\n                return new HDNode(_constructorGuard, hexlify(key.slice(1)), null, parentFingerprint, chainCode, index, depth, null);\n        }\n        return logger.throwArgumentError(\"invalid extended key\", \"extendedKey\", \"[REDACTED]\");\n    }\n}\nexport function mnemonicToSeed(mnemonic, password) {\n    if (!password) {\n        password = \"\";\n    }\n    const salt = toUtf8Bytes(\"mnemonic\" + password, UnicodeNormalizationForm.NFKD);\n    return pbkdf2(toUtf8Bytes(mnemonic, UnicodeNormalizationForm.NFKD), salt, 2048, 64, \"sha512\");\n}\nexport function mnemonicToEntropy(mnemonic, wordlist) {\n    wordlist = getWordlist(wordlist);\n    logger.checkNormalize();\n    const words = wordlist.split(mnemonic);\n    if ((words.length % 3) !== 0) {\n        throw new Error(\"invalid mnemonic\");\n    }\n    const entropy = arrayify(new Uint8Array(Math.ceil(11 * words.length / 8)));\n    let offset = 0;\n    for (let i = 0; i < words.length; i++) {\n        let index = wordlist.getWordIndex(words[i].normalize(\"NFKD\"));\n        if (index === -1) {\n            throw new Error(\"invalid mnemonic\");\n        }\n        for (let bit = 0; bit < 11; bit++) {\n            if (index & (1 << (10 - bit))) {\n                entropy[offset >> 3] |= (1 << (7 - (offset % 8)));\n            }\n            offset++;\n        }\n    }\n    const entropyBits = 32 * words.length / 3;\n    const checksumBits = words.length / 3;\n    const checksumMask = getUpperMask(checksumBits);\n    const checksum = arrayify(sha256(entropy.slice(0, entropyBits / 8)))[0] & checksumMask;\n    if (checksum !== (entropy[entropy.length - 1] & checksumMask)) {\n        throw new Error(\"invalid checksum\");\n    }\n    return hexlify(entropy.slice(0, entropyBits / 8));\n}\nexport function entropyToMnemonic(entropy, wordlist) {\n    wordlist = getWordlist(wordlist);\n    entropy = arrayify(entropy);\n    if ((entropy.length % 4) !== 0 || entropy.length < 16 || entropy.length > 32) {\n        throw new Error(\"invalid entropy\");\n    }\n    const indices = [0];\n    let remainingBits = 11;\n    for (let i = 0; i < entropy.length; i++) {\n        // Consume the whole byte (with still more to go)\n        if (remainingBits > 8) {\n            indices[indices.length - 1] <<= 8;\n            indices[indices.length - 1] |= entropy[i];\n            remainingBits -= 8;\n            // This byte will complete an 11-bit index\n        }\n        else {\n            indices[indices.length - 1] <<= remainingBits;\n            indices[indices.length - 1] |= entropy[i] >> (8 - remainingBits);\n            // Start the next word\n            indices.push(entropy[i] & getLowerMask(8 - remainingBits));\n            remainingBits += 3;\n        }\n    }\n    // Compute the checksum bits\n    const checksumBits = entropy.length / 4;\n    const checksum = arrayify(sha256(entropy))[0] & getUpperMask(checksumBits);\n    // Shift the checksum into the word indices\n    indices[indices.length - 1] <<= checksumBits;\n    indices[indices.length - 1] |= (checksum >> (8 - checksumBits));\n    return wordlist.join(indices.map((index) => wordlist.getWord(index)));\n}\nexport function isValidMnemonic(mnemonic, wordlist) {\n    try {\n        mnemonicToEntropy(mnemonic, wordlist);\n        return true;\n    }\n    catch (error) { }\n    return false;\n}\nexport function getAccountPath(index) {\n    if (typeof (index) !== \"number\" || index < 0 || index >= HardenedBit || index % 1) {\n        logger.throwArgumentError(\"invalid account index\", \"index\", index);\n    }\n    return `m/44'/60'/${index}'/0/0`;\n}\n//# sourceMappingURL=index.js.map","export const version = \"hdnode/5.7.0\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nimport { arrayify, hexlify } from \"@ethersproject/bytes\";\nimport { toUtf8Bytes, UnicodeNormalizationForm } from '@ethersproject/strings';\nexport function looseArrayify(hexString) {\n    if (typeof (hexString) === 'string' && hexString.substring(0, 2) !== '0x') {\n        hexString = '0x' + hexString;\n    }\n    return arrayify(hexString);\n}\nexport function zpad(value, length) {\n    value = String(value);\n    while (value.length < length) {\n        value = '0' + value;\n    }\n    return value;\n}\nexport function getPassword(password) {\n    if (typeof (password) === 'string') {\n        return toUtf8Bytes(password, UnicodeNormalizationForm.NFKC);\n    }\n    return arrayify(password);\n}\nexport function searchPath(object, path) {\n    let currentChild = object;\n    const comps = path.toLowerCase().split('/');\n    for (let i = 0; i < comps.length; i++) {\n        // Search for a child object with a case-insensitive matching key\n        let matchingChild = null;\n        for (const key in currentChild) {\n            if (key.toLowerCase() === comps[i]) {\n                matchingChild = currentChild[key];\n                break;\n            }\n        }\n        // Didn't find one. :'(\n        if (matchingChild === null) {\n            return null;\n        }\n        // Now check this child...\n        currentChild = matchingChild;\n    }\n    return currentChild;\n}\n// See: https://www.ietf.org/rfc/rfc4122.txt (Section 4.4)\nexport function uuidV4(randomBytes) {\n    const bytes = arrayify(randomBytes);\n    // Section: 4.1.3:\n    // - time_hi_and_version[12:16] = 0b0100\n    bytes[6] = (bytes[6] & 0x0f) | 0x40;\n    // Section 4.4\n    // - clock_seq_hi_and_reserved[6] = 0b0\n    // - clock_seq_hi_and_reserved[7] = 0b1\n    bytes[8] = (bytes[8] & 0x3f) | 0x80;\n    const value = hexlify(bytes);\n    return [\n        value.substring(2, 10),\n        value.substring(10, 14),\n        value.substring(14, 18),\n        value.substring(18, 22),\n        value.substring(22, 34),\n    ].join(\"-\");\n}\n//# sourceMappingURL=utils.js.map","export const version = \"json-wallets/5.7.0\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport aes from \"aes-js\";\nimport scrypt from \"scrypt-js\";\nimport { getAddress } from \"@ethersproject/address\";\nimport { arrayify, concat, hexlify } from \"@ethersproject/bytes\";\nimport { defaultPath, entropyToMnemonic, HDNode, mnemonicToEntropy } from \"@ethersproject/hdnode\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { pbkdf2 as _pbkdf2 } from \"@ethersproject/pbkdf2\";\nimport { randomBytes } from \"@ethersproject/random\";\nimport { Description } from \"@ethersproject/properties\";\nimport { computeAddress } from \"@ethersproject/transactions\";\nimport { getPassword, looseArrayify, searchPath, uuidV4, zpad } from \"./utils\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n// Exported Types\nfunction hasMnemonic(value) {\n    return (value != null && value.mnemonic && value.mnemonic.phrase);\n}\nexport class KeystoreAccount extends Description {\n    isKeystoreAccount(value) {\n        return !!(value && value._isKeystoreAccount);\n    }\n}\nfunction _decrypt(data, key, ciphertext) {\n    const cipher = searchPath(data, \"crypto/cipher\");\n    if (cipher === \"aes-128-ctr\") {\n        const iv = looseArrayify(searchPath(data, \"crypto/cipherparams/iv\"));\n        const counter = new aes.Counter(iv);\n        const aesCtr = new aes.ModeOfOperation.ctr(key, counter);\n        return arrayify(aesCtr.decrypt(ciphertext));\n    }\n    return null;\n}\nfunction _getAccount(data, key) {\n    const ciphertext = looseArrayify(searchPath(data, \"crypto/ciphertext\"));\n    const computedMAC = hexlify(keccak256(concat([key.slice(16, 32), ciphertext]))).substring(2);\n    if (computedMAC !== searchPath(data, \"crypto/mac\").toLowerCase()) {\n        throw new Error(\"invalid password\");\n    }\n    const privateKey = _decrypt(data, key.slice(0, 16), ciphertext);\n    if (!privateKey) {\n        logger.throwError(\"unsupported cipher\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"decrypt\"\n        });\n    }\n    const mnemonicKey = key.slice(32, 64);\n    const address = computeAddress(privateKey);\n    if (data.address) {\n        let check = data.address.toLowerCase();\n        if (check.substring(0, 2) !== \"0x\") {\n            check = \"0x\" + check;\n        }\n        if (getAddress(check) !== address) {\n            throw new Error(\"address mismatch\");\n        }\n    }\n    const account = {\n        _isKeystoreAccount: true,\n        address: address,\n        privateKey: hexlify(privateKey)\n    };\n    // Version 0.1 x-ethers metadata must contain an encrypted mnemonic phrase\n    if (searchPath(data, \"x-ethers/version\") === \"0.1\") {\n        const mnemonicCiphertext = looseArrayify(searchPath(data, \"x-ethers/mnemonicCiphertext\"));\n        const mnemonicIv = looseArrayify(searchPath(data, \"x-ethers/mnemonicCounter\"));\n        const mnemonicCounter = new aes.Counter(mnemonicIv);\n        const mnemonicAesCtr = new aes.ModeOfOperation.ctr(mnemonicKey, mnemonicCounter);\n        const path = searchPath(data, \"x-ethers/path\") || defaultPath;\n        const locale = searchPath(data, \"x-ethers/locale\") || \"en\";\n        const entropy = arrayify(mnemonicAesCtr.decrypt(mnemonicCiphertext));\n        try {\n            const mnemonic = entropyToMnemonic(entropy, locale);\n            const node = HDNode.fromMnemonic(mnemonic, null, locale).derivePath(path);\n            if (node.privateKey != account.privateKey) {\n                throw new Error(\"mnemonic mismatch\");\n            }\n            account.mnemonic = node.mnemonic;\n        }\n        catch (error) {\n            // If we don't have the locale wordlist installed to\n            // read this mnemonic, just bail and don't set the\n            // mnemonic\n            if (error.code !== Logger.errors.INVALID_ARGUMENT || error.argument !== \"wordlist\") {\n                throw error;\n            }\n        }\n    }\n    return new KeystoreAccount(account);\n}\nfunction pbkdf2Sync(passwordBytes, salt, count, dkLen, prfFunc) {\n    return arrayify(_pbkdf2(passwordBytes, salt, count, dkLen, prfFunc));\n}\nfunction pbkdf2(passwordBytes, salt, count, dkLen, prfFunc) {\n    return Promise.resolve(pbkdf2Sync(passwordBytes, salt, count, dkLen, prfFunc));\n}\nfunction _computeKdfKey(data, password, pbkdf2Func, scryptFunc, progressCallback) {\n    const passwordBytes = getPassword(password);\n    const kdf = searchPath(data, \"crypto/kdf\");\n    if (kdf && typeof (kdf) === \"string\") {\n        const throwError = function (name, value) {\n            return logger.throwArgumentError(\"invalid key-derivation function parameters\", name, value);\n        };\n        if (kdf.toLowerCase() === \"scrypt\") {\n            const salt = looseArrayify(searchPath(data, \"crypto/kdfparams/salt\"));\n            const N = parseInt(searchPath(data, \"crypto/kdfparams/n\"));\n            const r = parseInt(searchPath(data, \"crypto/kdfparams/r\"));\n            const p = parseInt(searchPath(data, \"crypto/kdfparams/p\"));\n            // Check for all required parameters\n            if (!N || !r || !p) {\n                throwError(\"kdf\", kdf);\n            }\n            // Make sure N is a power of 2\n            if ((N & (N - 1)) !== 0) {\n                throwError(\"N\", N);\n            }\n            const dkLen = parseInt(searchPath(data, \"crypto/kdfparams/dklen\"));\n            if (dkLen !== 32) {\n                throwError(\"dklen\", dkLen);\n            }\n            return scryptFunc(passwordBytes, salt, N, r, p, 64, progressCallback);\n        }\n        else if (kdf.toLowerCase() === \"pbkdf2\") {\n            const salt = looseArrayify(searchPath(data, \"crypto/kdfparams/salt\"));\n            let prfFunc = null;\n            const prf = searchPath(data, \"crypto/kdfparams/prf\");\n            if (prf === \"hmac-sha256\") {\n                prfFunc = \"sha256\";\n            }\n            else if (prf === \"hmac-sha512\") {\n                prfFunc = \"sha512\";\n            }\n            else {\n                throwError(\"prf\", prf);\n            }\n            const count = parseInt(searchPath(data, \"crypto/kdfparams/c\"));\n            const dkLen = parseInt(searchPath(data, \"crypto/kdfparams/dklen\"));\n            if (dkLen !== 32) {\n                throwError(\"dklen\", dkLen);\n            }\n            return pbkdf2Func(passwordBytes, salt, count, dkLen, prfFunc);\n        }\n    }\n    return logger.throwArgumentError(\"unsupported key-derivation function\", \"kdf\", kdf);\n}\nexport function decryptSync(json, password) {\n    const data = JSON.parse(json);\n    const key = _computeKdfKey(data, password, pbkdf2Sync, scrypt.syncScrypt);\n    return _getAccount(data, key);\n}\nexport function decrypt(json, password, progressCallback) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const data = JSON.parse(json);\n        const key = yield _computeKdfKey(data, password, pbkdf2, scrypt.scrypt, progressCallback);\n        return _getAccount(data, key);\n    });\n}\nexport function encrypt(account, password, options, progressCallback) {\n    try {\n        // Check the address matches the private key\n        if (getAddress(account.address) !== computeAddress(account.privateKey)) {\n            throw new Error(\"address/privateKey mismatch\");\n        }\n        // Check the mnemonic (if any) matches the private key\n        if (hasMnemonic(account)) {\n            const mnemonic = account.mnemonic;\n            const node = HDNode.fromMnemonic(mnemonic.phrase, null, mnemonic.locale).derivePath(mnemonic.path || defaultPath);\n            if (node.privateKey != account.privateKey) {\n                throw new Error(\"mnemonic mismatch\");\n            }\n        }\n    }\n    catch (e) {\n        return Promise.reject(e);\n    }\n    // The options are optional, so adjust the call as needed\n    if (typeof (options) === \"function\" && !progressCallback) {\n        progressCallback = options;\n        options = {};\n    }\n    if (!options) {\n        options = {};\n    }\n    const privateKey = arrayify(account.privateKey);\n    const passwordBytes = getPassword(password);\n    let entropy = null;\n    let path = null;\n    let locale = null;\n    if (hasMnemonic(account)) {\n        const srcMnemonic = account.mnemonic;\n        entropy = arrayify(mnemonicToEntropy(srcMnemonic.phrase, srcMnemonic.locale || \"en\"));\n        path = srcMnemonic.path || defaultPath;\n        locale = srcMnemonic.locale || \"en\";\n    }\n    let client = options.client;\n    if (!client) {\n        client = \"ethers.js\";\n    }\n    // Check/generate the salt\n    let salt = null;\n    if (options.salt) {\n        salt = arrayify(options.salt);\n    }\n    else {\n        salt = randomBytes(32);\n        ;\n    }\n    // Override initialization vector\n    let iv = null;\n    if (options.iv) {\n        iv = arrayify(options.iv);\n        if (iv.length !== 16) {\n            throw new Error(\"invalid iv\");\n        }\n    }\n    else {\n        iv = randomBytes(16);\n    }\n    // Override the uuid\n    let uuidRandom = null;\n    if (options.uuid) {\n        uuidRandom = arrayify(options.uuid);\n        if (uuidRandom.length !== 16) {\n            throw new Error(\"invalid uuid\");\n        }\n    }\n    else {\n        uuidRandom = randomBytes(16);\n    }\n    // Override the scrypt password-based key derivation function parameters\n    let N = (1 << 17), r = 8, p = 1;\n    if (options.scrypt) {\n        if (options.scrypt.N) {\n            N = options.scrypt.N;\n        }\n        if (options.scrypt.r) {\n            r = options.scrypt.r;\n        }\n        if (options.scrypt.p) {\n            p = options.scrypt.p;\n        }\n    }\n    // We take 64 bytes:\n    //   - 32 bytes   As normal for the Web3 secret storage (derivedKey, macPrefix)\n    //   - 32 bytes   AES key to encrypt mnemonic with (required here to be Ethers Wallet)\n    return scrypt.scrypt(passwordBytes, salt, N, r, p, 64, progressCallback).then((key) => {\n        key = arrayify(key);\n        // This will be used to encrypt the wallet (as per Web3 secret storage)\n        const derivedKey = key.slice(0, 16);\n        const macPrefix = key.slice(16, 32);\n        // This will be used to encrypt the mnemonic phrase (if any)\n        const mnemonicKey = key.slice(32, 64);\n        // Encrypt the private key\n        const counter = new aes.Counter(iv);\n        const aesCtr = new aes.ModeOfOperation.ctr(derivedKey, counter);\n        const ciphertext = arrayify(aesCtr.encrypt(privateKey));\n        // Compute the message authentication code, used to check the password\n        const mac = keccak256(concat([macPrefix, ciphertext]));\n        // See: https://github.com/ethereum/wiki/wiki/Web3-Secret-Storage-Definition\n        const data = {\n            address: account.address.substring(2).toLowerCase(),\n            id: uuidV4(uuidRandom),\n            version: 3,\n            crypto: {\n                cipher: \"aes-128-ctr\",\n                cipherparams: {\n                    iv: hexlify(iv).substring(2),\n                },\n                ciphertext: hexlify(ciphertext).substring(2),\n                kdf: \"scrypt\",\n                kdfparams: {\n                    salt: hexlify(salt).substring(2),\n                    n: N,\n                    dklen: 32,\n                    p: p,\n                    r: r\n                },\n                mac: mac.substring(2)\n            }\n        };\n        // If we have a mnemonic, encrypt it into the JSON wallet\n        if (entropy) {\n            const mnemonicIv = randomBytes(16);\n            const mnemonicCounter = new aes.Counter(mnemonicIv);\n            const mnemonicAesCtr = new aes.ModeOfOperation.ctr(mnemonicKey, mnemonicCounter);\n            const mnemonicCiphertext = arrayify(mnemonicAesCtr.encrypt(entropy));\n            const now = new Date();\n            const timestamp = (now.getUTCFullYear() + \"-\" +\n                zpad(now.getUTCMonth() + 1, 2) + \"-\" +\n                zpad(now.getUTCDate(), 2) + \"T\" +\n                zpad(now.getUTCHours(), 2) + \"-\" +\n                zpad(now.getUTCMinutes(), 2) + \"-\" +\n                zpad(now.getUTCSeconds(), 2) + \".0Z\");\n            data[\"x-ethers\"] = {\n                client: client,\n                gethFilename: (\"UTC--\" + timestamp + \"--\" + data.address),\n                mnemonicCounter: hexlify(mnemonicIv).substring(2),\n                mnemonicCiphertext: hexlify(mnemonicCiphertext).substring(2),\n                path: path,\n                locale: locale,\n                version: \"0.1\"\n            };\n        }\n        return JSON.stringify(data);\n    });\n}\n//# sourceMappingURL=keystore.js.map","\"use strict\";\nimport aes from \"aes-js\";\nimport { getAddress } from \"@ethersproject/address\";\nimport { arrayify } from \"@ethersproject/bytes\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { pbkdf2 } from \"@ethersproject/pbkdf2\";\nimport { toUtf8Bytes } from \"@ethersproject/strings\";\nimport { Description } from \"@ethersproject/properties\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { getPassword, looseArrayify, searchPath } from \"./utils\";\nexport class CrowdsaleAccount extends Description {\n    isCrowdsaleAccount(value) {\n        return !!(value && value._isCrowdsaleAccount);\n    }\n}\n// See: https://github.com/ethereum/pyethsaletool\nexport function decrypt(json, password) {\n    const data = JSON.parse(json);\n    password = getPassword(password);\n    // Ethereum Address\n    const ethaddr = getAddress(searchPath(data, \"ethaddr\"));\n    // Encrypted Seed\n    const encseed = looseArrayify(searchPath(data, \"encseed\"));\n    if (!encseed || (encseed.length % 16) !== 0) {\n        logger.throwArgumentError(\"invalid encseed\", \"json\", json);\n    }\n    const key = arrayify(pbkdf2(password, password, 2000, 32, \"sha256\")).slice(0, 16);\n    const iv = encseed.slice(0, 16);\n    const encryptedSeed = encseed.slice(16);\n    // Decrypt the seed\n    const aesCbc = new aes.ModeOfOperation.cbc(key, iv);\n    const seed = aes.padding.pkcs7.strip(arrayify(aesCbc.decrypt(encryptedSeed)));\n    // This wallet format is weird... Convert the binary encoded hex to a string.\n    let seedHex = \"\";\n    for (let i = 0; i < seed.length; i++) {\n        seedHex += String.fromCharCode(seed[i]);\n    }\n    const seedHexBytes = toUtf8Bytes(seedHex);\n    const privateKey = keccak256(seedHexBytes);\n    return new CrowdsaleAccount({\n        _isCrowdsaleAccount: true,\n        address: ethaddr,\n        privateKey: privateKey\n    });\n}\n//# sourceMappingURL=crowdsale.js.map","\"use strict\";\nimport { getAddress } from \"@ethersproject/address\";\nexport function isCrowdsaleWallet(json) {\n    let data = null;\n    try {\n        data = JSON.parse(json);\n    }\n    catch (error) {\n        return false;\n    }\n    return (data.encseed && data.ethaddr);\n}\nexport function isKeystoreWallet(json) {\n    let data = null;\n    try {\n        data = JSON.parse(json);\n    }\n    catch (error) {\n        return false;\n    }\n    if (!data.version || parseInt(data.version) !== data.version || parseInt(data.version) !== 3) {\n        return false;\n    }\n    // @TODO: Put more checks to make sure it has kdf, iv and all that good stuff\n    return true;\n}\n//export function isJsonWallet(json: string): boolean {\n//    return (isSecretStorageWallet(json) || isCrowdsaleWallet(json));\n//}\nexport function getJsonWalletAddress(json) {\n    if (isCrowdsaleWallet(json)) {\n        try {\n            return getAddress(JSON.parse(json).ethaddr);\n        }\n        catch (error) {\n            return null;\n        }\n    }\n    if (isKeystoreWallet(json)) {\n        try {\n            return getAddress(JSON.parse(json).address);\n        }\n        catch (error) {\n            return null;\n        }\n    }\n    return null;\n}\n//# sourceMappingURL=inspect.js.map","\"use strict\";\nimport { decrypt as decryptCrowdsale } from \"./crowdsale\";\nimport { getJsonWalletAddress, isCrowdsaleWallet, isKeystoreWallet } from \"./inspect\";\nimport { decrypt as decryptKeystore, decryptSync as decryptKeystoreSync, encrypt as encryptKeystore } from \"./keystore\";\nfunction decryptJsonWallet(json, password, progressCallback) {\n    if (isCrowdsaleWallet(json)) {\n        if (progressCallback) {\n            progressCallback(0);\n        }\n        const account = decryptCrowdsale(json, password);\n        if (progressCallback) {\n            progressCallback(1);\n        }\n        return Promise.resolve(account);\n    }\n    if (isKeystoreWallet(json)) {\n        return decryptKeystore(json, password, progressCallback);\n    }\n    return Promise.reject(new Error(\"invalid JSON wallet\"));\n}\nfunction decryptJsonWalletSync(json, password) {\n    if (isCrowdsaleWallet(json)) {\n        return decryptCrowdsale(json, password);\n    }\n    if (isKeystoreWallet(json)) {\n        return decryptKeystoreSync(json, password);\n    }\n    throw new Error(\"invalid JSON wallet\");\n}\nexport { decryptCrowdsale, decryptKeystore, decryptKeystoreSync, encryptKeystore, isCrowdsaleWallet, isKeystoreWallet, getJsonWalletAddress, decryptJsonWallet, decryptJsonWalletSync, };\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { getAddress } from \"@ethersproject/address\";\nimport { Provider } from \"@ethersproject/abstract-provider\";\nimport { Signer } from \"@ethersproject/abstract-signer\";\nimport { arrayify, concat, hexDataSlice, isHexString, joinSignature } from \"@ethersproject/bytes\";\nimport { hashMessage, _TypedDataEncoder } from \"@ethersproject/hash\";\nimport { defaultPath, HDNode, entropyToMnemonic } from \"@ethersproject/hdnode\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { defineReadOnly, resolveProperties } from \"@ethersproject/properties\";\nimport { randomBytes } from \"@ethersproject/random\";\nimport { SigningKey } from \"@ethersproject/signing-key\";\nimport { decryptJsonWallet, decryptJsonWalletSync, encryptKeystore } from \"@ethersproject/json-wallets\";\nimport { computeAddress, recoverAddress, serialize } from \"@ethersproject/transactions\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nfunction isAccount(value) {\n    return (value != null && isHexString(value.privateKey, 32) && value.address != null);\n}\nfunction hasMnemonic(value) {\n    const mnemonic = value.mnemonic;\n    return (mnemonic && mnemonic.phrase);\n}\nexport class Wallet extends Signer {\n    constructor(privateKey, provider) {\n        super();\n        if (isAccount(privateKey)) {\n            const signingKey = new SigningKey(privateKey.privateKey);\n            defineReadOnly(this, \"_signingKey\", () => signingKey);\n            defineReadOnly(this, \"address\", computeAddress(this.publicKey));\n            if (this.address !== getAddress(privateKey.address)) {\n                logger.throwArgumentError(\"privateKey/address mismatch\", \"privateKey\", \"[REDACTED]\");\n            }\n            if (hasMnemonic(privateKey)) {\n                const srcMnemonic = privateKey.mnemonic;\n                defineReadOnly(this, \"_mnemonic\", () => ({\n                    phrase: srcMnemonic.phrase,\n                    path: srcMnemonic.path || defaultPath,\n                    locale: srcMnemonic.locale || \"en\"\n                }));\n                const mnemonic = this.mnemonic;\n                const node = HDNode.fromMnemonic(mnemonic.phrase, null, mnemonic.locale).derivePath(mnemonic.path);\n                if (computeAddress(node.privateKey) !== this.address) {\n                    logger.throwArgumentError(\"mnemonic/address mismatch\", \"privateKey\", \"[REDACTED]\");\n                }\n            }\n            else {\n                defineReadOnly(this, \"_mnemonic\", () => null);\n            }\n        }\n        else {\n            if (SigningKey.isSigningKey(privateKey)) {\n                /* istanbul ignore if */\n                if (privateKey.curve !== \"secp256k1\") {\n                    logger.throwArgumentError(\"unsupported curve; must be secp256k1\", \"privateKey\", \"[REDACTED]\");\n                }\n                defineReadOnly(this, \"_signingKey\", () => privateKey);\n            }\n            else {\n                // A lot of common tools do not prefix private keys with a 0x (see: #1166)\n                if (typeof (privateKey) === \"string\") {\n                    if (privateKey.match(/^[0-9a-f]*$/i) && privateKey.length === 64) {\n                        privateKey = \"0x\" + privateKey;\n                    }\n                }\n                const signingKey = new SigningKey(privateKey);\n                defineReadOnly(this, \"_signingKey\", () => signingKey);\n            }\n            defineReadOnly(this, \"_mnemonic\", () => null);\n            defineReadOnly(this, \"address\", computeAddress(this.publicKey));\n        }\n        /* istanbul ignore if */\n        if (provider && !Provider.isProvider(provider)) {\n            logger.throwArgumentError(\"invalid provider\", \"provider\", provider);\n        }\n        defineReadOnly(this, \"provider\", provider || null);\n    }\n    get mnemonic() { return this._mnemonic(); }\n    get privateKey() { return this._signingKey().privateKey; }\n    get publicKey() { return this._signingKey().publicKey; }\n    getAddress() {\n        return Promise.resolve(this.address);\n    }\n    connect(provider) {\n        return new Wallet(this, provider);\n    }\n    signTransaction(transaction) {\n        return resolveProperties(transaction).then((tx) => {\n            if (tx.from != null) {\n                if (getAddress(tx.from) !== this.address) {\n                    logger.throwArgumentError(\"transaction from address mismatch\", \"transaction.from\", transaction.from);\n                }\n                delete tx.from;\n            }\n            const signature = this._signingKey().signDigest(keccak256(serialize(tx)));\n            return serialize(tx, signature);\n        });\n    }\n    signMessage(message) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return joinSignature(this._signingKey().signDigest(hashMessage(message)));\n        });\n    }\n    _signTypedData(domain, types, value) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Populate any ENS names\n            const populated = yield _TypedDataEncoder.resolveNames(domain, types, value, (name) => {\n                if (this.provider == null) {\n                    logger.throwError(\"cannot resolve ENS names without a provider\", Logger.errors.UNSUPPORTED_OPERATION, {\n                        operation: \"resolveName\",\n                        value: name\n                    });\n                }\n                return this.provider.resolveName(name);\n            });\n            return joinSignature(this._signingKey().signDigest(_TypedDataEncoder.hash(populated.domain, types, populated.value)));\n        });\n    }\n    encrypt(password, options, progressCallback) {\n        if (typeof (options) === \"function\" && !progressCallback) {\n            progressCallback = options;\n            options = {};\n        }\n        if (progressCallback && typeof (progressCallback) !== \"function\") {\n            throw new Error(\"invalid callback\");\n        }\n        if (!options) {\n            options = {};\n        }\n        return encryptKeystore(this, password, options, progressCallback);\n    }\n    /**\n     *  Static methods to create Wallet instances.\n     */\n    static createRandom(options) {\n        let entropy = randomBytes(16);\n        if (!options) {\n            options = {};\n        }\n        if (options.extraEntropy) {\n            entropy = arrayify(hexDataSlice(keccak256(concat([entropy, options.extraEntropy])), 0, 16));\n        }\n        const mnemonic = entropyToMnemonic(entropy, options.locale);\n        return Wallet.fromMnemonic(mnemonic, options.path, options.locale);\n    }\n    static fromEncryptedJson(json, password, progressCallback) {\n        return decryptJsonWallet(json, password, progressCallback).then((account) => {\n            return new Wallet(account);\n        });\n    }\n    static fromEncryptedJsonSync(json, password) {\n        return new Wallet(decryptJsonWalletSync(json, password));\n    }\n    static fromMnemonic(mnemonic, path, wordlist) {\n        if (!path) {\n            path = defaultPath;\n        }\n        return new Wallet(HDNode.fromMnemonic(mnemonic, null, wordlist).derivePath(path));\n    }\n}\nexport function verifyMessage(message, signature) {\n    return recoverAddress(hashMessage(message), signature);\n}\nexport function verifyTypedData(domain, types, value, signature) {\n    return recoverAddress(_TypedDataEncoder.hash(domain, types, value), signature);\n}\n//# sourceMappingURL=index.js.map","export const version = \"wallet/5.7.0\";\n//# sourceMappingURL=_version.js.map","import { concat } from \"@ethersproject/bytes\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { toUtf8Bytes } from \"@ethersproject/strings\";\nexport const messagePrefix = \"\\x19Ethereum Signed Message:\\n\";\nexport function hashMessage(message) {\n    if (typeof (message) === \"string\") {\n        message = toUtf8Bytes(message);\n    }\n    return keccak256(concat([\n        toUtf8Bytes(messagePrefix),\n        toUtf8Bytes(String(message.length)),\n        message\n    ]));\n}\n//# sourceMappingURL=message.js.map","import { utils as ethersUtils, Wallet } from 'ethers';\nimport { stripHexPrefix } from 'ethereumjs-util';\nvar MIN_ENTROPY_SIZE = 128;\nvar keccak256 = ethersUtils.keccak256;\n\n/**\n * create a privateKey from the given entropy or a new one\n * @param  {Buffer} entropy\n * @return {string}\n */\nexport function createPrivateKey(entropy) {\n  if (entropy) {\n    if (!Buffer.isBuffer(entropy)) throw new Error('EthCrypto.createPrivateKey(): given entropy is no Buffer');\n    if (Buffer.byteLength(entropy, 'utf8') < MIN_ENTROPY_SIZE) throw new Error('EthCrypto.createPrivateKey(): Entropy-size must be at least ' + MIN_ENTROPY_SIZE);\n    var outerHex = keccak256(entropy);\n    return outerHex;\n  } else {\n    var innerHex = keccak256(ethersUtils.concat([ethersUtils.randomBytes(32), ethersUtils.randomBytes(32)]));\n    var middleHex = ethersUtils.concat([ethersUtils.concat([ethersUtils.randomBytes(32), innerHex]), ethersUtils.randomBytes(32)]);\n    var _outerHex = keccak256(middleHex);\n    return _outerHex;\n  }\n}\n\n/**\n * creates a new object with\n * private-, public-Key and address\n * @param {Buffer?} entropy if provided, will use that as single random-source\n */\nexport function createIdentity(entropy) {\n  var privateKey = createPrivateKey(entropy);\n  var wallet = new Wallet(privateKey);\n  var identity = {\n    privateKey: privateKey,\n    // remove trailing '0x04'\n    publicKey: stripHexPrefix(wallet.publicKey).slice(2),\n    address: wallet.address\n  };\n  return identity;\n}","export function removeLeading0x(str) {\n  if (str.startsWith('0x')) return str.substring(2);else return str;\n}\nexport function addLeading0x(str) {\n  if (!str.startsWith('0x')) return '0x' + str;else return str;\n}\nexport function uint8ArrayToHex(arr) {\n  return Buffer.from(arr).toString('hex');\n}\nexport function hexToUnit8Array(str) {\n  return new Uint8Array(Buffer.from(str, 'hex'));\n}","import { publicKeyConvert } from 'secp256k1';\nimport { pubToAddress, toChecksumAddress, toBuffer } from 'ethereumjs-util';\nimport { hexToUnit8Array, uint8ArrayToHex, addLeading0x } from './util';\nexport function compress(startsWith04) {\n  // add trailing 04 if not done before\n  var testBuffer = Buffer.from(startsWith04, 'hex');\n  if (testBuffer.length === 64) startsWith04 = '04' + startsWith04;\n  return uint8ArrayToHex(publicKeyConvert(hexToUnit8Array(startsWith04), true));\n}\nexport function decompress(startsWith02Or03) {\n  // if already decompressed an not has trailing 04\n  var testBuffer = Buffer.from(startsWith02Or03, 'hex');\n  if (testBuffer.length === 64) startsWith02Or03 = '04' + startsWith02Or03;\n  var decompressed = uint8ArrayToHex(publicKeyConvert(hexToUnit8Array(startsWith02Or03), false));\n\n  // remove trailing 04\n  decompressed = decompressed.substring(2);\n  return decompressed;\n}\n\n/**\n * generates the ethereum-adress of the publicKey\n * We create the checksum-adress which is case-sensitive\n * @returns {string} address\n */\nexport function toAddress(publicKey) {\n  // normalize key\n  publicKey = decompress(publicKey);\n  var addressBuffer = pubToAddress(toBuffer(addLeading0x(publicKey)));\n  var checkSumAdress = toChecksumAddress(addLeading0x(addressBuffer.toString('hex')));\n  return checkSumAdress;\n}","import { compress, decompress } from './public-key';\nexport function stringify(cipher) {\n  if (typeof cipher === 'string') return cipher;\n\n  // use compressed key because it's smaller\n  var compressedKey = compress(cipher.ephemPublicKey);\n  var ret = Buffer.concat([Buffer.from(cipher.iv, 'hex'),\n  // 16bit\n  Buffer.from(compressedKey, 'hex'),\n  // 33bit\n  Buffer.from(cipher.mac, 'hex'),\n  // 32bit\n  Buffer.from(cipher.ciphertext, 'hex') // var bit\n  ]);\n\n  return ret.toString('hex');\n}\nexport function parse(str) {\n  if (typeof str !== 'string') return str;\n  var buf = Buffer.from(str, 'hex');\n  var ret = {\n    iv: buf.toString('hex', 0, 16),\n    ephemPublicKey: buf.toString('hex', 16, 49),\n    mac: buf.toString('hex', 49, 81),\n    ciphertext: buf.toString('hex', 81, buf.length)\n  };\n\n  // decompress publicKey\n  ret.ephemPublicKey = '04' + decompress(ret.ephemPublicKey);\n  return ret;\n}","import { decrypt } from 'eccrypto';\nimport { parse } from './cipher';\nimport { removeLeading0x } from './util';\nexport function decryptWithPrivateKey(privateKey, encrypted) {\n  encrypted = parse(encrypted);\n\n  // remove trailing '0x' from privateKey\n  var twoStripped = removeLeading0x(privateKey);\n  var encryptedBuffer = {\n    iv: Buffer.from(encrypted.iv, 'hex'),\n    ephemPublicKey: Buffer.from(encrypted.ephemPublicKey, 'hex'),\n    ciphertext: Buffer.from(encrypted.ciphertext, 'hex'),\n    mac: Buffer.from(encrypted.mac, 'hex')\n  };\n  return decrypt(Buffer.from(twoStripped, 'hex'), encryptedBuffer).then(function (decryptedBuffer) {\n    return decryptedBuffer.toString();\n  });\n}","import { encrypt } from 'eccrypto';\nimport { decompress } from './public-key';\nexport function encryptWithPublicKey(publicKey, message, opts) {\n  // ensure its an uncompressed publicKey\n  publicKey = decompress(publicKey);\n\n  // re-add the compression-flag\n  var pubString = '04' + publicKey;\n  return encrypt(Buffer.from(pubString, 'hex'), Buffer.from(message), opts ? opts : {}).then(function (encryptedBuffers) {\n    var encrypted = {\n      iv: encryptedBuffers.iv.toString('hex'),\n      ephemPublicKey: encryptedBuffers.ephemPublicKey.toString('hex'),\n      ciphertext: encryptedBuffers.ciphertext.toString('hex'),\n      mac: encryptedBuffers.mac.toString('hex')\n    };\n    return encrypted;\n  });\n}","import { privateToPublic, toBuffer } from 'ethereumjs-util';\nimport { addLeading0x } from './util';\n\n/**\n * Generate publicKey from the privateKey.\n * This creates the uncompressed publicKey,\n * where 04 has stripped from left\n * @returns {string}\n */\nexport function publicKeyByPrivateKey(privateKey) {\n  privateKey = addLeading0x(privateKey);\n  var publicKeyBuffer = privateToPublic(toBuffer(privateKey));\n  return publicKeyBuffer.toString('hex');\n}","import { ecdsaRecover } from 'secp256k1';\nimport { removeLeading0x, hexToUnit8Array, uint8ArrayToHex } from './util';\n\n/**\n * returns the publicKey for the privateKey with which the messageHash was signed\n * @param  {string} signature\n * @param  {string} hash\n * @return {string} publicKey\n */\nexport function recoverPublicKey(signature, hash) {\n  signature = removeLeading0x(signature);\n\n  // split into v-value and sig\n  var sigOnly = signature.substring(0, signature.length - 2); // all but last 2 chars\n  var vValue = signature.slice(-2); // last 2 chars\n\n  var recoveryNumber = vValue === '1c' ? 1 : 0;\n  var pubKey = uint8ArrayToHex(ecdsaRecover(hexToUnit8Array(sigOnly), recoveryNumber, hexToUnit8Array(removeLeading0x(hash)), false));\n\n  // remove trailing '04'\n  pubKey = pubKey.slice(2);\n  return pubKey;\n}","import { recoverPublicKey } from './recover-public-key';\nimport { toAddress as addressByPublicKey } from './public-key';\n\n/**\n * returns the adress with which the messageHash was signed\n * @param  {string} sigString\n * @param  {string} hash\n * @return {string} address\n */\nexport function recover(sigString, hash) {\n  var pubkey = recoverPublicKey(sigString, hash);\n  var address = addressByPublicKey(pubkey);\n  return address;\n}","import { ecdsaSign as secp256k1_sign } from 'secp256k1';\nimport { addLeading0x, removeLeading0x } from './util';\n\n/**\n * signs the given message\n * we do not use sign from eth-lib because the pure secp256k1-version is 90% faster\n * @param  {string} privateKey\n * @param  {string} hash\n * @return {string} hexString\n */\nexport function sign(privateKey, hash) {\n  hash = addLeading0x(hash);\n  if (hash.length !== 66) throw new Error('EthCrypto.sign(): Can only sign hashes, given: ' + hash);\n  var sigObj = secp256k1_sign(new Uint8Array(Buffer.from(removeLeading0x(hash), 'hex')), new Uint8Array(Buffer.from(removeLeading0x(privateKey), 'hex')));\n  var recoveryId = sigObj.recid === 1 ? '1c' : '1b';\n  var newSignature = '0x' + Buffer.from(sigObj.signature).toString('hex') + recoveryId;\n  return newSignature;\n}","import { Transaction } from '@ethereumjs/tx';\nimport { publicKeyByPrivateKey } from './public-key-by-private-key';\nimport { toAddress as addressByPublicKey } from './public-key';\nexport function signTransaction(rawTx, privateKey) {\n  var txOptions = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  // check if privateKey->address matches rawTx.from\n  var publicKey = publicKeyByPrivateKey(privateKey);\n  var address = addressByPublicKey(publicKey);\n  if (address != rawTx.from) throw new Error('EthCrypto.signTransaction(): rawTx.from does not match the address of the privateKey');\n  var privateKeyBuffer = Buffer.from(privateKey.replace(/^.{2}/g, ''), 'hex');\n  var tx = Transaction.fromTxData(rawTx, txOptions);\n  var signedTx = tx.sign(privateKeyBuffer);\n  var serializedTx = signedTx.serialize().toString('hex');\n  return serializedTx;\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport { ContractFactory } from 'ethers';\nexport function txDataByCompiled(abi, bytecode, args) {\n  // solc returns a string which is often passed instead of the json\n  if (typeof abi === 'string') abi = JSON.parse(abi);\n\n  // Construct a Contract Factory\n  var factory = new ContractFactory(abi, '0x' + bytecode);\n  var deployTransaction = factory.getDeployTransaction.apply(factory, _toConsumableArray(args));\n  return deployTransaction.data;\n}","import { generateAddress, toChecksumAddress, toBuffer } from 'ethereumjs-util';\nimport { addLeading0x } from './util';\nexport function calculateContractAddress(creatorAddress, nonce) {\n  var addressBuffer = generateAddress(toBuffer(addLeading0x(creatorAddress)), toBuffer(nonce));\n  var address = addressBuffer.toString('hex');\n  return toChecksumAddress(addLeading0x(address));\n}","export const version = \"solidity/5.7.0\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { arrayify, concat, hexlify, zeroPad } from \"@ethersproject/bytes\";\nimport { keccak256 as hashKeccak256 } from \"@ethersproject/keccak256\";\nimport { sha256 as hashSha256 } from \"@ethersproject/sha2\";\nimport { toUtf8Bytes } from \"@ethersproject/strings\";\nconst regexBytes = new RegExp(\"^bytes([0-9]+)$\");\nconst regexNumber = new RegExp(\"^(u?int)([0-9]*)$\");\nconst regexArray = new RegExp(\"^(.*)\\\\[([0-9]*)\\\\]$\");\nconst Zeros = \"0000000000000000000000000000000000000000000000000000000000000000\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nfunction _pack(type, value, isArray) {\n    switch (type) {\n        case \"address\":\n            if (isArray) {\n                return zeroPad(value, 32);\n            }\n            return arrayify(value);\n        case \"string\":\n            return toUtf8Bytes(value);\n        case \"bytes\":\n            return arrayify(value);\n        case \"bool\":\n            value = (value ? \"0x01\" : \"0x00\");\n            if (isArray) {\n                return zeroPad(value, 32);\n            }\n            return arrayify(value);\n    }\n    let match = type.match(regexNumber);\n    if (match) {\n        //let signed = (match[1] === \"int\")\n        let size = parseInt(match[2] || \"256\");\n        if ((match[2] && String(size) !== match[2]) || (size % 8 !== 0) || size === 0 || size > 256) {\n            logger.throwArgumentError(\"invalid number type\", \"type\", type);\n        }\n        if (isArray) {\n            size = 256;\n        }\n        value = BigNumber.from(value).toTwos(size);\n        return zeroPad(value, size / 8);\n    }\n    match = type.match(regexBytes);\n    if (match) {\n        const size = parseInt(match[1]);\n        if (String(size) !== match[1] || size === 0 || size > 32) {\n            logger.throwArgumentError(\"invalid bytes type\", \"type\", type);\n        }\n        if (arrayify(value).byteLength !== size) {\n            logger.throwArgumentError(`invalid value for ${type}`, \"value\", value);\n        }\n        if (isArray) {\n            return arrayify((value + Zeros).substring(0, 66));\n        }\n        return value;\n    }\n    match = type.match(regexArray);\n    if (match && Array.isArray(value)) {\n        const baseType = match[1];\n        const count = parseInt(match[2] || String(value.length));\n        if (count != value.length) {\n            logger.throwArgumentError(`invalid array length for ${type}`, \"value\", value);\n        }\n        const result = [];\n        value.forEach(function (value) {\n            result.push(_pack(baseType, value, true));\n        });\n        return concat(result);\n    }\n    return logger.throwArgumentError(\"invalid type\", \"type\", type);\n}\n// @TODO: Array Enum\nexport function pack(types, values) {\n    if (types.length != values.length) {\n        logger.throwArgumentError(\"wrong number of values; expected ${ types.length }\", \"values\", values);\n    }\n    const tight = [];\n    types.forEach(function (type, index) {\n        tight.push(_pack(type, values[index]));\n    });\n    return hexlify(concat(tight));\n}\nexport function keccak256(types, values) {\n    return hashKeccak256(pack(types, values));\n}\nexport function sha256(types, values) {\n    return hashSha256(pack(types, values));\n}\n//# sourceMappingURL=index.js.map","import { utils as ethersUtils } from 'ethers';\nexport function keccak256(params) {\n  var types = [];\n  var values = [];\n  if (!Array.isArray(params)) {\n    types.push('string');\n    values.push(params);\n  } else {\n    params.forEach(function (p) {\n      types.push(p.type);\n      values.push(p.value);\n    });\n  }\n  return ethersUtils.solidityKeccak256(types, values);\n}\nexport var SIGN_PREFIX = '\\x19Ethereum Signed Message:\\n32';","/**\n * compress/decompress hex-strings to utf16 or base64\n * thx @juvian\n * @link https://stackoverflow.com/a/40471908/3443137\n */\n\nimport { removeLeading0x, addLeading0x } from './util';\nexport function compress(hex) {\n  var base64 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  hex = removeLeading0x(hex);\n\n  // if base64:true, we use our own function because it results in a smaller output\n  if (base64 === true) return Buffer.from(hex, 'hex').toString('base64');\n  var string = '';\n  while (hex.length % 4 != 0) {\n    // we need it to be multiple of 4\n    hex = '0' + hex;\n  }\n  for (var i = 0; i < hex.length; i += 4) {\n    // get char from ascii code which goes from 0 to 65536\n    string += String.fromCharCode(parseInt(hex.substring(i, i + 4), 16));\n  }\n  return string;\n}\nexport function decompress(compressedString) {\n  var base64 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  // if base64:true, we use our own function because it results in a smaller output\n  if (base64 === true) {\n    var ret = Buffer.from(compressedString, 'base64').toString('hex');\n    return addLeading0x(ret);\n  }\n  var hex = '';\n  for (var i = 0; i < compressedString.length; i++) {\n    // get character ascii code and convert to hexa string, adding necessary 0s\n    hex += ((i == 0 ? '' : '000') + compressedString.charCodeAt(i).toString(16)).slice(-4);\n  }\n  hex = hex.toLowerCase();\n  return addLeading0x(hex);\n}","import { utils as ethersUtils } from 'ethers';\n/**\n * split signature-hex into parts\n * @param  {string} hexString\n * @return {{v: string, r: string, s: string}}\n */\nexport function fromString(hexString) {\n  var arr = ethersUtils.splitSignature(hexString);\n  return {\n    // convert \"v\" to hex\n    v: \"0x\".concat(arr.v.toString(16)),\n    r: arr.r,\n    s: arr.s\n  };\n}\n\n/**\n * merge signature-parts to one string\n * @param  {{v: string, r: string, s: string}} sig\n * @return {string} hexString\n */\nexport function toString(sig) {\n  return ethersUtils.joinSignature(sig);\n}","import { createIdentity } from './create-identity';\nimport * as publicKey from './public-key';\nimport { decryptWithPrivateKey } from './decrypt-with-private-key';\nimport { encryptWithPublicKey } from './encrypt-with-public-key';\nimport * as cipher from './cipher';\nimport { publicKeyByPrivateKey } from './public-key-by-private-key';\nimport { recover } from './recover';\nimport { recoverPublicKey } from './recover-public-key';\nimport { sign } from './sign';\nimport { signTransaction } from './sign-transaction';\nimport { txDataByCompiled } from './tx-data-by-compiled';\nimport { calculateContractAddress } from './calculate-contract-address';\nimport * as hash from './hash';\nimport * as hex from './hex';\nimport * as vrs from './vrs';\nimport * as util from './util';\nexport { createIdentity, publicKey, decryptWithPrivateKey, encryptWithPublicKey, cipher, publicKeyByPrivateKey, recover, recoverPublicKey, sign, signTransaction, txDataByCompiled, calculateContractAddress, hash, hex, vrs, util };\nexport default {\n  createIdentity: createIdentity,\n  publicKey: publicKey,\n  decryptWithPrivateKey: decryptWithPrivateKey,\n  encryptWithPublicKey: encryptWithPublicKey,\n  cipher: cipher,\n  publicKeyByPrivateKey: publicKeyByPrivateKey,\n  recover: recover,\n  recoverPublicKey: recoverPublicKey,\n  sign: sign,\n  signTransaction: signTransaction,\n  txDataByCompiled: txDataByCompiled,\n  calculateContractAddress: calculateContractAddress,\n  hash: hash,\n  hex: hex,\n  vrs: vrs,\n  util: util\n};","module.exports = require('./lib')(require('./lib/elliptic'))\n","const EC = require('elliptic').ec\n\nconst ec = new EC('secp256k1')\nconst ecparams = ec.curve\n\n// Hack, we can not use bn.js@5, while elliptic uses bn.js@4\n// See https://github.com/indutny/elliptic/issues/191#issuecomment-569888758\nconst BN = ecparams.n.constructor\n\nfunction loadCompressedPublicKey (first, xbuf) {\n  let x = new BN(xbuf)\n\n  // overflow\n  if (x.cmp(ecparams.p) >= 0) return null\n  x = x.toRed(ecparams.red)\n\n  // compute corresponding Y\n  let y = x.redSqr().redIMul(x).redIAdd(ecparams.b).redSqrt()\n  if ((first === 0x03) !== y.isOdd()) y = y.redNeg()\n\n  return ec.keyPair({ pub: { x: x, y: y } })\n}\n\nfunction loadUncompressedPublicKey (first, xbuf, ybuf) {\n  let x = new BN(xbuf)\n  let y = new BN(ybuf)\n\n  // overflow\n  if (x.cmp(ecparams.p) >= 0 || y.cmp(ecparams.p) >= 0) return null\n\n  x = x.toRed(ecparams.red)\n  y = y.toRed(ecparams.red)\n\n  // is odd flag\n  if ((first === 0x06 || first === 0x07) && y.isOdd() !== (first === 0x07)) return null\n\n  // x*x*x + b = y*y\n  const x3 = x.redSqr().redIMul(x)\n  if (!y.redSqr().redISub(x3.redIAdd(ecparams.b)).isZero()) return null\n\n  return ec.keyPair({ pub: { x: x, y: y } })\n}\n\nfunction loadPublicKey (pubkey) {\n  // length should be validated in interface\n  const first = pubkey[0]\n  switch (first) {\n    case 0x02:\n    case 0x03:\n      if (pubkey.length !== 33) return null\n      return loadCompressedPublicKey(first, pubkey.subarray(1, 33))\n    case 0x04:\n    case 0x06:\n    case 0x07:\n      if (pubkey.length !== 65) return null\n      return loadUncompressedPublicKey(first, pubkey.subarray(1, 33), pubkey.subarray(33, 65))\n    default:\n      return null\n  }\n}\n\nfunction savePublicKey (output, point) {\n  const pubkey = point.encode(null, output.length === 33)\n  // Loop should be faster because we do not need create extra Uint8Array\n  // output.set(new Uint8Array(pubkey))\n  for (let i = 0; i < output.length; ++i) output[i] = pubkey[i]\n}\n\nmodule.exports = {\n  contextRandomize () {\n    return 0\n  },\n\n  privateKeyVerify (seckey) {\n    const bn = new BN(seckey)\n    return bn.cmp(ecparams.n) < 0 && !bn.isZero() ? 0 : 1\n  },\n\n  privateKeyNegate (seckey) {\n    const bn = new BN(seckey)\n    const negate = ecparams.n.sub(bn).umod(ecparams.n).toArrayLike(Uint8Array, 'be', 32)\n    seckey.set(negate)\n    return 0\n  },\n\n  privateKeyTweakAdd (seckey, tweak) {\n    const bn = new BN(tweak)\n    if (bn.cmp(ecparams.n) >= 0) return 1\n\n    bn.iadd(new BN(seckey))\n    if (bn.cmp(ecparams.n) >= 0) bn.isub(ecparams.n)\n    if (bn.isZero()) return 1\n\n    const tweaked = bn.toArrayLike(Uint8Array, 'be', 32)\n    seckey.set(tweaked)\n\n    return 0\n  },\n\n  privateKeyTweakMul (seckey, tweak) {\n    let bn = new BN(tweak)\n    if (bn.cmp(ecparams.n) >= 0 || bn.isZero()) return 1\n\n    bn.imul(new BN(seckey))\n    if (bn.cmp(ecparams.n) >= 0) bn = bn.umod(ecparams.n)\n\n    const tweaked = bn.toArrayLike(Uint8Array, 'be', 32)\n    seckey.set(tweaked)\n\n    return 0\n  },\n\n  publicKeyVerify (pubkey) {\n    const pair = loadPublicKey(pubkey)\n    return pair === null ? 1 : 0\n  },\n\n  publicKeyCreate (output, seckey) {\n    const bn = new BN(seckey)\n    if (bn.cmp(ecparams.n) >= 0 || bn.isZero()) return 1\n\n    const point = ec.keyFromPrivate(seckey).getPublic()\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  publicKeyConvert (output, pubkey) {\n    const pair = loadPublicKey(pubkey)\n    if (pair === null) return 1\n\n    const point = pair.getPublic()\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  publicKeyNegate (output, pubkey) {\n    const pair = loadPublicKey(pubkey)\n    if (pair === null) return 1\n\n    const point = pair.getPublic()\n    point.y = point.y.redNeg()\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  publicKeyCombine (output, pubkeys) {\n    const pairs = new Array(pubkeys.length)\n    for (let i = 0; i < pubkeys.length; ++i) {\n      pairs[i] = loadPublicKey(pubkeys[i])\n      if (pairs[i] === null) return 1\n    }\n\n    let point = pairs[0].getPublic()\n    for (let i = 1; i < pairs.length; ++i) point = point.add(pairs[i].pub)\n    if (point.isInfinity()) return 2\n\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  publicKeyTweakAdd (output, pubkey, tweak) {\n    const pair = loadPublicKey(pubkey)\n    if (pair === null) return 1\n\n    tweak = new BN(tweak)\n    if (tweak.cmp(ecparams.n) >= 0) return 2\n\n    const point = pair.getPublic().add(ecparams.g.mul(tweak))\n    if (point.isInfinity()) return 2\n\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  publicKeyTweakMul (output, pubkey, tweak) {\n    const pair = loadPublicKey(pubkey)\n    if (pair === null) return 1\n\n    tweak = new BN(tweak)\n    if (tweak.cmp(ecparams.n) >= 0 || tweak.isZero()) return 2\n\n    const point = pair.getPublic().mul(tweak)\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  signatureNormalize (sig) {\n    const r = new BN(sig.subarray(0, 32))\n    const s = new BN(sig.subarray(32, 64))\n    if (r.cmp(ecparams.n) >= 0 || s.cmp(ecparams.n) >= 0) return 1\n\n    if (s.cmp(ec.nh) === 1) {\n      sig.set(ecparams.n.sub(s).toArrayLike(Uint8Array, 'be', 32), 32)\n    }\n\n    return 0\n  },\n\n  // Copied 1-to-1 from https://github.com/bitcoinjs/bip66/blob/master/index.js\n  // Adapted for Uint8Array instead Buffer\n  signatureExport (obj, sig) {\n    const sigR = sig.subarray(0, 32)\n    const sigS = sig.subarray(32, 64)\n    if (new BN(sigR).cmp(ecparams.n) >= 0) return 1\n    if (new BN(sigS).cmp(ecparams.n) >= 0) return 1\n\n    const { output } = obj\n\n    // Prepare R\n    let r = output.subarray(4, 4 + 33)\n    r[0] = 0x00\n    r.set(sigR, 1)\n\n    let lenR = 33\n    let posR = 0\n    for (; lenR > 1 && r[posR] === 0x00 && !(r[posR + 1] & 0x80); --lenR, ++posR);\n\n    r = r.subarray(posR)\n    if (r[0] & 0x80) return 1\n    if (lenR > 1 && (r[0] === 0x00) && !(r[1] & 0x80)) return 1\n\n    // Prepare S\n    let s = output.subarray(6 + 33, 6 + 33 + 33)\n    s[0] = 0x00\n    s.set(sigS, 1)\n\n    let lenS = 33\n    let posS = 0\n    for (; lenS > 1 && s[posS] === 0x00 && !(s[posS + 1] & 0x80); --lenS, ++posS);\n\n    s = s.subarray(posS)\n    if (s[0] & 0x80) return 1\n    if (lenS > 1 && (s[0] === 0x00) && !(s[1] & 0x80)) return 1\n\n    // Set output length for return\n    obj.outputlen = 6 + lenR + lenS\n\n    // Output in specified format\n    // 0x30 [total-length] 0x02 [R-length] [R] 0x02 [S-length] [S]\n    output[0] = 0x30\n    output[1] = obj.outputlen - 2\n    output[2] = 0x02\n    output[3] = r.length\n    output.set(r, 4)\n    output[4 + lenR] = 0x02\n    output[5 + lenR] = s.length\n    output.set(s, 6 + lenR)\n\n    return 0\n  },\n\n  // Copied 1-to-1 from https://github.com/bitcoinjs/bip66/blob/master/index.js\n  // Adapted for Uint8Array instead Buffer\n  signatureImport (output, sig) {\n    if (sig.length < 8) return 1\n    if (sig.length > 72) return 1\n    if (sig[0] !== 0x30) return 1\n    if (sig[1] !== sig.length - 2) return 1\n    if (sig[2] !== 0x02) return 1\n\n    const lenR = sig[3]\n    if (lenR === 0) return 1\n    if (5 + lenR >= sig.length) return 1\n    if (sig[4 + lenR] !== 0x02) return 1\n\n    const lenS = sig[5 + lenR]\n    if (lenS === 0) return 1\n    if ((6 + lenR + lenS) !== sig.length) return 1\n\n    if (sig[4] & 0x80) return 1\n    if (lenR > 1 && (sig[4] === 0x00) && !(sig[5] & 0x80)) return 1\n\n    if (sig[lenR + 6] & 0x80) return 1\n    if (lenS > 1 && (sig[lenR + 6] === 0x00) && !(sig[lenR + 7] & 0x80)) return 1\n\n    let sigR = sig.subarray(4, 4 + lenR)\n    if (sigR.length === 33 && sigR[0] === 0x00) sigR = sigR.subarray(1)\n    if (sigR.length > 32) return 1\n\n    let sigS = sig.subarray(6 + lenR)\n    if (sigS.length === 33 && sigS[0] === 0x00) sigS = sigS.slice(1)\n    if (sigS.length > 32) throw new Error('S length is too long')\n\n    let r = new BN(sigR)\n    if (r.cmp(ecparams.n) >= 0) r = new BN(0)\n\n    let s = new BN(sig.subarray(6 + lenR))\n    if (s.cmp(ecparams.n) >= 0) s = new BN(0)\n\n    output.set(r.toArrayLike(Uint8Array, 'be', 32), 0)\n    output.set(s.toArrayLike(Uint8Array, 'be', 32), 32)\n\n    return 0\n  },\n\n  ecdsaSign (obj, message, seckey, data, noncefn) {\n    if (noncefn) {\n      const _noncefn = noncefn\n      noncefn = (counter) => {\n        const nonce = _noncefn(message, seckey, null, data, counter)\n\n        const isValid = nonce instanceof Uint8Array && nonce.length === 32\n        if (!isValid) throw new Error('This is the way')\n\n        return new BN(nonce)\n      }\n    }\n\n    const d = new BN(seckey)\n    if (d.cmp(ecparams.n) >= 0 || d.isZero()) return 1\n\n    let sig\n    try {\n      sig = ec.sign(message, seckey, { canonical: true, k: noncefn, pers: data })\n    } catch (err) {\n      return 1\n    }\n\n    obj.signature.set(sig.r.toArrayLike(Uint8Array, 'be', 32), 0)\n    obj.signature.set(sig.s.toArrayLike(Uint8Array, 'be', 32), 32)\n    obj.recid = sig.recoveryParam\n\n    return 0\n  },\n\n  ecdsaVerify (sig, msg32, pubkey) {\n    const sigObj = { r: sig.subarray(0, 32), s: sig.subarray(32, 64) }\n\n    const sigr = new BN(sigObj.r)\n    const sigs = new BN(sigObj.s)\n    if (sigr.cmp(ecparams.n) >= 0 || sigs.cmp(ecparams.n) >= 0) return 1\n    if (sigs.cmp(ec.nh) === 1 || sigr.isZero() || sigs.isZero()) return 3\n\n    const pair = loadPublicKey(pubkey)\n    if (pair === null) return 2\n\n    const point = pair.getPublic()\n    const isValid = ec.verify(msg32, sigObj, point)\n    return isValid ? 0 : 3\n  },\n\n  ecdsaRecover (output, sig, recid, msg32) {\n    const sigObj = { r: sig.slice(0, 32), s: sig.slice(32, 64) }\n\n    const sigr = new BN(sigObj.r)\n    const sigs = new BN(sigObj.s)\n    if (sigr.cmp(ecparams.n) >= 0 || sigs.cmp(ecparams.n) >= 0) return 1\n\n    if (sigr.isZero() || sigs.isZero()) return 2\n\n    // Can throw `throw new Error('Unable to find sencond key candinate');`\n    let point\n    try {\n      point = ec.recoverPubKey(msg32, sigObj, recid)\n    } catch (err) {\n      return 2\n    }\n\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  ecdh (output, pubkey, seckey, data, hashfn, xbuf, ybuf) {\n    const pair = loadPublicKey(pubkey)\n    if (pair === null) return 1\n\n    const scalar = new BN(seckey)\n    if (scalar.cmp(ecparams.n) >= 0 || scalar.isZero()) return 2\n\n    const point = pair.getPublic().mul(scalar)\n\n    if (hashfn === undefined) {\n      const data = point.encode(null, true)\n      const sha256 = ec.hash().update(data).digest()\n      for (let i = 0; i < 32; ++i) output[i] = sha256[i]\n    } else {\n      if (!xbuf) xbuf = new Uint8Array(32)\n      const x = point.getX().toArray('be', 32)\n      for (let i = 0; i < 32; ++i) xbuf[i] = x[i]\n\n      if (!ybuf) ybuf = new Uint8Array(32)\n      const y = point.getY().toArray('be', 32)\n      for (let i = 0; i < 32; ++i) ybuf[i] = y[i]\n\n      const hash = hashfn(xbuf, ybuf, data)\n\n      const isValid = hash instanceof Uint8Array && hash.length === output.length\n      if (!isValid) return 2\n\n      output.set(hash)\n    }\n\n    return 0\n  }\n}\n","const errors = {\n  IMPOSSIBLE_CASE: 'Impossible case. Please create issue.',\n  TWEAK_ADD:\n    'The tweak was out of range or the resulted private key is invalid',\n  TWEAK_MUL: 'The tweak was out of range or equal to zero',\n  CONTEXT_RANDOMIZE_UNKNOW: 'Unknow error on context randomization',\n  SECKEY_INVALID: 'Private Key is invalid',\n  PUBKEY_PARSE: 'Public Key could not be parsed',\n  PUBKEY_SERIALIZE: 'Public Key serialization error',\n  PUBKEY_COMBINE: 'The sum of the public keys is not valid',\n  SIG_PARSE: 'Signature could not be parsed',\n  SIGN: 'The nonce generation function failed, or the private key was invalid',\n  RECOVER: 'Public key could not be recover',\n  ECDH: 'Scalar was invalid (zero or overflow)'\n}\n\nfunction assert (cond, msg) {\n  if (!cond) throw new Error(msg)\n}\n\nfunction isUint8Array (name, value, length) {\n  assert(value instanceof Uint8Array, `Expected ${name} to be an Uint8Array`)\n\n  if (length !== undefined) {\n    if (Array.isArray(length)) {\n      const numbers = length.join(', ')\n      const msg = `Expected ${name} to be an Uint8Array with length [${numbers}]`\n      assert(length.includes(value.length), msg)\n    } else {\n      const msg = `Expected ${name} to be an Uint8Array with length ${length}`\n      assert(value.length === length, msg)\n    }\n  }\n}\n\nfunction isCompressed (value) {\n  assert(toTypeString(value) === 'Boolean', 'Expected compressed to be a Boolean')\n}\n\nfunction getAssertedOutput (output = (len) => new Uint8Array(len), length) {\n  if (typeof output === 'function') output = output(length)\n  isUint8Array('output', output, length)\n  return output\n}\n\nfunction toTypeString (value) {\n  return Object.prototype.toString.call(value).slice(8, -1)\n}\n\nmodule.exports = (secp256k1) => {\n  return {\n    contextRandomize (seed) {\n      assert(\n        seed === null || seed instanceof Uint8Array,\n        'Expected seed to be an Uint8Array or null'\n      )\n      if (seed !== null) isUint8Array('seed', seed, 32)\n\n      switch (secp256k1.contextRandomize(seed)) {\n        case 1:\n          throw new Error(errors.CONTEXT_RANDOMIZE_UNKNOW)\n      }\n    },\n\n    privateKeyVerify (seckey) {\n      isUint8Array('private key', seckey, 32)\n\n      return secp256k1.privateKeyVerify(seckey) === 0\n    },\n\n    privateKeyNegate (seckey) {\n      isUint8Array('private key', seckey, 32)\n\n      switch (secp256k1.privateKeyNegate(seckey)) {\n        case 0:\n          return seckey\n        case 1:\n          throw new Error(errors.IMPOSSIBLE_CASE)\n      }\n    },\n\n    privateKeyTweakAdd (seckey, tweak) {\n      isUint8Array('private key', seckey, 32)\n      isUint8Array('tweak', tweak, 32)\n\n      switch (secp256k1.privateKeyTweakAdd(seckey, tweak)) {\n        case 0:\n          return seckey\n        case 1:\n          throw new Error(errors.TWEAK_ADD)\n      }\n    },\n\n    privateKeyTweakMul (seckey, tweak) {\n      isUint8Array('private key', seckey, 32)\n      isUint8Array('tweak', tweak, 32)\n\n      switch (secp256k1.privateKeyTweakMul(seckey, tweak)) {\n        case 0:\n          return seckey\n        case 1:\n          throw new Error(errors.TWEAK_MUL)\n      }\n    },\n\n    publicKeyVerify (pubkey) {\n      isUint8Array('public key', pubkey, [33, 65])\n\n      return secp256k1.publicKeyVerify(pubkey) === 0\n    },\n\n    publicKeyCreate (seckey, compressed = true, output) {\n      isUint8Array('private key', seckey, 32)\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.publicKeyCreate(output, seckey)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.SECKEY_INVALID)\n        case 2:\n          throw new Error(errors.PUBKEY_SERIALIZE)\n      }\n    },\n\n    publicKeyConvert (pubkey, compressed = true, output) {\n      isUint8Array('public key', pubkey, [33, 65])\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.publicKeyConvert(output, pubkey)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE)\n        case 2:\n          throw new Error(errors.PUBKEY_SERIALIZE)\n      }\n    },\n\n    publicKeyNegate (pubkey, compressed = true, output) {\n      isUint8Array('public key', pubkey, [33, 65])\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.publicKeyNegate(output, pubkey)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE)\n        case 2:\n          throw new Error(errors.IMPOSSIBLE_CASE)\n        case 3:\n          throw new Error(errors.PUBKEY_SERIALIZE)\n      }\n    },\n\n    publicKeyCombine (pubkeys, compressed = true, output) {\n      assert(Array.isArray(pubkeys), 'Expected public keys to be an Array')\n      assert(pubkeys.length > 0, 'Expected public keys array will have more than zero items')\n      for (const pubkey of pubkeys) {\n        isUint8Array('public key', pubkey, [33, 65])\n      }\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.publicKeyCombine(output, pubkeys)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE)\n        case 2:\n          throw new Error(errors.PUBKEY_COMBINE)\n        case 3:\n          throw new Error(errors.PUBKEY_SERIALIZE)\n      }\n    },\n\n    publicKeyTweakAdd (pubkey, tweak, compressed = true, output) {\n      isUint8Array('public key', pubkey, [33, 65])\n      isUint8Array('tweak', tweak, 32)\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.publicKeyTweakAdd(output, pubkey, tweak)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE)\n        case 2:\n          throw new Error(errors.TWEAK_ADD)\n      }\n    },\n\n    publicKeyTweakMul (pubkey, tweak, compressed = true, output) {\n      isUint8Array('public key', pubkey, [33, 65])\n      isUint8Array('tweak', tweak, 32)\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.publicKeyTweakMul(output, pubkey, tweak)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE)\n        case 2:\n          throw new Error(errors.TWEAK_MUL)\n      }\n    },\n\n    signatureNormalize (sig) {\n      isUint8Array('signature', sig, 64)\n\n      switch (secp256k1.signatureNormalize(sig)) {\n        case 0:\n          return sig\n        case 1:\n          throw new Error(errors.SIG_PARSE)\n      }\n    },\n\n    signatureExport (sig, output) {\n      isUint8Array('signature', sig, 64)\n      output = getAssertedOutput(output, 72)\n\n      const obj = { output, outputlen: 72 }\n      switch (secp256k1.signatureExport(obj, sig)) {\n        case 0:\n          return output.slice(0, obj.outputlen)\n        case 1:\n          throw new Error(errors.SIG_PARSE)\n        case 2:\n          throw new Error(errors.IMPOSSIBLE_CASE)\n      }\n    },\n\n    signatureImport (sig, output) {\n      isUint8Array('signature', sig)\n      output = getAssertedOutput(output, 64)\n\n      switch (secp256k1.signatureImport(output, sig)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.SIG_PARSE)\n        case 2:\n          throw new Error(errors.IMPOSSIBLE_CASE)\n      }\n    },\n\n    ecdsaSign (msg32, seckey, options = {}, output) {\n      isUint8Array('message', msg32, 32)\n      isUint8Array('private key', seckey, 32)\n      assert(toTypeString(options) === 'Object', 'Expected options to be an Object')\n      if (options.data !== undefined) isUint8Array('options.data', options.data)\n      if (options.noncefn !== undefined) assert(toTypeString(options.noncefn) === 'Function', 'Expected options.noncefn to be a Function')\n      output = getAssertedOutput(output, 64)\n\n      const obj = { signature: output, recid: null }\n      switch (secp256k1.ecdsaSign(obj, msg32, seckey, options.data, options.noncefn)) {\n        case 0:\n          return obj\n        case 1:\n          throw new Error(errors.SIGN)\n        case 2:\n          throw new Error(errors.IMPOSSIBLE_CASE)\n      }\n    },\n\n    ecdsaVerify (sig, msg32, pubkey) {\n      isUint8Array('signature', sig, 64)\n      isUint8Array('message', msg32, 32)\n      isUint8Array('public key', pubkey, [33, 65])\n\n      switch (secp256k1.ecdsaVerify(sig, msg32, pubkey)) {\n        case 0:\n          return true\n        case 3:\n          return false\n        case 1:\n          throw new Error(errors.SIG_PARSE)\n        case 2:\n          throw new Error(errors.PUBKEY_PARSE)\n      }\n    },\n\n    ecdsaRecover (sig, recid, msg32, compressed = true, output) {\n      isUint8Array('signature', sig, 64)\n      assert(\n        toTypeString(recid) === 'Number' &&\n          recid >= 0 &&\n          recid <= 3,\n        'Expected recovery id to be a Number within interval [0, 3]'\n      )\n      isUint8Array('message', msg32, 32)\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.ecdsaRecover(output, sig, recid, msg32)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.SIG_PARSE)\n        case 2:\n          throw new Error(errors.RECOVER)\n        case 3:\n          throw new Error(errors.IMPOSSIBLE_CASE)\n      }\n    },\n\n    ecdh (pubkey, seckey, options = {}, output) {\n      isUint8Array('public key', pubkey, [33, 65])\n      isUint8Array('private key', seckey, 32)\n      assert(toTypeString(options) === 'Object', 'Expected options to be an Object')\n      if (options.data !== undefined) isUint8Array('options.data', options.data)\n      if (options.hashfn !== undefined) {\n        assert(toTypeString(options.hashfn) === 'Function', 'Expected options.hashfn to be a Function')\n        if (options.xbuf !== undefined) isUint8Array('options.xbuf', options.xbuf, 32)\n        if (options.ybuf !== undefined) isUint8Array('options.ybuf', options.ybuf, 32)\n        isUint8Array('output', output)\n      } else {\n        output = getAssertedOutput(output, 32)\n      }\n\n      switch (secp256k1.ecdh(output, pubkey, seckey, options.data, options.hashfn, options.xbuf, options.ybuf)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE)\n        case 2:\n          throw new Error(errors.ECDH)\n      }\n    }\n  }\n}\n","\"use strict\";\n\n(function(root) {\n    const MAX_VALUE = 0x7fffffff;\n\n    // The SHA256 and PBKDF2 implementation are from scrypt-async-js:\n    // See: https://github.com/dchest/scrypt-async-js\n    function SHA256(m) {\n        const K = new Uint32Array([\n           0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b,\n           0x59f111f1, 0x923f82a4, 0xab1c5ed5, 0xd807aa98, 0x12835b01,\n           0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7,\n           0xc19bf174, 0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,\n           0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da, 0x983e5152,\n           0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147,\n           0x06ca6351, 0x14292967, 0x27b70a85, 0x2e1b2138, 0x4d2c6dfc,\n           0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n           0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819,\n           0xd6990624, 0xf40e3585, 0x106aa070, 0x19a4c116, 0x1e376c08,\n           0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f,\n           0x682e6ff3, 0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n           0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n       ]);\n\n        let h0 = 0x6a09e667, h1 = 0xbb67ae85, h2 = 0x3c6ef372, h3 = 0xa54ff53a;\n        let h4 = 0x510e527f, h5 = 0x9b05688c, h6 = 0x1f83d9ab, h7 = 0x5be0cd19;\n        const w = new Uint32Array(64);\n\n        function blocks(p) {\n            let off = 0, len = p.length;\n            while (len >= 64) {\n                let a = h0, b = h1, c = h2, d = h3, e = h4, f = h5, g = h6, h = h7, u, i, j, t1, t2;\n\n                for (i = 0; i < 16; i++) {\n                    j = off + i*4;\n                    w[i] = ((p[j] & 0xff)<<24) | ((p[j+1] & 0xff)<<16) |\n                    ((p[j+2] & 0xff)<<8) | (p[j+3] & 0xff);\n                }\n\n                for (i = 16; i < 64; i++) {\n                    u = w[i-2];\n                    t1 = ((u>>>17) | (u<<(32-17))) ^ ((u>>>19) | (u<<(32-19))) ^ (u>>>10);\n\n                    u = w[i-15];\n                    t2 = ((u>>>7) | (u<<(32-7))) ^ ((u>>>18) | (u<<(32-18))) ^ (u>>>3);\n\n                    w[i] = (((t1 + w[i-7]) | 0) + ((t2 + w[i-16]) | 0)) | 0;\n                }\n\n                for (i = 0; i < 64; i++) {\n                    t1 = ((((((e>>>6) | (e<<(32-6))) ^ ((e>>>11) | (e<<(32-11))) ^\n                             ((e>>>25) | (e<<(32-25)))) + ((e & f) ^ (~e & g))) | 0) +\n                          ((h + ((K[i] + w[i]) | 0)) | 0)) | 0;\n\n                    t2 = ((((a>>>2) | (a<<(32-2))) ^ ((a>>>13) | (a<<(32-13))) ^\n                           ((a>>>22) | (a<<(32-22)))) + ((a & b) ^ (a & c) ^ (b & c))) | 0;\n\n                    h = g;\n                    g = f;\n                    f = e;\n                    e = (d + t1) | 0;\n                    d = c;\n                    c = b;\n                    b = a;\n                    a = (t1 + t2) | 0;\n                }\n\n                h0 = (h0 + a) | 0;\n                h1 = (h1 + b) | 0;\n                h2 = (h2 + c) | 0;\n                h3 = (h3 + d) | 0;\n                h4 = (h4 + e) | 0;\n                h5 = (h5 + f) | 0;\n                h6 = (h6 + g) | 0;\n                h7 = (h7 + h) | 0;\n\n                off += 64;\n                len -= 64;\n            }\n        }\n\n        blocks(m);\n\n        let i, bytesLeft = m.length % 64,\n        bitLenHi = (m.length / 0x20000000) | 0,\n        bitLenLo = m.length << 3,\n        numZeros = (bytesLeft < 56) ? 56 : 120,\n        p = m.slice(m.length - bytesLeft, m.length);\n\n        p.push(0x80);\n        for (i = bytesLeft + 1; i < numZeros; i++) { p.push(0); }\n        p.push((bitLenHi >>> 24) & 0xff);\n        p.push((bitLenHi >>> 16) & 0xff);\n        p.push((bitLenHi >>> 8)  & 0xff);\n        p.push((bitLenHi >>> 0)  & 0xff);\n        p.push((bitLenLo >>> 24) & 0xff);\n        p.push((bitLenLo >>> 16) & 0xff);\n        p.push((bitLenLo >>> 8)  & 0xff);\n        p.push((bitLenLo >>> 0)  & 0xff);\n\n        blocks(p);\n\n        return [\n            (h0 >>> 24) & 0xff, (h0 >>> 16) & 0xff, (h0 >>> 8) & 0xff, (h0 >>> 0) & 0xff,\n            (h1 >>> 24) & 0xff, (h1 >>> 16) & 0xff, (h1 >>> 8) & 0xff, (h1 >>> 0) & 0xff,\n            (h2 >>> 24) & 0xff, (h2 >>> 16) & 0xff, (h2 >>> 8) & 0xff, (h2 >>> 0) & 0xff,\n            (h3 >>> 24) & 0xff, (h3 >>> 16) & 0xff, (h3 >>> 8) & 0xff, (h3 >>> 0) & 0xff,\n            (h4 >>> 24) & 0xff, (h4 >>> 16) & 0xff, (h4 >>> 8) & 0xff, (h4 >>> 0) & 0xff,\n            (h5 >>> 24) & 0xff, (h5 >>> 16) & 0xff, (h5 >>> 8) & 0xff, (h5 >>> 0) & 0xff,\n            (h6 >>> 24) & 0xff, (h6 >>> 16) & 0xff, (h6 >>> 8) & 0xff, (h6 >>> 0) & 0xff,\n            (h7 >>> 24) & 0xff, (h7 >>> 16) & 0xff, (h7 >>> 8) & 0xff, (h7 >>> 0) & 0xff\n        ];\n    }\n\n    function PBKDF2_HMAC_SHA256_OneIter(password, salt, dkLen) {\n        // compress password if it's longer than hash block length\n        password = (password.length <= 64) ? password : SHA256(password);\n\n        const innerLen = 64 + salt.length + 4;\n        const inner = new Array(innerLen);\n        const outerKey = new Array(64);\n\n        let i;\n        let dk = [];\n\n        // inner = (password ^ ipad) || salt || counter\n        for (i = 0; i < 64; i++) { inner[i] = 0x36; }\n        for (i = 0; i < password.length; i++) { inner[i] ^= password[i]; }\n        for (i = 0; i < salt.length; i++) { inner[64 + i] = salt[i]; }\n        for (i = innerLen - 4; i < innerLen; i++) { inner[i] = 0; }\n\n        // outerKey = password ^ opad\n        for (i = 0; i < 64; i++) outerKey[i] = 0x5c;\n        for (i = 0; i < password.length; i++) outerKey[i] ^= password[i];\n\n        // increments counter inside inner\n        function incrementCounter() {\n            for (let i = innerLen - 1; i >= innerLen - 4; i--) {\n                inner[i]++;\n                if (inner[i] <= 0xff) return;\n                inner[i] = 0;\n            }\n        }\n\n        // output blocks = SHA256(outerKey || SHA256(inner)) ...\n        while (dkLen >= 32) {\n            incrementCounter();\n            dk = dk.concat(SHA256(outerKey.concat(SHA256(inner))));\n            dkLen -= 32;\n        }\n        if (dkLen > 0) {\n            incrementCounter();\n            dk = dk.concat(SHA256(outerKey.concat(SHA256(inner))).slice(0, dkLen));\n        }\n\n        return dk;\n    }\n\n    // The following is an adaptation of scryptsy\n    // See: https://www.npmjs.com/package/scryptsy\n    function blockmix_salsa8(BY, Yi, r, x, _X) {\n        let i;\n\n        arraycopy(BY, (2 * r - 1) * 16, _X, 0, 16);\n        for (i = 0; i < 2 * r; i++) {\n            blockxor(BY, i * 16, _X, 16);\n            salsa20_8(_X, x);\n            arraycopy(_X, 0, BY, Yi + (i * 16), 16);\n        }\n\n        for (i = 0; i < r; i++) {\n            arraycopy(BY, Yi + (i * 2) * 16, BY, (i * 16), 16);\n        }\n\n        for (i = 0; i < r; i++) {\n            arraycopy(BY, Yi + (i * 2 + 1) * 16, BY, (i + r) * 16, 16);\n        }\n    }\n\n    function R(a, b) {\n        return (a << b) | (a >>> (32 - b));\n    }\n\n    function salsa20_8(B, x) {\n        arraycopy(B, 0, x, 0, 16);\n\n        for (let i = 8; i > 0; i -= 2) {\n            x[ 4] ^= R(x[ 0] + x[12], 7);\n            x[ 8] ^= R(x[ 4] + x[ 0], 9);\n            x[12] ^= R(x[ 8] + x[ 4], 13);\n            x[ 0] ^= R(x[12] + x[ 8], 18);\n            x[ 9] ^= R(x[ 5] + x[ 1], 7);\n            x[13] ^= R(x[ 9] + x[ 5], 9);\n            x[ 1] ^= R(x[13] + x[ 9], 13);\n            x[ 5] ^= R(x[ 1] + x[13], 18);\n            x[14] ^= R(x[10] + x[ 6], 7);\n            x[ 2] ^= R(x[14] + x[10], 9);\n            x[ 6] ^= R(x[ 2] + x[14], 13);\n            x[10] ^= R(x[ 6] + x[ 2], 18);\n            x[ 3] ^= R(x[15] + x[11], 7);\n            x[ 7] ^= R(x[ 3] + x[15], 9);\n            x[11] ^= R(x[ 7] + x[ 3], 13);\n            x[15] ^= R(x[11] + x[ 7], 18);\n            x[ 1] ^= R(x[ 0] + x[ 3], 7);\n            x[ 2] ^= R(x[ 1] + x[ 0], 9);\n            x[ 3] ^= R(x[ 2] + x[ 1], 13);\n            x[ 0] ^= R(x[ 3] + x[ 2], 18);\n            x[ 6] ^= R(x[ 5] + x[ 4], 7);\n            x[ 7] ^= R(x[ 6] + x[ 5], 9);\n            x[ 4] ^= R(x[ 7] + x[ 6], 13);\n            x[ 5] ^= R(x[ 4] + x[ 7], 18);\n            x[11] ^= R(x[10] + x[ 9], 7);\n            x[ 8] ^= R(x[11] + x[10], 9);\n            x[ 9] ^= R(x[ 8] + x[11], 13);\n            x[10] ^= R(x[ 9] + x[ 8], 18);\n            x[12] ^= R(x[15] + x[14], 7);\n            x[13] ^= R(x[12] + x[15], 9);\n            x[14] ^= R(x[13] + x[12], 13);\n            x[15] ^= R(x[14] + x[13], 18);\n        }\n\n        for (let i = 0; i < 16; ++i) {\n            B[i] += x[i];\n        }\n    }\n\n    // naive approach... going back to loop unrolling may yield additional performance\n    function blockxor(S, Si, D, len) {\n        for (let i = 0; i < len; i++) {\n            D[i] ^= S[Si + i]\n        }\n    }\n\n    function arraycopy(src, srcPos, dest, destPos, length) {\n        while (length--) {\n            dest[destPos++] = src[srcPos++];\n        }\n    }\n\n    function checkBufferish(o) {\n        if (!o || typeof(o.length) !== 'number') { return false; }\n\n        for (let i = 0; i < o.length; i++) {\n            const v = o[i];\n            if (typeof(v) !== 'number' || v % 1 || v < 0 || v >= 256) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    function ensureInteger(value, name) {\n        if (typeof(value) !== \"number\" || (value % 1)) { throw new Error('invalid ' + name); }\n        return value;\n    }\n\n    // N = Cpu cost, r = Memory cost, p = parallelization cost\n    // callback(error, progress, key)\n    function _scrypt(password, salt, N, r, p, dkLen, callback) {\n\n        N = ensureInteger(N, 'N');\n        r = ensureInteger(r, 'r');\n        p = ensureInteger(p, 'p');\n\n        dkLen = ensureInteger(dkLen, 'dkLen');\n\n        if (N === 0 || (N & (N - 1)) !== 0) { throw new Error('N must be power of 2'); }\n\n        if (N > MAX_VALUE / 128 / r) { throw new Error('N too large'); }\n        if (r > MAX_VALUE / 128 / p) { throw new Error('r too large'); }\n\n        if (!checkBufferish(password)) {\n            throw new Error('password must be an array or buffer');\n        }\n        password = Array.prototype.slice.call(password);\n\n        if (!checkBufferish(salt)) {\n            throw new Error('salt must be an array or buffer');\n        }\n        salt = Array.prototype.slice.call(salt);\n\n        let b = PBKDF2_HMAC_SHA256_OneIter(password, salt, p * 128 * r);\n        const B = new Uint32Array(p * 32 * r)\n        for (let i = 0; i < B.length; i++) {\n            const j = i * 4;\n            B[i] = ((b[j + 3] & 0xff) << 24) |\n                   ((b[j + 2] & 0xff) << 16) |\n                   ((b[j + 1] & 0xff) << 8) |\n                   ((b[j + 0] & 0xff) << 0);\n        }\n\n        const XY = new Uint32Array(64 * r);\n        const V = new Uint32Array(32 * r * N);\n\n        const Yi = 32 * r;\n\n        // scratch space\n        const x = new Uint32Array(16);       // salsa20_8\n        const _X = new Uint32Array(16);      // blockmix_salsa8\n\n        const totalOps = p * N * 2;\n        let currentOp = 0;\n        let lastPercent10 = null;\n\n        // Set this to true to abandon the scrypt on the next step\n        let stop = false;\n\n        // State information\n        let state = 0;\n        let i0 = 0, i1;\n        let Bi;\n\n        // How many blockmix_salsa8 can we do per step?\n        const limit = callback ? parseInt(1000 / r): 0xffffffff;\n\n        // Trick from scrypt-async; if there is a setImmediate shim in place, use it\n        const nextTick = (typeof(setImmediate) !== 'undefined') ? setImmediate : setTimeout;\n\n        // This is really all I changed; making scryptsy a state machine so we occasionally\n        // stop and give other evnts on the evnt loop a chance to run. ~RicMoo\n        const incrementalSMix = function() {\n            if (stop) {\n                return callback(new Error('cancelled'), currentOp / totalOps);\n            }\n\n            let steps;\n\n            switch (state) {\n                case 0:\n                    // for (var i = 0; i < p; i++)...\n                    Bi = i0 * 32 * r;\n\n                    arraycopy(B, Bi, XY, 0, Yi);                       // ROMix - 1\n\n                    state = 1;                                         // Move to ROMix 2\n                    i1 = 0;\n\n                    // Fall through\n\n                case 1:\n\n                    // Run up to 1000 steps of the first inner smix loop\n                    steps = N - i1;\n                    if (steps > limit) { steps = limit; }\n                    for (let i = 0; i < steps; i++) {                  // ROMix - 2\n                        arraycopy(XY, 0, V, (i1 + i) * Yi, Yi)         // ROMix - 3\n                        blockmix_salsa8(XY, Yi, r, x, _X);             // ROMix - 4\n                    }\n\n                    // for (var i = 0; i < N; i++)\n                    i1 += steps;\n                    currentOp += steps;\n\n                    if (callback) {\n                        // Call the callback with the progress (optionally stopping us)\n                        const percent10 = parseInt(1000 * currentOp / totalOps);\n                        if (percent10 !== lastPercent10) {\n                            stop = callback(null, currentOp / totalOps);\n                            if (stop) { break; }\n                            lastPercent10 = percent10;\n                        }\n                    }\n\n                    if (i1 < N) { break; }\n\n                    i1 = 0;                                          // Move to ROMix 6\n                    state = 2;\n\n                    // Fall through\n\n                case 2:\n\n                    // Run up to 1000 steps of the second inner smix loop\n                    steps = N - i1;\n                    if (steps > limit) { steps = limit; }\n                    for (let i = 0; i < steps; i++) {                // ROMix - 6\n                        const offset = (2 * r - 1) * 16;             // ROMix - 7\n                        const j = XY[offset] & (N - 1);\n                        blockxor(V, j * Yi, XY, Yi);                 // ROMix - 8 (inner)\n                        blockmix_salsa8(XY, Yi, r, x, _X);           // ROMix - 9 (outer)\n                    }\n\n                    // for (var i = 0; i < N; i++)...\n                    i1 += steps;\n                    currentOp += steps;\n\n                    // Call the callback with the progress (optionally stopping us)\n                    if (callback) {\n                        const percent10 = parseInt(1000 * currentOp / totalOps);\n                        if (percent10 !== lastPercent10) {\n                            stop = callback(null, currentOp / totalOps);\n                            if (stop) { break; }\n                            lastPercent10 = percent10;\n                        }\n                    }\n\n                    if (i1 < N) { break; }\n\n                    arraycopy(XY, 0, B, Bi, Yi);                     // ROMix - 10\n\n                    // for (var i = 0; i < p; i++)...\n                    i0++;\n                    if (i0 < p) {\n                        state = 0;\n                        break;\n                    }\n\n                    b = [];\n                    for (let i = 0; i < B.length; i++) {\n                        b.push((B[i] >>  0) & 0xff);\n                        b.push((B[i] >>  8) & 0xff);\n                        b.push((B[i] >> 16) & 0xff);\n                        b.push((B[i] >> 24) & 0xff);\n                    }\n\n                    const derivedKey = PBKDF2_HMAC_SHA256_OneIter(password, b, dkLen);\n\n                    // Send the result to the callback\n                    if (callback) { callback(null, 1.0, derivedKey); }\n\n                    // Done; don't break (which would reschedule)\n                    return derivedKey;\n            }\n\n            // Schedule the next steps\n            if (callback) { nextTick(incrementalSMix); }\n        }\n\n        // Run the smix state machine until completion\n        if (!callback) {\n            while (true) {\n                const derivedKey = incrementalSMix();\n                if (derivedKey != undefined) { return derivedKey; }\n            }\n        }\n\n        // Bootstrap the async incremental smix\n        incrementalSMix();\n    }\n\n    const lib = {\n        scrypt: function(password, salt, N, r, p, dkLen, progressCallback) {\n            return new Promise(function(resolve, reject) {\n                let lastProgress = 0;\n                if (progressCallback) { progressCallback(0); }\n                _scrypt(password, salt, N, r, p, dkLen, function(error, progress, key) {\n                    if (error) {\n                        reject(error);\n                    } else if (key) {\n                        if (progressCallback && lastProgress !== 1) {\n                            progressCallback(1);\n                        }\n                        resolve(new Uint8Array(key));\n                    } else if (progressCallback && progress !== lastProgress) {\n                        lastProgress = progress;\n                        return progressCallback(progress);\n                    }\n                });\n            });\n        },\n        syncScrypt: function(password, salt, N, r, p, dkLen) {\n            return new Uint8Array(_scrypt(password, salt, N, r, p, dkLen));\n        }\n    };\n\n    // node.js\n    if (typeof(exports) !== 'undefined') {\n       module.exports = lib;\n\n    // RequireJS/AMD\n    // http://www.requirejs.org/docs/api.html\n    // https://github.com/amdjs/amdjs-api/wiki/AMD\n    } else if (typeof(define) === 'function' && define.amd) {\n        define(lib);\n\n    // Web Browsers\n    } else if (root) {\n\n        // If there was an existing library \"scrypt\", make sure it is still available\n        if (root.scrypt) {\n            root._scrypt = root.scrypt;\n        }\n\n        root.scrypt = lib;\n    }\n\n})(this);\n"],"names":["root","checkInt","value","parseInt","checkInts","arrayish","length","i","coerceArray","arg","copy","buffer","ArrayBuffer","isView","name","slice","Array","prototype","call","isArray","Error","Uint8Array","createArray","copyArray","sourceArray","targetArray","targetStart","sourceStart","sourceEnd","set","Hex","convertUtf8","toBytes","text","result","encodeURI","c","charCodeAt","push","substr","fromBytes","bytes","String","fromCharCode","join","convertHex","v","numberOfRounds","rcon","S","Si","T1","T2","T3","T4","T5","T6","T7","T8","U1","U2","U3","U4","convertToInt32","AES","key","this","Object","defineProperty","_prepare","rounds","_Ke","_Kd","index","roundKeyCount","KC","tk","tt","rconpointer","t","r","encrypt","plaintext","a","decrypt","ciphertext","ModeOfOperationECB","description","_aes","block","ModeOfOperationCBC","iv","_lastCipherblock","j","ModeOfOperationCFB","segmentSize","_shiftRegister","xorSegment","encrypted","ModeOfOperationOFB","_lastPrecipher","_lastPrecipherIndex","Counter","initialValue","_counter","setValue","setBytes","increment","ModeOfOperationCTR","counter","_remainingCounter","_remainingCounterIndex","aesjs","ModeOfOperation","ecb","cbc","cfb","ofb","ctr","utils","hex","utf8","padding","pkcs7","pad","data","padder","strip","_arrayTest","module","exports","ec","EC","browserCrypto","g","crypto","msCrypto","subtle","webkitSubtle","nodeCrypto","EC_GROUP_ORDER","Buffer","from","ZERO32","alloc","assert","condition","message","isValidPrivateKey","privateKey","x","isBuffer","compare","randomBytes","size","arr","getRandomValues","sha512","msg","Promise","resolve","createHash","update","digest","getAes","op","importKey","then","cryptoKey","encAlgorithm","cipher","createCipheriv","firstChunk","secondChunk","final","concat","decipher","createDecipheriv","aesCbcEncrypt","aesCbcDecrypt","getPublic","keyFromPrivate","derive","privateKeyA","publicKeyB","keyA","keyB","keyFromPublic","Px","toArray","publicKeyTo","opts","ephemPublicKey","macKey","ephemPrivateKey","hash","encryptionKey","dataToMac","hmac","createHmac","hmacSha256Sign","mac","sig","b1","b2","res","equalConstTime","macGood","logger","anyGlobal","self","window","getGlobal","throwArgumentError","arrayify","warn","throwError","errors","UNSUPPORTED_OPERATION","operation","pbkdf2","password","salt","iterations","keylen","hashAlgorithm","hLen","l","DK","block1","T","U","Math","ceil","k","destPos","len","hexlify","Wordlist","constructor","locale","checkAbstract","split","mnemonic","toLowerCase","words","static","wordlist","word","getWord","getWordIndex","id","lang","loadWords","replace","substring","check","langEn","super","indexOf","register","wordlists","en","N","MasterSecret","HardenedBit","getUpperMask","bits","bytes32","hexZeroPad","base58check","encode","hexDataSlice","sha2","getWordlist","_constructorGuard","defaultPath","HDNode","constructorGuard","publicKey","parentFingerprint","chainCode","depth","mnemonicOrPath","signingKey","compressedPublicKey","path","extendedKey","neuter","_derive","I","IL","IR","ki","Ki","add","mod","_addPoint","srcMnemonic","freeze","phrase","fingerprint","derivePath","components","shift","component","match","seed","seedArray","entropyToMnemonic","mnemonicToEntropy","_fromSeed","NFKD","mnemonicToSeed","decode","checkNormalize","entropy","offset","normalize","bit","entropyBits","checksumMask","indices","remainingBits","checksumBits","checksum","map","looseArrayify","hexString","zpad","getPassword","NFKC","searchPath","object","currentChild","comps","matchingChild","uuidV4","__awaiter","thisArg","_arguments","P","generator","reject","fulfilled","step","next","e","rejected","done","apply","hasMnemonic","KeystoreAccount","isKeystoreAccount","_isKeystoreAccount","_getAccount","aesCtr","_decrypt","mnemonicKey","address","account","mnemonicCiphertext","mnemonicIv","mnemonicCounter","mnemonicAesCtr","node","fromMnemonic","error","code","INVALID_ARGUMENT","argument","pbkdf2Sync","passwordBytes","count","dkLen","prfFunc","_computeKdfKey","pbkdf2Func","scryptFunc","progressCallback","kdf","p","prf","CrowdsaleAccount","isCrowdsaleAccount","_isCrowdsaleAccount","json","JSON","parse","ethaddr","encseed","encryptedSeed","aesCbc","seedHex","seedHexBytes","isCrowdsaleWallet","isKeystoreWallet","version","decryptJsonWallet","scrypt","decryptJsonWalletSync","Wallet","provider","isHexString","isSigningKey","curve","isProvider","_mnemonic","_signingKey","getAddress","connect","signTransaction","transaction","tx","signature","signDigest","signMessage","joinSignature","_signTypedData","domain","types","populated","resolveNames","resolveName","options","client","uuidRandom","uuid","derivedKey","macPrefix","cipherparams","kdfparams","n","dklen","now","Date","timestamp","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","gethFilename","stringify","extraEntropy","MIN_ENTROPY_SIZE","keccak256","createIdentity","byteLength","innerHex","middleHex","createPrivateKey","wallet","stripHexPrefix","removeLeading0x","str","startsWith","addLeading0x","uint8ArrayToHex","toString","hexToUnit8Array","compress","startsWith04","publicKeyConvert","decompress","startsWith02Or03","decompressed","toAddress","addressBuffer","pubToAddress","toBuffer","toChecksumAddress","compressedKey","buf","ret","decryptWithPrivateKey","twoStripped","encryptedBuffer","decryptedBuffer","encryptWithPublicKey","pubString","encryptedBuffers","publicKeyByPrivateKey","privateToPublic","recoverPublicKey","sigOnly","recoveryNumber","pubKey","ecdsaRecover","recover","sigString","sign","sigObj","recoveryId","recid","rawTx","txOptions","arguments","undefined","privateKeyBuffer","Transaction","fromTxData","serialize","_arrayLikeToArray","arr2","_toConsumableArray","iter","Symbol","iterator","o","minLen","test","TypeError","txDataByCompiled","abi","bytecode","args","factory","getDeployTransaction","calculateContractAddress","creatorAddress","nonce","generateAddress","regexBytes","RegExp","regexNumber","regexArray","Zeros","_pack","type","zeroPad","toTwos","baseType","forEach","pack","values","tight","params","SIGN_PREFIX","base64","string","compressedString","fromString","s","vrs","util","ecparams","BN","loadPublicKey","pubkey","first","xbuf","cmp","toRed","red","y","redSqr","redIMul","redIAdd","b","redSqrt","isOdd","redNeg","keyPair","pub","loadCompressedPublicKey","subarray","ybuf","x3","redISub","isZero","loadUncompressedPublicKey","savePublicKey","output","point","contextRandomize","privateKeyVerify","seckey","bn","privateKeyNegate","negate","sub","umod","toArrayLike","privateKeyTweakAdd","tweak","iadd","isub","tweaked","privateKeyTweakMul","imul","publicKeyVerify","publicKeyCreate","pair","publicKeyNegate","publicKeyCombine","pubkeys","pairs","isInfinity","publicKeyTweakAdd","mul","publicKeyTweakMul","signatureNormalize","nh","signatureExport","obj","sigR","sigS","lenR","posR","lenS","posS","outputlen","signatureImport","ecdsaSign","noncefn","_noncefn","d","canonical","pers","err","recoveryParam","ecdsaVerify","msg32","sigr","sigs","verify","recoverPubKey","ecdh","hashfn","scalar","sha256","getX","getY","cond","isUint8Array","includes","isCompressed","toTypeString","getAssertedOutput","secp256k1","compressed","MAX_VALUE","SHA256","m","K","Uint32Array","h0","h1","h2","h3","h4","h5","h6","h7","w","blocks","off","u","t1","t2","f","h","bytesLeft","bitLenHi","bitLenLo","numZeros","PBKDF2_HMAC_SHA256_OneIter","innerLen","inner","outerKey","dk","incrementCounter","blockmix_salsa8","BY","Yi","_X","arraycopy","blockxor","salsa20_8","R","B","D","src","srcPos","dest","checkBufferish","ensureInteger","_scrypt","callback","XY","V","totalOps","i1","Bi","currentOp","lastPercent10","stop","state","i0","limit","nextTick","setImmediate","setTimeout","incrementalSMix","steps","percent10","lib","lastProgress","progress","syncScrypt"],"sourceRoot":""}