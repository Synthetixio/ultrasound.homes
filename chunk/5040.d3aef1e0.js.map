{"version":3,"file":"chunk/5040.d3aef1e0.js","mappings":"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","sources":["webpack://@snx-v3/ultrasound-homes/../../node_modules/aes-js/index.js","webpack://@snx-v3/ultrasound-homes/../../node_modules/crc-32/crc32.js","webpack://@snx-v3/ultrasound-homes/../../node_modules/eccrypto/browser.js","webpack://@snx-v3/ultrasound-homes/../../node_modules/@ethersproject/random/lib.esm/_version.js","webpack://@snx-v3/ultrasound-homes/../../node_modules/@ethersproject/random/lib.esm/random.js","webpack://@snx-v3/ultrasound-homes/../../node_modules/@ethersproject/pbkdf2/lib.esm/pbkdf2.js","webpack://@snx-v3/ultrasound-homes/../../node_modules/@ethersproject/wordlists/lib.esm/_version.js","webpack://@snx-v3/ultrasound-homes/../../node_modules/@ethersproject/wordlists/lib.esm/wordlist.js","webpack://@snx-v3/ultrasound-homes/../../node_modules/@ethersproject/wordlists/lib.esm/lang-en.js","webpack://@snx-v3/ultrasound-homes/../../node_modules/@ethersproject/wordlists/lib.esm/wordlists.js","webpack://@snx-v3/ultrasound-homes/../../node_modules/@ethersproject/hdnode/lib.esm/index.js","webpack://@snx-v3/ultrasound-homes/../../node_modules/@ethersproject/hdnode/lib.esm/_version.js","webpack://@snx-v3/ultrasound-homes/../../node_modules/@ethersproject/json-wallets/lib.esm/utils.js","webpack://@snx-v3/ultrasound-homes/../../node_modules/@ethersproject/json-wallets/lib.esm/_version.js","webpack://@snx-v3/ultrasound-homes/../../node_modules/@ethersproject/json-wallets/lib.esm/keystore.js","webpack://@snx-v3/ultrasound-homes/../../node_modules/@ethersproject/json-wallets/lib.esm/crowdsale.js","webpack://@snx-v3/ultrasound-homes/../../node_modules/@ethersproject/json-wallets/lib.esm/inspect.js","webpack://@snx-v3/ultrasound-homes/../../node_modules/@ethersproject/json-wallets/lib.esm/index.js","webpack://@snx-v3/ultrasound-homes/../../node_modules/@ethersproject/wallet/lib.esm/index.js","webpack://@snx-v3/ultrasound-homes/../../node_modules/@ethersproject/wallet/lib.esm/_version.js","webpack://@snx-v3/ultrasound-homes/../../node_modules/@ethersproject/hash/lib.esm/message.js","webpack://@snx-v3/ultrasound-homes/../../node_modules/eth-crypto/dist/es/create-identity.js","webpack://@snx-v3/ultrasound-homes/../../node_modules/eth-crypto/dist/es/util.js","webpack://@snx-v3/ultrasound-homes/../../node_modules/eth-crypto/dist/es/public-key.js","webpack://@snx-v3/ultrasound-homes/../../node_modules/eth-crypto/dist/es/cipher.js","webpack://@snx-v3/ultrasound-homes/../../node_modules/eth-crypto/dist/es/decrypt-with-private-key.js","webpack://@snx-v3/ultrasound-homes/../../node_modules/eth-crypto/dist/es/encrypt-with-public-key.js","webpack://@snx-v3/ultrasound-homes/../../node_modules/eth-crypto/dist/es/public-key-by-private-key.js","webpack://@snx-v3/ultrasound-homes/../../node_modules/eth-crypto/dist/es/recover-public-key.js","webpack://@snx-v3/ultrasound-homes/../../node_modules/eth-crypto/dist/es/recover.js","webpack://@snx-v3/ultrasound-homes/../../node_modules/eth-crypto/dist/es/sign.js","webpack://@snx-v3/ultrasound-homes/../../node_modules/eth-crypto/dist/es/sign-transaction.js","webpack://@snx-v3/ultrasound-homes/../../node_modules/eth-crypto/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","webpack://@snx-v3/ultrasound-homes/../../node_modules/eth-crypto/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","webpack://@snx-v3/ultrasound-homes/../../node_modules/eth-crypto/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","webpack://@snx-v3/ultrasound-homes/../../node_modules/eth-crypto/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","webpack://@snx-v3/ultrasound-homes/../../node_modules/eth-crypto/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","webpack://@snx-v3/ultrasound-homes/../../node_modules/eth-crypto/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","webpack://@snx-v3/ultrasound-homes/../../node_modules/eth-crypto/dist/es/tx-data-by-compiled.js","webpack://@snx-v3/ultrasound-homes/../../node_modules/eth-crypto/dist/es/calculate-contract-address.js","webpack://@snx-v3/ultrasound-homes/../../node_modules/@ethersproject/solidity/lib.esm/_version.js","webpack://@snx-v3/ultrasound-homes/../../node_modules/@ethersproject/solidity/lib.esm/index.js","webpack://@snx-v3/ultrasound-homes/../../node_modules/eth-crypto/dist/es/hash.js","webpack://@snx-v3/ultrasound-homes/../../node_modules/eth-crypto/dist/es/hex.js","webpack://@snx-v3/ultrasound-homes/../../node_modules/eth-crypto/dist/es/vrs.js","webpack://@snx-v3/ultrasound-homes/../../node_modules/eth-crypto/dist/es/index.js","webpack://@snx-v3/ultrasound-homes/../../node_modules/eth-crypto/node_modules/@ethereumjs/common/dist.browser/chains/index.js","webpack://@snx-v3/ultrasound-homes/../../node_modules/eth-crypto/node_modules/@ethereumjs/common/dist.browser/eips/index.js","webpack://@snx-v3/ultrasound-homes/../../node_modules/eth-crypto/node_modules/@ethereumjs/common/dist.browser/hardforks/index.js","webpack://@snx-v3/ultrasound-homes/../../node_modules/eth-crypto/node_modules/@ethereumjs/common/dist.browser/index.js","webpack://@snx-v3/ultrasound-homes/../../node_modules/eth-crypto/node_modules/@ethereumjs/tx/dist.browser/baseTransaction.js","webpack://@snx-v3/ultrasound-homes/../../node_modules/eth-crypto/node_modules/@ethereumjs/tx/dist.browser/eip1559Transaction.js","webpack://@snx-v3/ultrasound-homes/../../node_modules/eth-crypto/node_modules/@ethereumjs/tx/dist.browser/eip2930Transaction.js","webpack://@snx-v3/ultrasound-homes/../../node_modules/eth-crypto/node_modules/@ethereumjs/tx/dist.browser/index.js","webpack://@snx-v3/ultrasound-homes/../../node_modules/eth-crypto/node_modules/@ethereumjs/tx/dist.browser/legacyTransaction.js","webpack://@snx-v3/ultrasound-homes/../../node_modules/eth-crypto/node_modules/@ethereumjs/tx/dist.browser/transactionFactory.js","webpack://@snx-v3/ultrasound-homes/../../node_modules/eth-crypto/node_modules/@ethereumjs/tx/dist.browser/types.js","webpack://@snx-v3/ultrasound-homes/../../node_modules/eth-crypto/node_modules/@ethereumjs/tx/dist.browser/util.js","webpack://@snx-v3/ultrasound-homes/../../node_modules/eth-crypto/node_modules/secp256k1/elliptic.js","webpack://@snx-v3/ultrasound-homes/../../node_modules/eth-crypto/node_modules/secp256k1/lib/elliptic.js","webpack://@snx-v3/ultrasound-homes/../../node_modules/eth-crypto/node_modules/secp256k1/lib/index.js","webpack://@snx-v3/ultrasound-homes/../../node_modules/scrypt-js/scrypt.js"],"sourcesContent":["\"use strict\";\n\n(function(root) {\n\n    function checkInt(value) {\n        return (parseInt(value) === value);\n    }\n\n    function checkInts(arrayish) {\n        if (!checkInt(arrayish.length)) { return false; }\n\n        for (var i = 0; i < arrayish.length; i++) {\n            if (!checkInt(arrayish[i]) || arrayish[i] < 0 || arrayish[i] > 255) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    function coerceArray(arg, copy) {\n\n        // ArrayBuffer view\n        if (arg.buffer && ArrayBuffer.isView(arg) && arg.name === 'Uint8Array') {\n\n            if (copy) {\n                if (arg.slice) {\n                    arg = arg.slice();\n                } else {\n                    arg = Array.prototype.slice.call(arg);\n                }\n            }\n\n            return arg;\n        }\n\n        // It's an array; check it is a valid representation of a byte\n        if (Array.isArray(arg)) {\n            if (!checkInts(arg)) {\n                throw new Error('Array contains invalid value: ' + arg);\n            }\n\n            return new Uint8Array(arg);\n        }\n\n        // Something else, but behaves like an array (maybe a Buffer? Arguments?)\n        if (checkInt(arg.length) && checkInts(arg)) {\n            return new Uint8Array(arg);\n        }\n\n        throw new Error('unsupported array-like object');\n    }\n\n    function createArray(length) {\n        return new Uint8Array(length);\n    }\n\n    function copyArray(sourceArray, targetArray, targetStart, sourceStart, sourceEnd) {\n        if (sourceStart != null || sourceEnd != null) {\n            if (sourceArray.slice) {\n                sourceArray = sourceArray.slice(sourceStart, sourceEnd);\n            } else {\n                sourceArray = Array.prototype.slice.call(sourceArray, sourceStart, sourceEnd);\n            }\n        }\n        targetArray.set(sourceArray, targetStart);\n    }\n\n\n\n    var convertUtf8 = (function() {\n        function toBytes(text) {\n            var result = [], i = 0;\n            text = encodeURI(text);\n            while (i < text.length) {\n                var c = text.charCodeAt(i++);\n\n                // if it is a % sign, encode the following 2 bytes as a hex value\n                if (c === 37) {\n                    result.push(parseInt(text.substr(i, 2), 16))\n                    i += 2;\n\n                // otherwise, just the actual byte\n                } else {\n                    result.push(c)\n                }\n            }\n\n            return coerceArray(result);\n        }\n\n        function fromBytes(bytes) {\n            var result = [], i = 0;\n\n            while (i < bytes.length) {\n                var c = bytes[i];\n\n                if (c < 128) {\n                    result.push(String.fromCharCode(c));\n                    i++;\n                } else if (c > 191 && c < 224) {\n                    result.push(String.fromCharCode(((c & 0x1f) << 6) | (bytes[i + 1] & 0x3f)));\n                    i += 2;\n                } else {\n                    result.push(String.fromCharCode(((c & 0x0f) << 12) | ((bytes[i + 1] & 0x3f) << 6) | (bytes[i + 2] & 0x3f)));\n                    i += 3;\n                }\n            }\n\n            return result.join('');\n        }\n\n        return {\n            toBytes: toBytes,\n            fromBytes: fromBytes,\n        }\n    })();\n\n    var convertHex = (function() {\n        function toBytes(text) {\n            var result = [];\n            for (var i = 0; i < text.length; i += 2) {\n                result.push(parseInt(text.substr(i, 2), 16));\n            }\n\n            return result;\n        }\n\n        // http://ixti.net/development/javascript/2011/11/11/base64-encodedecode-of-utf8-in-browser-with-js.html\n        var Hex = '0123456789abcdef';\n\n        function fromBytes(bytes) {\n                var result = [];\n                for (var i = 0; i < bytes.length; i++) {\n                    var v = bytes[i];\n                    result.push(Hex[(v & 0xf0) >> 4] + Hex[v & 0x0f]);\n                }\n                return result.join('');\n        }\n\n        return {\n            toBytes: toBytes,\n            fromBytes: fromBytes,\n        }\n    })();\n\n\n    // Number of rounds by keysize\n    var numberOfRounds = {16: 10, 24: 12, 32: 14}\n\n    // Round constant words\n    var rcon = [0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91];\n\n    // S-box and Inverse S-box (S is for Substitution)\n    var S = [0x63, 0x7c, 0x77, 0x7b, 0xf2, 0x6b, 0x6f, 0xc5, 0x30, 0x01, 0x67, 0x2b, 0xfe, 0xd7, 0xab, 0x76, 0xca, 0x82, 0xc9, 0x7d, 0xfa, 0x59, 0x47, 0xf0, 0xad, 0xd4, 0xa2, 0xaf, 0x9c, 0xa4, 0x72, 0xc0, 0xb7, 0xfd, 0x93, 0x26, 0x36, 0x3f, 0xf7, 0xcc, 0x34, 0xa5, 0xe5, 0xf1, 0x71, 0xd8, 0x31, 0x15, 0x04, 0xc7, 0x23, 0xc3, 0x18, 0x96, 0x05, 0x9a, 0x07, 0x12, 0x80, 0xe2, 0xeb, 0x27, 0xb2, 0x75, 0x09, 0x83, 0x2c, 0x1a, 0x1b, 0x6e, 0x5a, 0xa0, 0x52, 0x3b, 0xd6, 0xb3, 0x29, 0xe3, 0x2f, 0x84, 0x53, 0xd1, 0x00, 0xed, 0x20, 0xfc, 0xb1, 0x5b, 0x6a, 0xcb, 0xbe, 0x39, 0x4a, 0x4c, 0x58, 0xcf, 0xd0, 0xef, 0xaa, 0xfb, 0x43, 0x4d, 0x33, 0x85, 0x45, 0xf9, 0x02, 0x7f, 0x50, 0x3c, 0x9f, 0xa8, 0x51, 0xa3, 0x40, 0x8f, 0x92, 0x9d, 0x38, 0xf5, 0xbc, 0xb6, 0xda, 0x21, 0x10, 0xff, 0xf3, 0xd2, 0xcd, 0x0c, 0x13, 0xec, 0x5f, 0x97, 0x44, 0x17, 0xc4, 0xa7, 0x7e, 0x3d, 0x64, 0x5d, 0x19, 0x73, 0x60, 0x81, 0x4f, 0xdc, 0x22, 0x2a, 0x90, 0x88, 0x46, 0xee, 0xb8, 0x14, 0xde, 0x5e, 0x0b, 0xdb, 0xe0, 0x32, 0x3a, 0x0a, 0x49, 0x06, 0x24, 0x5c, 0xc2, 0xd3, 0xac, 0x62, 0x91, 0x95, 0xe4, 0x79, 0xe7, 0xc8, 0x37, 0x6d, 0x8d, 0xd5, 0x4e, 0xa9, 0x6c, 0x56, 0xf4, 0xea, 0x65, 0x7a, 0xae, 0x08, 0xba, 0x78, 0x25, 0x2e, 0x1c, 0xa6, 0xb4, 0xc6, 0xe8, 0xdd, 0x74, 0x1f, 0x4b, 0xbd, 0x8b, 0x8a, 0x70, 0x3e, 0xb5, 0x66, 0x48, 0x03, 0xf6, 0x0e, 0x61, 0x35, 0x57, 0xb9, 0x86, 0xc1, 0x1d, 0x9e, 0xe1, 0xf8, 0x98, 0x11, 0x69, 0xd9, 0x8e, 0x94, 0x9b, 0x1e, 0x87, 0xe9, 0xce, 0x55, 0x28, 0xdf, 0x8c, 0xa1, 0x89, 0x0d, 0xbf, 0xe6, 0x42, 0x68, 0x41, 0x99, 0x2d, 0x0f, 0xb0, 0x54, 0xbb, 0x16];\n    var Si =[0x52, 0x09, 0x6a, 0xd5, 0x30, 0x36, 0xa5, 0x38, 0xbf, 0x40, 0xa3, 0x9e, 0x81, 0xf3, 0xd7, 0xfb, 0x7c, 0xe3, 0x39, 0x82, 0x9b, 0x2f, 0xff, 0x87, 0x34, 0x8e, 0x43, 0x44, 0xc4, 0xde, 0xe9, 0xcb, 0x54, 0x7b, 0x94, 0x32, 0xa6, 0xc2, 0x23, 0x3d, 0xee, 0x4c, 0x95, 0x0b, 0x42, 0xfa, 0xc3, 0x4e, 0x08, 0x2e, 0xa1, 0x66, 0x28, 0xd9, 0x24, 0xb2, 0x76, 0x5b, 0xa2, 0x49, 0x6d, 0x8b, 0xd1, 0x25, 0x72, 0xf8, 0xf6, 0x64, 0x86, 0x68, 0x98, 0x16, 0xd4, 0xa4, 0x5c, 0xcc, 0x5d, 0x65, 0xb6, 0x92, 0x6c, 0x70, 0x48, 0x50, 0xfd, 0xed, 0xb9, 0xda, 0x5e, 0x15, 0x46, 0x57, 0xa7, 0x8d, 0x9d, 0x84, 0x90, 0xd8, 0xab, 0x00, 0x8c, 0xbc, 0xd3, 0x0a, 0xf7, 0xe4, 0x58, 0x05, 0xb8, 0xb3, 0x45, 0x06, 0xd0, 0x2c, 0x1e, 0x8f, 0xca, 0x3f, 0x0f, 0x02, 0xc1, 0xaf, 0xbd, 0x03, 0x01, 0x13, 0x8a, 0x6b, 0x3a, 0x91, 0x11, 0x41, 0x4f, 0x67, 0xdc, 0xea, 0x97, 0xf2, 0xcf, 0xce, 0xf0, 0xb4, 0xe6, 0x73, 0x96, 0xac, 0x74, 0x22, 0xe7, 0xad, 0x35, 0x85, 0xe2, 0xf9, 0x37, 0xe8, 0x1c, 0x75, 0xdf, 0x6e, 0x47, 0xf1, 0x1a, 0x71, 0x1d, 0x29, 0xc5, 0x89, 0x6f, 0xb7, 0x62, 0x0e, 0xaa, 0x18, 0xbe, 0x1b, 0xfc, 0x56, 0x3e, 0x4b, 0xc6, 0xd2, 0x79, 0x20, 0x9a, 0xdb, 0xc0, 0xfe, 0x78, 0xcd, 0x5a, 0xf4, 0x1f, 0xdd, 0xa8, 0x33, 0x88, 0x07, 0xc7, 0x31, 0xb1, 0x12, 0x10, 0x59, 0x27, 0x80, 0xec, 0x5f, 0x60, 0x51, 0x7f, 0xa9, 0x19, 0xb5, 0x4a, 0x0d, 0x2d, 0xe5, 0x7a, 0x9f, 0x93, 0xc9, 0x9c, 0xef, 0xa0, 0xe0, 0x3b, 0x4d, 0xae, 0x2a, 0xf5, 0xb0, 0xc8, 0xeb, 0xbb, 0x3c, 0x83, 0x53, 0x99, 0x61, 0x17, 0x2b, 0x04, 0x7e, 0xba, 0x77, 0xd6, 0x26, 0xe1, 0x69, 0x14, 0x63, 0x55, 0x21, 0x0c, 0x7d];\n\n    // Transformations for encryption\n    var T1 = [0xc66363a5, 0xf87c7c84, 0xee777799, 0xf67b7b8d, 0xfff2f20d, 0xd66b6bbd, 0xde6f6fb1, 0x91c5c554, 0x60303050, 0x02010103, 0xce6767a9, 0x562b2b7d, 0xe7fefe19, 0xb5d7d762, 0x4dababe6, 0xec76769a, 0x8fcaca45, 0x1f82829d, 0x89c9c940, 0xfa7d7d87, 0xeffafa15, 0xb25959eb, 0x8e4747c9, 0xfbf0f00b, 0x41adadec, 0xb3d4d467, 0x5fa2a2fd, 0x45afafea, 0x239c9cbf, 0x53a4a4f7, 0xe4727296, 0x9bc0c05b, 0x75b7b7c2, 0xe1fdfd1c, 0x3d9393ae, 0x4c26266a, 0x6c36365a, 0x7e3f3f41, 0xf5f7f702, 0x83cccc4f, 0x6834345c, 0x51a5a5f4, 0xd1e5e534, 0xf9f1f108, 0xe2717193, 0xabd8d873, 0x62313153, 0x2a15153f, 0x0804040c, 0x95c7c752, 0x46232365, 0x9dc3c35e, 0x30181828, 0x379696a1, 0x0a05050f, 0x2f9a9ab5, 0x0e070709, 0x24121236, 0x1b80809b, 0xdfe2e23d, 0xcdebeb26, 0x4e272769, 0x7fb2b2cd, 0xea75759f, 0x1209091b, 0x1d83839e, 0x582c2c74, 0x341a1a2e, 0x361b1b2d, 0xdc6e6eb2, 0xb45a5aee, 0x5ba0a0fb, 0xa45252f6, 0x763b3b4d, 0xb7d6d661, 0x7db3b3ce, 0x5229297b, 0xdde3e33e, 0x5e2f2f71, 0x13848497, 0xa65353f5, 0xb9d1d168, 0x00000000, 0xc1eded2c, 0x40202060, 0xe3fcfc1f, 0x79b1b1c8, 0xb65b5bed, 0xd46a6abe, 0x8dcbcb46, 0x67bebed9, 0x7239394b, 0x944a4ade, 0x984c4cd4, 0xb05858e8, 0x85cfcf4a, 0xbbd0d06b, 0xc5efef2a, 0x4faaaae5, 0xedfbfb16, 0x864343c5, 0x9a4d4dd7, 0x66333355, 0x11858594, 0x8a4545cf, 0xe9f9f910, 0x04020206, 0xfe7f7f81, 0xa05050f0, 0x783c3c44, 0x259f9fba, 0x4ba8a8e3, 0xa25151f3, 0x5da3a3fe, 0x804040c0, 0x058f8f8a, 0x3f9292ad, 0x219d9dbc, 0x70383848, 0xf1f5f504, 0x63bcbcdf, 0x77b6b6c1, 0xafdada75, 0x42212163, 0x20101030, 0xe5ffff1a, 0xfdf3f30e, 0xbfd2d26d, 0x81cdcd4c, 0x180c0c14, 0x26131335, 0xc3ecec2f, 0xbe5f5fe1, 0x359797a2, 0x884444cc, 0x2e171739, 0x93c4c457, 0x55a7a7f2, 0xfc7e7e82, 0x7a3d3d47, 0xc86464ac, 0xba5d5de7, 0x3219192b, 0xe6737395, 0xc06060a0, 0x19818198, 0x9e4f4fd1, 0xa3dcdc7f, 0x44222266, 0x542a2a7e, 0x3b9090ab, 0x0b888883, 0x8c4646ca, 0xc7eeee29, 0x6bb8b8d3, 0x2814143c, 0xa7dede79, 0xbc5e5ee2, 0x160b0b1d, 0xaddbdb76, 0xdbe0e03b, 0x64323256, 0x743a3a4e, 0x140a0a1e, 0x924949db, 0x0c06060a, 0x4824246c, 0xb85c5ce4, 0x9fc2c25d, 0xbdd3d36e, 0x43acacef, 0xc46262a6, 0x399191a8, 0x319595a4, 0xd3e4e437, 0xf279798b, 0xd5e7e732, 0x8bc8c843, 0x6e373759, 0xda6d6db7, 0x018d8d8c, 0xb1d5d564, 0x9c4e4ed2, 0x49a9a9e0, 0xd86c6cb4, 0xac5656fa, 0xf3f4f407, 0xcfeaea25, 0xca6565af, 0xf47a7a8e, 0x47aeaee9, 0x10080818, 0x6fbabad5, 0xf0787888, 0x4a25256f, 0x5c2e2e72, 0x381c1c24, 0x57a6a6f1, 0x73b4b4c7, 0x97c6c651, 0xcbe8e823, 0xa1dddd7c, 0xe874749c, 0x3e1f1f21, 0x964b4bdd, 0x61bdbddc, 0x0d8b8b86, 0x0f8a8a85, 0xe0707090, 0x7c3e3e42, 0x71b5b5c4, 0xcc6666aa, 0x904848d8, 0x06030305, 0xf7f6f601, 0x1c0e0e12, 0xc26161a3, 0x6a35355f, 0xae5757f9, 0x69b9b9d0, 0x17868691, 0x99c1c158, 0x3a1d1d27, 0x279e9eb9, 0xd9e1e138, 0xebf8f813, 0x2b9898b3, 0x22111133, 0xd26969bb, 0xa9d9d970, 0x078e8e89, 0x339494a7, 0x2d9b9bb6, 0x3c1e1e22, 0x15878792, 0xc9e9e920, 0x87cece49, 0xaa5555ff, 0x50282878, 0xa5dfdf7a, 0x038c8c8f, 0x59a1a1f8, 0x09898980, 0x1a0d0d17, 0x65bfbfda, 0xd7e6e631, 0x844242c6, 0xd06868b8, 0x824141c3, 0x299999b0, 0x5a2d2d77, 0x1e0f0f11, 0x7bb0b0cb, 0xa85454fc, 0x6dbbbbd6, 0x2c16163a];\n    var T2 = [0xa5c66363, 0x84f87c7c, 0x99ee7777, 0x8df67b7b, 0x0dfff2f2, 0xbdd66b6b, 0xb1de6f6f, 0x5491c5c5, 0x50603030, 0x03020101, 0xa9ce6767, 0x7d562b2b, 0x19e7fefe, 0x62b5d7d7, 0xe64dabab, 0x9aec7676, 0x458fcaca, 0x9d1f8282, 0x4089c9c9, 0x87fa7d7d, 0x15effafa, 0xebb25959, 0xc98e4747, 0x0bfbf0f0, 0xec41adad, 0x67b3d4d4, 0xfd5fa2a2, 0xea45afaf, 0xbf239c9c, 0xf753a4a4, 0x96e47272, 0x5b9bc0c0, 0xc275b7b7, 0x1ce1fdfd, 0xae3d9393, 0x6a4c2626, 0x5a6c3636, 0x417e3f3f, 0x02f5f7f7, 0x4f83cccc, 0x5c683434, 0xf451a5a5, 0x34d1e5e5, 0x08f9f1f1, 0x93e27171, 0x73abd8d8, 0x53623131, 0x3f2a1515, 0x0c080404, 0x5295c7c7, 0x65462323, 0x5e9dc3c3, 0x28301818, 0xa1379696, 0x0f0a0505, 0xb52f9a9a, 0x090e0707, 0x36241212, 0x9b1b8080, 0x3ddfe2e2, 0x26cdebeb, 0x694e2727, 0xcd7fb2b2, 0x9fea7575, 0x1b120909, 0x9e1d8383, 0x74582c2c, 0x2e341a1a, 0x2d361b1b, 0xb2dc6e6e, 0xeeb45a5a, 0xfb5ba0a0, 0xf6a45252, 0x4d763b3b, 0x61b7d6d6, 0xce7db3b3, 0x7b522929, 0x3edde3e3, 0x715e2f2f, 0x97138484, 0xf5a65353, 0x68b9d1d1, 0x00000000, 0x2cc1eded, 0x60402020, 0x1fe3fcfc, 0xc879b1b1, 0xedb65b5b, 0xbed46a6a, 0x468dcbcb, 0xd967bebe, 0x4b723939, 0xde944a4a, 0xd4984c4c, 0xe8b05858, 0x4a85cfcf, 0x6bbbd0d0, 0x2ac5efef, 0xe54faaaa, 0x16edfbfb, 0xc5864343, 0xd79a4d4d, 0x55663333, 0x94118585, 0xcf8a4545, 0x10e9f9f9, 0x06040202, 0x81fe7f7f, 0xf0a05050, 0x44783c3c, 0xba259f9f, 0xe34ba8a8, 0xf3a25151, 0xfe5da3a3, 0xc0804040, 0x8a058f8f, 0xad3f9292, 0xbc219d9d, 0x48703838, 0x04f1f5f5, 0xdf63bcbc, 0xc177b6b6, 0x75afdada, 0x63422121, 0x30201010, 0x1ae5ffff, 0x0efdf3f3, 0x6dbfd2d2, 0x4c81cdcd, 0x14180c0c, 0x35261313, 0x2fc3ecec, 0xe1be5f5f, 0xa2359797, 0xcc884444, 0x392e1717, 0x5793c4c4, 0xf255a7a7, 0x82fc7e7e, 0x477a3d3d, 0xacc86464, 0xe7ba5d5d, 0x2b321919, 0x95e67373, 0xa0c06060, 0x98198181, 0xd19e4f4f, 0x7fa3dcdc, 0x66442222, 0x7e542a2a, 0xab3b9090, 0x830b8888, 0xca8c4646, 0x29c7eeee, 0xd36bb8b8, 0x3c281414, 0x79a7dede, 0xe2bc5e5e, 0x1d160b0b, 0x76addbdb, 0x3bdbe0e0, 0x56643232, 0x4e743a3a, 0x1e140a0a, 0xdb924949, 0x0a0c0606, 0x6c482424, 0xe4b85c5c, 0x5d9fc2c2, 0x6ebdd3d3, 0xef43acac, 0xa6c46262, 0xa8399191, 0xa4319595, 0x37d3e4e4, 0x8bf27979, 0x32d5e7e7, 0x438bc8c8, 0x596e3737, 0xb7da6d6d, 0x8c018d8d, 0x64b1d5d5, 0xd29c4e4e, 0xe049a9a9, 0xb4d86c6c, 0xfaac5656, 0x07f3f4f4, 0x25cfeaea, 0xafca6565, 0x8ef47a7a, 0xe947aeae, 0x18100808, 0xd56fbaba, 0x88f07878, 0x6f4a2525, 0x725c2e2e, 0x24381c1c, 0xf157a6a6, 0xc773b4b4, 0x5197c6c6, 0x23cbe8e8, 0x7ca1dddd, 0x9ce87474, 0x213e1f1f, 0xdd964b4b, 0xdc61bdbd, 0x860d8b8b, 0x850f8a8a, 0x90e07070, 0x427c3e3e, 0xc471b5b5, 0xaacc6666, 0xd8904848, 0x05060303, 0x01f7f6f6, 0x121c0e0e, 0xa3c26161, 0x5f6a3535, 0xf9ae5757, 0xd069b9b9, 0x91178686, 0x5899c1c1, 0x273a1d1d, 0xb9279e9e, 0x38d9e1e1, 0x13ebf8f8, 0xb32b9898, 0x33221111, 0xbbd26969, 0x70a9d9d9, 0x89078e8e, 0xa7339494, 0xb62d9b9b, 0x223c1e1e, 0x92158787, 0x20c9e9e9, 0x4987cece, 0xffaa5555, 0x78502828, 0x7aa5dfdf, 0x8f038c8c, 0xf859a1a1, 0x80098989, 0x171a0d0d, 0xda65bfbf, 0x31d7e6e6, 0xc6844242, 0xb8d06868, 0xc3824141, 0xb0299999, 0x775a2d2d, 0x111e0f0f, 0xcb7bb0b0, 0xfca85454, 0xd66dbbbb, 0x3a2c1616];\n    var T3 = [0x63a5c663, 0x7c84f87c, 0x7799ee77, 0x7b8df67b, 0xf20dfff2, 0x6bbdd66b, 0x6fb1de6f, 0xc55491c5, 0x30506030, 0x01030201, 0x67a9ce67, 0x2b7d562b, 0xfe19e7fe, 0xd762b5d7, 0xabe64dab, 0x769aec76, 0xca458fca, 0x829d1f82, 0xc94089c9, 0x7d87fa7d, 0xfa15effa, 0x59ebb259, 0x47c98e47, 0xf00bfbf0, 0xadec41ad, 0xd467b3d4, 0xa2fd5fa2, 0xafea45af, 0x9cbf239c, 0xa4f753a4, 0x7296e472, 0xc05b9bc0, 0xb7c275b7, 0xfd1ce1fd, 0x93ae3d93, 0x266a4c26, 0x365a6c36, 0x3f417e3f, 0xf702f5f7, 0xcc4f83cc, 0x345c6834, 0xa5f451a5, 0xe534d1e5, 0xf108f9f1, 0x7193e271, 0xd873abd8, 0x31536231, 0x153f2a15, 0x040c0804, 0xc75295c7, 0x23654623, 0xc35e9dc3, 0x18283018, 0x96a13796, 0x050f0a05, 0x9ab52f9a, 0x07090e07, 0x12362412, 0x809b1b80, 0xe23ddfe2, 0xeb26cdeb, 0x27694e27, 0xb2cd7fb2, 0x759fea75, 0x091b1209, 0x839e1d83, 0x2c74582c, 0x1a2e341a, 0x1b2d361b, 0x6eb2dc6e, 0x5aeeb45a, 0xa0fb5ba0, 0x52f6a452, 0x3b4d763b, 0xd661b7d6, 0xb3ce7db3, 0x297b5229, 0xe33edde3, 0x2f715e2f, 0x84971384, 0x53f5a653, 0xd168b9d1, 0x00000000, 0xed2cc1ed, 0x20604020, 0xfc1fe3fc, 0xb1c879b1, 0x5bedb65b, 0x6abed46a, 0xcb468dcb, 0xbed967be, 0x394b7239, 0x4ade944a, 0x4cd4984c, 0x58e8b058, 0xcf4a85cf, 0xd06bbbd0, 0xef2ac5ef, 0xaae54faa, 0xfb16edfb, 0x43c58643, 0x4dd79a4d, 0x33556633, 0x85941185, 0x45cf8a45, 0xf910e9f9, 0x02060402, 0x7f81fe7f, 0x50f0a050, 0x3c44783c, 0x9fba259f, 0xa8e34ba8, 0x51f3a251, 0xa3fe5da3, 0x40c08040, 0x8f8a058f, 0x92ad3f92, 0x9dbc219d, 0x38487038, 0xf504f1f5, 0xbcdf63bc, 0xb6c177b6, 0xda75afda, 0x21634221, 0x10302010, 0xff1ae5ff, 0xf30efdf3, 0xd26dbfd2, 0xcd4c81cd, 0x0c14180c, 0x13352613, 0xec2fc3ec, 0x5fe1be5f, 0x97a23597, 0x44cc8844, 0x17392e17, 0xc45793c4, 0xa7f255a7, 0x7e82fc7e, 0x3d477a3d, 0x64acc864, 0x5de7ba5d, 0x192b3219, 0x7395e673, 0x60a0c060, 0x81981981, 0x4fd19e4f, 0xdc7fa3dc, 0x22664422, 0x2a7e542a, 0x90ab3b90, 0x88830b88, 0x46ca8c46, 0xee29c7ee, 0xb8d36bb8, 0x143c2814, 0xde79a7de, 0x5ee2bc5e, 0x0b1d160b, 0xdb76addb, 0xe03bdbe0, 0x32566432, 0x3a4e743a, 0x0a1e140a, 0x49db9249, 0x060a0c06, 0x246c4824, 0x5ce4b85c, 0xc25d9fc2, 0xd36ebdd3, 0xacef43ac, 0x62a6c462, 0x91a83991, 0x95a43195, 0xe437d3e4, 0x798bf279, 0xe732d5e7, 0xc8438bc8, 0x37596e37, 0x6db7da6d, 0x8d8c018d, 0xd564b1d5, 0x4ed29c4e, 0xa9e049a9, 0x6cb4d86c, 0x56faac56, 0xf407f3f4, 0xea25cfea, 0x65afca65, 0x7a8ef47a, 0xaee947ae, 0x08181008, 0xbad56fba, 0x7888f078, 0x256f4a25, 0x2e725c2e, 0x1c24381c, 0xa6f157a6, 0xb4c773b4, 0xc65197c6, 0xe823cbe8, 0xdd7ca1dd, 0x749ce874, 0x1f213e1f, 0x4bdd964b, 0xbddc61bd, 0x8b860d8b, 0x8a850f8a, 0x7090e070, 0x3e427c3e, 0xb5c471b5, 0x66aacc66, 0x48d89048, 0x03050603, 0xf601f7f6, 0x0e121c0e, 0x61a3c261, 0x355f6a35, 0x57f9ae57, 0xb9d069b9, 0x86911786, 0xc15899c1, 0x1d273a1d, 0x9eb9279e, 0xe138d9e1, 0xf813ebf8, 0x98b32b98, 0x11332211, 0x69bbd269, 0xd970a9d9, 0x8e89078e, 0x94a73394, 0x9bb62d9b, 0x1e223c1e, 0x87921587, 0xe920c9e9, 0xce4987ce, 0x55ffaa55, 0x28785028, 0xdf7aa5df, 0x8c8f038c, 0xa1f859a1, 0x89800989, 0x0d171a0d, 0xbfda65bf, 0xe631d7e6, 0x42c68442, 0x68b8d068, 0x41c38241, 0x99b02999, 0x2d775a2d, 0x0f111e0f, 0xb0cb7bb0, 0x54fca854, 0xbbd66dbb, 0x163a2c16];\n    var T4 = [0x6363a5c6, 0x7c7c84f8, 0x777799ee, 0x7b7b8df6, 0xf2f20dff, 0x6b6bbdd6, 0x6f6fb1de, 0xc5c55491, 0x30305060, 0x01010302, 0x6767a9ce, 0x2b2b7d56, 0xfefe19e7, 0xd7d762b5, 0xababe64d, 0x76769aec, 0xcaca458f, 0x82829d1f, 0xc9c94089, 0x7d7d87fa, 0xfafa15ef, 0x5959ebb2, 0x4747c98e, 0xf0f00bfb, 0xadadec41, 0xd4d467b3, 0xa2a2fd5f, 0xafafea45, 0x9c9cbf23, 0xa4a4f753, 0x727296e4, 0xc0c05b9b, 0xb7b7c275, 0xfdfd1ce1, 0x9393ae3d, 0x26266a4c, 0x36365a6c, 0x3f3f417e, 0xf7f702f5, 0xcccc4f83, 0x34345c68, 0xa5a5f451, 0xe5e534d1, 0xf1f108f9, 0x717193e2, 0xd8d873ab, 0x31315362, 0x15153f2a, 0x04040c08, 0xc7c75295, 0x23236546, 0xc3c35e9d, 0x18182830, 0x9696a137, 0x05050f0a, 0x9a9ab52f, 0x0707090e, 0x12123624, 0x80809b1b, 0xe2e23ddf, 0xebeb26cd, 0x2727694e, 0xb2b2cd7f, 0x75759fea, 0x09091b12, 0x83839e1d, 0x2c2c7458, 0x1a1a2e34, 0x1b1b2d36, 0x6e6eb2dc, 0x5a5aeeb4, 0xa0a0fb5b, 0x5252f6a4, 0x3b3b4d76, 0xd6d661b7, 0xb3b3ce7d, 0x29297b52, 0xe3e33edd, 0x2f2f715e, 0x84849713, 0x5353f5a6, 0xd1d168b9, 0x00000000, 0xeded2cc1, 0x20206040, 0xfcfc1fe3, 0xb1b1c879, 0x5b5bedb6, 0x6a6abed4, 0xcbcb468d, 0xbebed967, 0x39394b72, 0x4a4ade94, 0x4c4cd498, 0x5858e8b0, 0xcfcf4a85, 0xd0d06bbb, 0xefef2ac5, 0xaaaae54f, 0xfbfb16ed, 0x4343c586, 0x4d4dd79a, 0x33335566, 0x85859411, 0x4545cf8a, 0xf9f910e9, 0x02020604, 0x7f7f81fe, 0x5050f0a0, 0x3c3c4478, 0x9f9fba25, 0xa8a8e34b, 0x5151f3a2, 0xa3a3fe5d, 0x4040c080, 0x8f8f8a05, 0x9292ad3f, 0x9d9dbc21, 0x38384870, 0xf5f504f1, 0xbcbcdf63, 0xb6b6c177, 0xdada75af, 0x21216342, 0x10103020, 0xffff1ae5, 0xf3f30efd, 0xd2d26dbf, 0xcdcd4c81, 0x0c0c1418, 0x13133526, 0xecec2fc3, 0x5f5fe1be, 0x9797a235, 0x4444cc88, 0x1717392e, 0xc4c45793, 0xa7a7f255, 0x7e7e82fc, 0x3d3d477a, 0x6464acc8, 0x5d5de7ba, 0x19192b32, 0x737395e6, 0x6060a0c0, 0x81819819, 0x4f4fd19e, 0xdcdc7fa3, 0x22226644, 0x2a2a7e54, 0x9090ab3b, 0x8888830b, 0x4646ca8c, 0xeeee29c7, 0xb8b8d36b, 0x14143c28, 0xdede79a7, 0x5e5ee2bc, 0x0b0b1d16, 0xdbdb76ad, 0xe0e03bdb, 0x32325664, 0x3a3a4e74, 0x0a0a1e14, 0x4949db92, 0x06060a0c, 0x24246c48, 0x5c5ce4b8, 0xc2c25d9f, 0xd3d36ebd, 0xacacef43, 0x6262a6c4, 0x9191a839, 0x9595a431, 0xe4e437d3, 0x79798bf2, 0xe7e732d5, 0xc8c8438b, 0x3737596e, 0x6d6db7da, 0x8d8d8c01, 0xd5d564b1, 0x4e4ed29c, 0xa9a9e049, 0x6c6cb4d8, 0x5656faac, 0xf4f407f3, 0xeaea25cf, 0x6565afca, 0x7a7a8ef4, 0xaeaee947, 0x08081810, 0xbabad56f, 0x787888f0, 0x25256f4a, 0x2e2e725c, 0x1c1c2438, 0xa6a6f157, 0xb4b4c773, 0xc6c65197, 0xe8e823cb, 0xdddd7ca1, 0x74749ce8, 0x1f1f213e, 0x4b4bdd96, 0xbdbddc61, 0x8b8b860d, 0x8a8a850f, 0x707090e0, 0x3e3e427c, 0xb5b5c471, 0x6666aacc, 0x4848d890, 0x03030506, 0xf6f601f7, 0x0e0e121c, 0x6161a3c2, 0x35355f6a, 0x5757f9ae, 0xb9b9d069, 0x86869117, 0xc1c15899, 0x1d1d273a, 0x9e9eb927, 0xe1e138d9, 0xf8f813eb, 0x9898b32b, 0x11113322, 0x6969bbd2, 0xd9d970a9, 0x8e8e8907, 0x9494a733, 0x9b9bb62d, 0x1e1e223c, 0x87879215, 0xe9e920c9, 0xcece4987, 0x5555ffaa, 0x28287850, 0xdfdf7aa5, 0x8c8c8f03, 0xa1a1f859, 0x89898009, 0x0d0d171a, 0xbfbfda65, 0xe6e631d7, 0x4242c684, 0x6868b8d0, 0x4141c382, 0x9999b029, 0x2d2d775a, 0x0f0f111e, 0xb0b0cb7b, 0x5454fca8, 0xbbbbd66d, 0x16163a2c];\n\n    // Transformations for decryption\n    var T5 = [0x51f4a750, 0x7e416553, 0x1a17a4c3, 0x3a275e96, 0x3bab6bcb, 0x1f9d45f1, 0xacfa58ab, 0x4be30393, 0x2030fa55, 0xad766df6, 0x88cc7691, 0xf5024c25, 0x4fe5d7fc, 0xc52acbd7, 0x26354480, 0xb562a38f, 0xdeb15a49, 0x25ba1b67, 0x45ea0e98, 0x5dfec0e1, 0xc32f7502, 0x814cf012, 0x8d4697a3, 0x6bd3f9c6, 0x038f5fe7, 0x15929c95, 0xbf6d7aeb, 0x955259da, 0xd4be832d, 0x587421d3, 0x49e06929, 0x8ec9c844, 0x75c2896a, 0xf48e7978, 0x99583e6b, 0x27b971dd, 0xbee14fb6, 0xf088ad17, 0xc920ac66, 0x7dce3ab4, 0x63df4a18, 0xe51a3182, 0x97513360, 0x62537f45, 0xb16477e0, 0xbb6bae84, 0xfe81a01c, 0xf9082b94, 0x70486858, 0x8f45fd19, 0x94de6c87, 0x527bf8b7, 0xab73d323, 0x724b02e2, 0xe31f8f57, 0x6655ab2a, 0xb2eb2807, 0x2fb5c203, 0x86c57b9a, 0xd33708a5, 0x302887f2, 0x23bfa5b2, 0x02036aba, 0xed16825c, 0x8acf1c2b, 0xa779b492, 0xf307f2f0, 0x4e69e2a1, 0x65daf4cd, 0x0605bed5, 0xd134621f, 0xc4a6fe8a, 0x342e539d, 0xa2f355a0, 0x058ae132, 0xa4f6eb75, 0x0b83ec39, 0x4060efaa, 0x5e719f06, 0xbd6e1051, 0x3e218af9, 0x96dd063d, 0xdd3e05ae, 0x4de6bd46, 0x91548db5, 0x71c45d05, 0x0406d46f, 0x605015ff, 0x1998fb24, 0xd6bde997, 0x894043cc, 0x67d99e77, 0xb0e842bd, 0x07898b88, 0xe7195b38, 0x79c8eedb, 0xa17c0a47, 0x7c420fe9, 0xf8841ec9, 0x00000000, 0x09808683, 0x322bed48, 0x1e1170ac, 0x6c5a724e, 0xfd0efffb, 0x0f853856, 0x3daed51e, 0x362d3927, 0x0a0fd964, 0x685ca621, 0x9b5b54d1, 0x24362e3a, 0x0c0a67b1, 0x9357e70f, 0xb4ee96d2, 0x1b9b919e, 0x80c0c54f, 0x61dc20a2, 0x5a774b69, 0x1c121a16, 0xe293ba0a, 0xc0a02ae5, 0x3c22e043, 0x121b171d, 0x0e090d0b, 0xf28bc7ad, 0x2db6a8b9, 0x141ea9c8, 0x57f11985, 0xaf75074c, 0xee99ddbb, 0xa37f60fd, 0xf701269f, 0x5c72f5bc, 0x44663bc5, 0x5bfb7e34, 0x8b432976, 0xcb23c6dc, 0xb6edfc68, 0xb8e4f163, 0xd731dcca, 0x42638510, 0x13972240, 0x84c61120, 0x854a247d, 0xd2bb3df8, 0xaef93211, 0xc729a16d, 0x1d9e2f4b, 0xdcb230f3, 0x0d8652ec, 0x77c1e3d0, 0x2bb3166c, 0xa970b999, 0x119448fa, 0x47e96422, 0xa8fc8cc4, 0xa0f03f1a, 0x567d2cd8, 0x223390ef, 0x87494ec7, 0xd938d1c1, 0x8ccaa2fe, 0x98d40b36, 0xa6f581cf, 0xa57ade28, 0xdab78e26, 0x3fadbfa4, 0x2c3a9de4, 0x5078920d, 0x6a5fcc9b, 0x547e4662, 0xf68d13c2, 0x90d8b8e8, 0x2e39f75e, 0x82c3aff5, 0x9f5d80be, 0x69d0937c, 0x6fd52da9, 0xcf2512b3, 0xc8ac993b, 0x10187da7, 0xe89c636e, 0xdb3bbb7b, 0xcd267809, 0x6e5918f4, 0xec9ab701, 0x834f9aa8, 0xe6956e65, 0xaaffe67e, 0x21bccf08, 0xef15e8e6, 0xbae79bd9, 0x4a6f36ce, 0xea9f09d4, 0x29b07cd6, 0x31a4b2af, 0x2a3f2331, 0xc6a59430, 0x35a266c0, 0x744ebc37, 0xfc82caa6, 0xe090d0b0, 0x33a7d815, 0xf104984a, 0x41ecdaf7, 0x7fcd500e, 0x1791f62f, 0x764dd68d, 0x43efb04d, 0xccaa4d54, 0xe49604df, 0x9ed1b5e3, 0x4c6a881b, 0xc12c1fb8, 0x4665517f, 0x9d5eea04, 0x018c355d, 0xfa877473, 0xfb0b412e, 0xb3671d5a, 0x92dbd252, 0xe9105633, 0x6dd64713, 0x9ad7618c, 0x37a10c7a, 0x59f8148e, 0xeb133c89, 0xcea927ee, 0xb761c935, 0xe11ce5ed, 0x7a47b13c, 0x9cd2df59, 0x55f2733f, 0x1814ce79, 0x73c737bf, 0x53f7cdea, 0x5ffdaa5b, 0xdf3d6f14, 0x7844db86, 0xcaaff381, 0xb968c43e, 0x3824342c, 0xc2a3405f, 0x161dc372, 0xbce2250c, 0x283c498b, 0xff0d9541, 0x39a80171, 0x080cb3de, 0xd8b4e49c, 0x6456c190, 0x7bcb8461, 0xd532b670, 0x486c5c74, 0xd0b85742];\n    var T6 = [0x5051f4a7, 0x537e4165, 0xc31a17a4, 0x963a275e, 0xcb3bab6b, 0xf11f9d45, 0xabacfa58, 0x934be303, 0x552030fa, 0xf6ad766d, 0x9188cc76, 0x25f5024c, 0xfc4fe5d7, 0xd7c52acb, 0x80263544, 0x8fb562a3, 0x49deb15a, 0x6725ba1b, 0x9845ea0e, 0xe15dfec0, 0x02c32f75, 0x12814cf0, 0xa38d4697, 0xc66bd3f9, 0xe7038f5f, 0x9515929c, 0xebbf6d7a, 0xda955259, 0x2dd4be83, 0xd3587421, 0x2949e069, 0x448ec9c8, 0x6a75c289, 0x78f48e79, 0x6b99583e, 0xdd27b971, 0xb6bee14f, 0x17f088ad, 0x66c920ac, 0xb47dce3a, 0x1863df4a, 0x82e51a31, 0x60975133, 0x4562537f, 0xe0b16477, 0x84bb6bae, 0x1cfe81a0, 0x94f9082b, 0x58704868, 0x198f45fd, 0x8794de6c, 0xb7527bf8, 0x23ab73d3, 0xe2724b02, 0x57e31f8f, 0x2a6655ab, 0x07b2eb28, 0x032fb5c2, 0x9a86c57b, 0xa5d33708, 0xf2302887, 0xb223bfa5, 0xba02036a, 0x5ced1682, 0x2b8acf1c, 0x92a779b4, 0xf0f307f2, 0xa14e69e2, 0xcd65daf4, 0xd50605be, 0x1fd13462, 0x8ac4a6fe, 0x9d342e53, 0xa0a2f355, 0x32058ae1, 0x75a4f6eb, 0x390b83ec, 0xaa4060ef, 0x065e719f, 0x51bd6e10, 0xf93e218a, 0x3d96dd06, 0xaedd3e05, 0x464de6bd, 0xb591548d, 0x0571c45d, 0x6f0406d4, 0xff605015, 0x241998fb, 0x97d6bde9, 0xcc894043, 0x7767d99e, 0xbdb0e842, 0x8807898b, 0x38e7195b, 0xdb79c8ee, 0x47a17c0a, 0xe97c420f, 0xc9f8841e, 0x00000000, 0x83098086, 0x48322bed, 0xac1e1170, 0x4e6c5a72, 0xfbfd0eff, 0x560f8538, 0x1e3daed5, 0x27362d39, 0x640a0fd9, 0x21685ca6, 0xd19b5b54, 0x3a24362e, 0xb10c0a67, 0x0f9357e7, 0xd2b4ee96, 0x9e1b9b91, 0x4f80c0c5, 0xa261dc20, 0x695a774b, 0x161c121a, 0x0ae293ba, 0xe5c0a02a, 0x433c22e0, 0x1d121b17, 0x0b0e090d, 0xadf28bc7, 0xb92db6a8, 0xc8141ea9, 0x8557f119, 0x4caf7507, 0xbbee99dd, 0xfda37f60, 0x9ff70126, 0xbc5c72f5, 0xc544663b, 0x345bfb7e, 0x768b4329, 0xdccb23c6, 0x68b6edfc, 0x63b8e4f1, 0xcad731dc, 0x10426385, 0x40139722, 0x2084c611, 0x7d854a24, 0xf8d2bb3d, 0x11aef932, 0x6dc729a1, 0x4b1d9e2f, 0xf3dcb230, 0xec0d8652, 0xd077c1e3, 0x6c2bb316, 0x99a970b9, 0xfa119448, 0x2247e964, 0xc4a8fc8c, 0x1aa0f03f, 0xd8567d2c, 0xef223390, 0xc787494e, 0xc1d938d1, 0xfe8ccaa2, 0x3698d40b, 0xcfa6f581, 0x28a57ade, 0x26dab78e, 0xa43fadbf, 0xe42c3a9d, 0x0d507892, 0x9b6a5fcc, 0x62547e46, 0xc2f68d13, 0xe890d8b8, 0x5e2e39f7, 0xf582c3af, 0xbe9f5d80, 0x7c69d093, 0xa96fd52d, 0xb3cf2512, 0x3bc8ac99, 0xa710187d, 0x6ee89c63, 0x7bdb3bbb, 0x09cd2678, 0xf46e5918, 0x01ec9ab7, 0xa8834f9a, 0x65e6956e, 0x7eaaffe6, 0x0821bccf, 0xe6ef15e8, 0xd9bae79b, 0xce4a6f36, 0xd4ea9f09, 0xd629b07c, 0xaf31a4b2, 0x312a3f23, 0x30c6a594, 0xc035a266, 0x37744ebc, 0xa6fc82ca, 0xb0e090d0, 0x1533a7d8, 0x4af10498, 0xf741ecda, 0x0e7fcd50, 0x2f1791f6, 0x8d764dd6, 0x4d43efb0, 0x54ccaa4d, 0xdfe49604, 0xe39ed1b5, 0x1b4c6a88, 0xb8c12c1f, 0x7f466551, 0x049d5eea, 0x5d018c35, 0x73fa8774, 0x2efb0b41, 0x5ab3671d, 0x5292dbd2, 0x33e91056, 0x136dd647, 0x8c9ad761, 0x7a37a10c, 0x8e59f814, 0x89eb133c, 0xeecea927, 0x35b761c9, 0xede11ce5, 0x3c7a47b1, 0x599cd2df, 0x3f55f273, 0x791814ce, 0xbf73c737, 0xea53f7cd, 0x5b5ffdaa, 0x14df3d6f, 0x867844db, 0x81caaff3, 0x3eb968c4, 0x2c382434, 0x5fc2a340, 0x72161dc3, 0x0cbce225, 0x8b283c49, 0x41ff0d95, 0x7139a801, 0xde080cb3, 0x9cd8b4e4, 0x906456c1, 0x617bcb84, 0x70d532b6, 0x74486c5c, 0x42d0b857];\n    var T7 = [0xa75051f4, 0x65537e41, 0xa4c31a17, 0x5e963a27, 0x6bcb3bab, 0x45f11f9d, 0x58abacfa, 0x03934be3, 0xfa552030, 0x6df6ad76, 0x769188cc, 0x4c25f502, 0xd7fc4fe5, 0xcbd7c52a, 0x44802635, 0xa38fb562, 0x5a49deb1, 0x1b6725ba, 0x0e9845ea, 0xc0e15dfe, 0x7502c32f, 0xf012814c, 0x97a38d46, 0xf9c66bd3, 0x5fe7038f, 0x9c951592, 0x7aebbf6d, 0x59da9552, 0x832dd4be, 0x21d35874, 0x692949e0, 0xc8448ec9, 0x896a75c2, 0x7978f48e, 0x3e6b9958, 0x71dd27b9, 0x4fb6bee1, 0xad17f088, 0xac66c920, 0x3ab47dce, 0x4a1863df, 0x3182e51a, 0x33609751, 0x7f456253, 0x77e0b164, 0xae84bb6b, 0xa01cfe81, 0x2b94f908, 0x68587048, 0xfd198f45, 0x6c8794de, 0xf8b7527b, 0xd323ab73, 0x02e2724b, 0x8f57e31f, 0xab2a6655, 0x2807b2eb, 0xc2032fb5, 0x7b9a86c5, 0x08a5d337, 0x87f23028, 0xa5b223bf, 0x6aba0203, 0x825ced16, 0x1c2b8acf, 0xb492a779, 0xf2f0f307, 0xe2a14e69, 0xf4cd65da, 0xbed50605, 0x621fd134, 0xfe8ac4a6, 0x539d342e, 0x55a0a2f3, 0xe132058a, 0xeb75a4f6, 0xec390b83, 0xefaa4060, 0x9f065e71, 0x1051bd6e, 0x8af93e21, 0x063d96dd, 0x05aedd3e, 0xbd464de6, 0x8db59154, 0x5d0571c4, 0xd46f0406, 0x15ff6050, 0xfb241998, 0xe997d6bd, 0x43cc8940, 0x9e7767d9, 0x42bdb0e8, 0x8b880789, 0x5b38e719, 0xeedb79c8, 0x0a47a17c, 0x0fe97c42, 0x1ec9f884, 0x00000000, 0x86830980, 0xed48322b, 0x70ac1e11, 0x724e6c5a, 0xfffbfd0e, 0x38560f85, 0xd51e3dae, 0x3927362d, 0xd9640a0f, 0xa621685c, 0x54d19b5b, 0x2e3a2436, 0x67b10c0a, 0xe70f9357, 0x96d2b4ee, 0x919e1b9b, 0xc54f80c0, 0x20a261dc, 0x4b695a77, 0x1a161c12, 0xba0ae293, 0x2ae5c0a0, 0xe0433c22, 0x171d121b, 0x0d0b0e09, 0xc7adf28b, 0xa8b92db6, 0xa9c8141e, 0x198557f1, 0x074caf75, 0xddbbee99, 0x60fda37f, 0x269ff701, 0xf5bc5c72, 0x3bc54466, 0x7e345bfb, 0x29768b43, 0xc6dccb23, 0xfc68b6ed, 0xf163b8e4, 0xdccad731, 0x85104263, 0x22401397, 0x112084c6, 0x247d854a, 0x3df8d2bb, 0x3211aef9, 0xa16dc729, 0x2f4b1d9e, 0x30f3dcb2, 0x52ec0d86, 0xe3d077c1, 0x166c2bb3, 0xb999a970, 0x48fa1194, 0x642247e9, 0x8cc4a8fc, 0x3f1aa0f0, 0x2cd8567d, 0x90ef2233, 0x4ec78749, 0xd1c1d938, 0xa2fe8cca, 0x0b3698d4, 0x81cfa6f5, 0xde28a57a, 0x8e26dab7, 0xbfa43fad, 0x9de42c3a, 0x920d5078, 0xcc9b6a5f, 0x4662547e, 0x13c2f68d, 0xb8e890d8, 0xf75e2e39, 0xaff582c3, 0x80be9f5d, 0x937c69d0, 0x2da96fd5, 0x12b3cf25, 0x993bc8ac, 0x7da71018, 0x636ee89c, 0xbb7bdb3b, 0x7809cd26, 0x18f46e59, 0xb701ec9a, 0x9aa8834f, 0x6e65e695, 0xe67eaaff, 0xcf0821bc, 0xe8e6ef15, 0x9bd9bae7, 0x36ce4a6f, 0x09d4ea9f, 0x7cd629b0, 0xb2af31a4, 0x23312a3f, 0x9430c6a5, 0x66c035a2, 0xbc37744e, 0xcaa6fc82, 0xd0b0e090, 0xd81533a7, 0x984af104, 0xdaf741ec, 0x500e7fcd, 0xf62f1791, 0xd68d764d, 0xb04d43ef, 0x4d54ccaa, 0x04dfe496, 0xb5e39ed1, 0x881b4c6a, 0x1fb8c12c, 0x517f4665, 0xea049d5e, 0x355d018c, 0x7473fa87, 0x412efb0b, 0x1d5ab367, 0xd25292db, 0x5633e910, 0x47136dd6, 0x618c9ad7, 0x0c7a37a1, 0x148e59f8, 0x3c89eb13, 0x27eecea9, 0xc935b761, 0xe5ede11c, 0xb13c7a47, 0xdf599cd2, 0x733f55f2, 0xce791814, 0x37bf73c7, 0xcdea53f7, 0xaa5b5ffd, 0x6f14df3d, 0xdb867844, 0xf381caaf, 0xc43eb968, 0x342c3824, 0x405fc2a3, 0xc372161d, 0x250cbce2, 0x498b283c, 0x9541ff0d, 0x017139a8, 0xb3de080c, 0xe49cd8b4, 0xc1906456, 0x84617bcb, 0xb670d532, 0x5c74486c, 0x5742d0b8];\n    var T8 = [0xf4a75051, 0x4165537e, 0x17a4c31a, 0x275e963a, 0xab6bcb3b, 0x9d45f11f, 0xfa58abac, 0xe303934b, 0x30fa5520, 0x766df6ad, 0xcc769188, 0x024c25f5, 0xe5d7fc4f, 0x2acbd7c5, 0x35448026, 0x62a38fb5, 0xb15a49de, 0xba1b6725, 0xea0e9845, 0xfec0e15d, 0x2f7502c3, 0x4cf01281, 0x4697a38d, 0xd3f9c66b, 0x8f5fe703, 0x929c9515, 0x6d7aebbf, 0x5259da95, 0xbe832dd4, 0x7421d358, 0xe0692949, 0xc9c8448e, 0xc2896a75, 0x8e7978f4, 0x583e6b99, 0xb971dd27, 0xe14fb6be, 0x88ad17f0, 0x20ac66c9, 0xce3ab47d, 0xdf4a1863, 0x1a3182e5, 0x51336097, 0x537f4562, 0x6477e0b1, 0x6bae84bb, 0x81a01cfe, 0x082b94f9, 0x48685870, 0x45fd198f, 0xde6c8794, 0x7bf8b752, 0x73d323ab, 0x4b02e272, 0x1f8f57e3, 0x55ab2a66, 0xeb2807b2, 0xb5c2032f, 0xc57b9a86, 0x3708a5d3, 0x2887f230, 0xbfa5b223, 0x036aba02, 0x16825ced, 0xcf1c2b8a, 0x79b492a7, 0x07f2f0f3, 0x69e2a14e, 0xdaf4cd65, 0x05bed506, 0x34621fd1, 0xa6fe8ac4, 0x2e539d34, 0xf355a0a2, 0x8ae13205, 0xf6eb75a4, 0x83ec390b, 0x60efaa40, 0x719f065e, 0x6e1051bd, 0x218af93e, 0xdd063d96, 0x3e05aedd, 0xe6bd464d, 0x548db591, 0xc45d0571, 0x06d46f04, 0x5015ff60, 0x98fb2419, 0xbde997d6, 0x4043cc89, 0xd99e7767, 0xe842bdb0, 0x898b8807, 0x195b38e7, 0xc8eedb79, 0x7c0a47a1, 0x420fe97c, 0x841ec9f8, 0x00000000, 0x80868309, 0x2bed4832, 0x1170ac1e, 0x5a724e6c, 0x0efffbfd, 0x8538560f, 0xaed51e3d, 0x2d392736, 0x0fd9640a, 0x5ca62168, 0x5b54d19b, 0x362e3a24, 0x0a67b10c, 0x57e70f93, 0xee96d2b4, 0x9b919e1b, 0xc0c54f80, 0xdc20a261, 0x774b695a, 0x121a161c, 0x93ba0ae2, 0xa02ae5c0, 0x22e0433c, 0x1b171d12, 0x090d0b0e, 0x8bc7adf2, 0xb6a8b92d, 0x1ea9c814, 0xf1198557, 0x75074caf, 0x99ddbbee, 0x7f60fda3, 0x01269ff7, 0x72f5bc5c, 0x663bc544, 0xfb7e345b, 0x4329768b, 0x23c6dccb, 0xedfc68b6, 0xe4f163b8, 0x31dccad7, 0x63851042, 0x97224013, 0xc6112084, 0x4a247d85, 0xbb3df8d2, 0xf93211ae, 0x29a16dc7, 0x9e2f4b1d, 0xb230f3dc, 0x8652ec0d, 0xc1e3d077, 0xb3166c2b, 0x70b999a9, 0x9448fa11, 0xe9642247, 0xfc8cc4a8, 0xf03f1aa0, 0x7d2cd856, 0x3390ef22, 0x494ec787, 0x38d1c1d9, 0xcaa2fe8c, 0xd40b3698, 0xf581cfa6, 0x7ade28a5, 0xb78e26da, 0xadbfa43f, 0x3a9de42c, 0x78920d50, 0x5fcc9b6a, 0x7e466254, 0x8d13c2f6, 0xd8b8e890, 0x39f75e2e, 0xc3aff582, 0x5d80be9f, 0xd0937c69, 0xd52da96f, 0x2512b3cf, 0xac993bc8, 0x187da710, 0x9c636ee8, 0x3bbb7bdb, 0x267809cd, 0x5918f46e, 0x9ab701ec, 0x4f9aa883, 0x956e65e6, 0xffe67eaa, 0xbccf0821, 0x15e8e6ef, 0xe79bd9ba, 0x6f36ce4a, 0x9f09d4ea, 0xb07cd629, 0xa4b2af31, 0x3f23312a, 0xa59430c6, 0xa266c035, 0x4ebc3774, 0x82caa6fc, 0x90d0b0e0, 0xa7d81533, 0x04984af1, 0xecdaf741, 0xcd500e7f, 0x91f62f17, 0x4dd68d76, 0xefb04d43, 0xaa4d54cc, 0x9604dfe4, 0xd1b5e39e, 0x6a881b4c, 0x2c1fb8c1, 0x65517f46, 0x5eea049d, 0x8c355d01, 0x877473fa, 0x0b412efb, 0x671d5ab3, 0xdbd25292, 0x105633e9, 0xd647136d, 0xd7618c9a, 0xa10c7a37, 0xf8148e59, 0x133c89eb, 0xa927eece, 0x61c935b7, 0x1ce5ede1, 0x47b13c7a, 0xd2df599c, 0xf2733f55, 0x14ce7918, 0xc737bf73, 0xf7cdea53, 0xfdaa5b5f, 0x3d6f14df, 0x44db8678, 0xaff381ca, 0x68c43eb9, 0x24342c38, 0xa3405fc2, 0x1dc37216, 0xe2250cbc, 0x3c498b28, 0x0d9541ff, 0xa8017139, 0x0cb3de08, 0xb4e49cd8, 0x56c19064, 0xcb84617b, 0x32b670d5, 0x6c5c7448, 0xb85742d0];\n\n    // Transformations for decryption key expansion\n    var U1 = [0x00000000, 0x0e090d0b, 0x1c121a16, 0x121b171d, 0x3824342c, 0x362d3927, 0x24362e3a, 0x2a3f2331, 0x70486858, 0x7e416553, 0x6c5a724e, 0x62537f45, 0x486c5c74, 0x4665517f, 0x547e4662, 0x5a774b69, 0xe090d0b0, 0xee99ddbb, 0xfc82caa6, 0xf28bc7ad, 0xd8b4e49c, 0xd6bde997, 0xc4a6fe8a, 0xcaaff381, 0x90d8b8e8, 0x9ed1b5e3, 0x8ccaa2fe, 0x82c3aff5, 0xa8fc8cc4, 0xa6f581cf, 0xb4ee96d2, 0xbae79bd9, 0xdb3bbb7b, 0xd532b670, 0xc729a16d, 0xc920ac66, 0xe31f8f57, 0xed16825c, 0xff0d9541, 0xf104984a, 0xab73d323, 0xa57ade28, 0xb761c935, 0xb968c43e, 0x9357e70f, 0x9d5eea04, 0x8f45fd19, 0x814cf012, 0x3bab6bcb, 0x35a266c0, 0x27b971dd, 0x29b07cd6, 0x038f5fe7, 0x0d8652ec, 0x1f9d45f1, 0x119448fa, 0x4be30393, 0x45ea0e98, 0x57f11985, 0x59f8148e, 0x73c737bf, 0x7dce3ab4, 0x6fd52da9, 0x61dc20a2, 0xad766df6, 0xa37f60fd, 0xb16477e0, 0xbf6d7aeb, 0x955259da, 0x9b5b54d1, 0x894043cc, 0x87494ec7, 0xdd3e05ae, 0xd33708a5, 0xc12c1fb8, 0xcf2512b3, 0xe51a3182, 0xeb133c89, 0xf9082b94, 0xf701269f, 0x4de6bd46, 0x43efb04d, 0x51f4a750, 0x5ffdaa5b, 0x75c2896a, 0x7bcb8461, 0x69d0937c, 0x67d99e77, 0x3daed51e, 0x33a7d815, 0x21bccf08, 0x2fb5c203, 0x058ae132, 0x0b83ec39, 0x1998fb24, 0x1791f62f, 0x764dd68d, 0x7844db86, 0x6a5fcc9b, 0x6456c190, 0x4e69e2a1, 0x4060efaa, 0x527bf8b7, 0x5c72f5bc, 0x0605bed5, 0x080cb3de, 0x1a17a4c3, 0x141ea9c8, 0x3e218af9, 0x302887f2, 0x223390ef, 0x2c3a9de4, 0x96dd063d, 0x98d40b36, 0x8acf1c2b, 0x84c61120, 0xaef93211, 0xa0f03f1a, 0xb2eb2807, 0xbce2250c, 0xe6956e65, 0xe89c636e, 0xfa877473, 0xf48e7978, 0xdeb15a49, 0xd0b85742, 0xc2a3405f, 0xccaa4d54, 0x41ecdaf7, 0x4fe5d7fc, 0x5dfec0e1, 0x53f7cdea, 0x79c8eedb, 0x77c1e3d0, 0x65daf4cd, 0x6bd3f9c6, 0x31a4b2af, 0x3fadbfa4, 0x2db6a8b9, 0x23bfa5b2, 0x09808683, 0x07898b88, 0x15929c95, 0x1b9b919e, 0xa17c0a47, 0xaf75074c, 0xbd6e1051, 0xb3671d5a, 0x99583e6b, 0x97513360, 0x854a247d, 0x8b432976, 0xd134621f, 0xdf3d6f14, 0xcd267809, 0xc32f7502, 0xe9105633, 0xe7195b38, 0xf5024c25, 0xfb0b412e, 0x9ad7618c, 0x94de6c87, 0x86c57b9a, 0x88cc7691, 0xa2f355a0, 0xacfa58ab, 0xbee14fb6, 0xb0e842bd, 0xea9f09d4, 0xe49604df, 0xf68d13c2, 0xf8841ec9, 0xd2bb3df8, 0xdcb230f3, 0xcea927ee, 0xc0a02ae5, 0x7a47b13c, 0x744ebc37, 0x6655ab2a, 0x685ca621, 0x42638510, 0x4c6a881b, 0x5e719f06, 0x5078920d, 0x0a0fd964, 0x0406d46f, 0x161dc372, 0x1814ce79, 0x322bed48, 0x3c22e043, 0x2e39f75e, 0x2030fa55, 0xec9ab701, 0xe293ba0a, 0xf088ad17, 0xfe81a01c, 0xd4be832d, 0xdab78e26, 0xc8ac993b, 0xc6a59430, 0x9cd2df59, 0x92dbd252, 0x80c0c54f, 0x8ec9c844, 0xa4f6eb75, 0xaaffe67e, 0xb8e4f163, 0xb6edfc68, 0x0c0a67b1, 0x02036aba, 0x10187da7, 0x1e1170ac, 0x342e539d, 0x3a275e96, 0x283c498b, 0x26354480, 0x7c420fe9, 0x724b02e2, 0x605015ff, 0x6e5918f4, 0x44663bc5, 0x4a6f36ce, 0x587421d3, 0x567d2cd8, 0x37a10c7a, 0x39a80171, 0x2bb3166c, 0x25ba1b67, 0x0f853856, 0x018c355d, 0x13972240, 0x1d9e2f4b, 0x47e96422, 0x49e06929, 0x5bfb7e34, 0x55f2733f, 0x7fcd500e, 0x71c45d05, 0x63df4a18, 0x6dd64713, 0xd731dcca, 0xd938d1c1, 0xcb23c6dc, 0xc52acbd7, 0xef15e8e6, 0xe11ce5ed, 0xf307f2f0, 0xfd0efffb, 0xa779b492, 0xa970b999, 0xbb6bae84, 0xb562a38f, 0x9f5d80be, 0x91548db5, 0x834f9aa8, 0x8d4697a3];\n    var U2 = [0x00000000, 0x0b0e090d, 0x161c121a, 0x1d121b17, 0x2c382434, 0x27362d39, 0x3a24362e, 0x312a3f23, 0x58704868, 0x537e4165, 0x4e6c5a72, 0x4562537f, 0x74486c5c, 0x7f466551, 0x62547e46, 0x695a774b, 0xb0e090d0, 0xbbee99dd, 0xa6fc82ca, 0xadf28bc7, 0x9cd8b4e4, 0x97d6bde9, 0x8ac4a6fe, 0x81caaff3, 0xe890d8b8, 0xe39ed1b5, 0xfe8ccaa2, 0xf582c3af, 0xc4a8fc8c, 0xcfa6f581, 0xd2b4ee96, 0xd9bae79b, 0x7bdb3bbb, 0x70d532b6, 0x6dc729a1, 0x66c920ac, 0x57e31f8f, 0x5ced1682, 0x41ff0d95, 0x4af10498, 0x23ab73d3, 0x28a57ade, 0x35b761c9, 0x3eb968c4, 0x0f9357e7, 0x049d5eea, 0x198f45fd, 0x12814cf0, 0xcb3bab6b, 0xc035a266, 0xdd27b971, 0xd629b07c, 0xe7038f5f, 0xec0d8652, 0xf11f9d45, 0xfa119448, 0x934be303, 0x9845ea0e, 0x8557f119, 0x8e59f814, 0xbf73c737, 0xb47dce3a, 0xa96fd52d, 0xa261dc20, 0xf6ad766d, 0xfda37f60, 0xe0b16477, 0xebbf6d7a, 0xda955259, 0xd19b5b54, 0xcc894043, 0xc787494e, 0xaedd3e05, 0xa5d33708, 0xb8c12c1f, 0xb3cf2512, 0x82e51a31, 0x89eb133c, 0x94f9082b, 0x9ff70126, 0x464de6bd, 0x4d43efb0, 0x5051f4a7, 0x5b5ffdaa, 0x6a75c289, 0x617bcb84, 0x7c69d093, 0x7767d99e, 0x1e3daed5, 0x1533a7d8, 0x0821bccf, 0x032fb5c2, 0x32058ae1, 0x390b83ec, 0x241998fb, 0x2f1791f6, 0x8d764dd6, 0x867844db, 0x9b6a5fcc, 0x906456c1, 0xa14e69e2, 0xaa4060ef, 0xb7527bf8, 0xbc5c72f5, 0xd50605be, 0xde080cb3, 0xc31a17a4, 0xc8141ea9, 0xf93e218a, 0xf2302887, 0xef223390, 0xe42c3a9d, 0x3d96dd06, 0x3698d40b, 0x2b8acf1c, 0x2084c611, 0x11aef932, 0x1aa0f03f, 0x07b2eb28, 0x0cbce225, 0x65e6956e, 0x6ee89c63, 0x73fa8774, 0x78f48e79, 0x49deb15a, 0x42d0b857, 0x5fc2a340, 0x54ccaa4d, 0xf741ecda, 0xfc4fe5d7, 0xe15dfec0, 0xea53f7cd, 0xdb79c8ee, 0xd077c1e3, 0xcd65daf4, 0xc66bd3f9, 0xaf31a4b2, 0xa43fadbf, 0xb92db6a8, 0xb223bfa5, 0x83098086, 0x8807898b, 0x9515929c, 0x9e1b9b91, 0x47a17c0a, 0x4caf7507, 0x51bd6e10, 0x5ab3671d, 0x6b99583e, 0x60975133, 0x7d854a24, 0x768b4329, 0x1fd13462, 0x14df3d6f, 0x09cd2678, 0x02c32f75, 0x33e91056, 0x38e7195b, 0x25f5024c, 0x2efb0b41, 0x8c9ad761, 0x8794de6c, 0x9a86c57b, 0x9188cc76, 0xa0a2f355, 0xabacfa58, 0xb6bee14f, 0xbdb0e842, 0xd4ea9f09, 0xdfe49604, 0xc2f68d13, 0xc9f8841e, 0xf8d2bb3d, 0xf3dcb230, 0xeecea927, 0xe5c0a02a, 0x3c7a47b1, 0x37744ebc, 0x2a6655ab, 0x21685ca6, 0x10426385, 0x1b4c6a88, 0x065e719f, 0x0d507892, 0x640a0fd9, 0x6f0406d4, 0x72161dc3, 0x791814ce, 0x48322bed, 0x433c22e0, 0x5e2e39f7, 0x552030fa, 0x01ec9ab7, 0x0ae293ba, 0x17f088ad, 0x1cfe81a0, 0x2dd4be83, 0x26dab78e, 0x3bc8ac99, 0x30c6a594, 0x599cd2df, 0x5292dbd2, 0x4f80c0c5, 0x448ec9c8, 0x75a4f6eb, 0x7eaaffe6, 0x63b8e4f1, 0x68b6edfc, 0xb10c0a67, 0xba02036a, 0xa710187d, 0xac1e1170, 0x9d342e53, 0x963a275e, 0x8b283c49, 0x80263544, 0xe97c420f, 0xe2724b02, 0xff605015, 0xf46e5918, 0xc544663b, 0xce4a6f36, 0xd3587421, 0xd8567d2c, 0x7a37a10c, 0x7139a801, 0x6c2bb316, 0x6725ba1b, 0x560f8538, 0x5d018c35, 0x40139722, 0x4b1d9e2f, 0x2247e964, 0x2949e069, 0x345bfb7e, 0x3f55f273, 0x0e7fcd50, 0x0571c45d, 0x1863df4a, 0x136dd647, 0xcad731dc, 0xc1d938d1, 0xdccb23c6, 0xd7c52acb, 0xe6ef15e8, 0xede11ce5, 0xf0f307f2, 0xfbfd0eff, 0x92a779b4, 0x99a970b9, 0x84bb6bae, 0x8fb562a3, 0xbe9f5d80, 0xb591548d, 0xa8834f9a, 0xa38d4697];\n    var U3 = [0x00000000, 0x0d0b0e09, 0x1a161c12, 0x171d121b, 0x342c3824, 0x3927362d, 0x2e3a2436, 0x23312a3f, 0x68587048, 0x65537e41, 0x724e6c5a, 0x7f456253, 0x5c74486c, 0x517f4665, 0x4662547e, 0x4b695a77, 0xd0b0e090, 0xddbbee99, 0xcaa6fc82, 0xc7adf28b, 0xe49cd8b4, 0xe997d6bd, 0xfe8ac4a6, 0xf381caaf, 0xb8e890d8, 0xb5e39ed1, 0xa2fe8cca, 0xaff582c3, 0x8cc4a8fc, 0x81cfa6f5, 0x96d2b4ee, 0x9bd9bae7, 0xbb7bdb3b, 0xb670d532, 0xa16dc729, 0xac66c920, 0x8f57e31f, 0x825ced16, 0x9541ff0d, 0x984af104, 0xd323ab73, 0xde28a57a, 0xc935b761, 0xc43eb968, 0xe70f9357, 0xea049d5e, 0xfd198f45, 0xf012814c, 0x6bcb3bab, 0x66c035a2, 0x71dd27b9, 0x7cd629b0, 0x5fe7038f, 0x52ec0d86, 0x45f11f9d, 0x48fa1194, 0x03934be3, 0x0e9845ea, 0x198557f1, 0x148e59f8, 0x37bf73c7, 0x3ab47dce, 0x2da96fd5, 0x20a261dc, 0x6df6ad76, 0x60fda37f, 0x77e0b164, 0x7aebbf6d, 0x59da9552, 0x54d19b5b, 0x43cc8940, 0x4ec78749, 0x05aedd3e, 0x08a5d337, 0x1fb8c12c, 0x12b3cf25, 0x3182e51a, 0x3c89eb13, 0x2b94f908, 0x269ff701, 0xbd464de6, 0xb04d43ef, 0xa75051f4, 0xaa5b5ffd, 0x896a75c2, 0x84617bcb, 0x937c69d0, 0x9e7767d9, 0xd51e3dae, 0xd81533a7, 0xcf0821bc, 0xc2032fb5, 0xe132058a, 0xec390b83, 0xfb241998, 0xf62f1791, 0xd68d764d, 0xdb867844, 0xcc9b6a5f, 0xc1906456, 0xe2a14e69, 0xefaa4060, 0xf8b7527b, 0xf5bc5c72, 0xbed50605, 0xb3de080c, 0xa4c31a17, 0xa9c8141e, 0x8af93e21, 0x87f23028, 0x90ef2233, 0x9de42c3a, 0x063d96dd, 0x0b3698d4, 0x1c2b8acf, 0x112084c6, 0x3211aef9, 0x3f1aa0f0, 0x2807b2eb, 0x250cbce2, 0x6e65e695, 0x636ee89c, 0x7473fa87, 0x7978f48e, 0x5a49deb1, 0x5742d0b8, 0x405fc2a3, 0x4d54ccaa, 0xdaf741ec, 0xd7fc4fe5, 0xc0e15dfe, 0xcdea53f7, 0xeedb79c8, 0xe3d077c1, 0xf4cd65da, 0xf9c66bd3, 0xb2af31a4, 0xbfa43fad, 0xa8b92db6, 0xa5b223bf, 0x86830980, 0x8b880789, 0x9c951592, 0x919e1b9b, 0x0a47a17c, 0x074caf75, 0x1051bd6e, 0x1d5ab367, 0x3e6b9958, 0x33609751, 0x247d854a, 0x29768b43, 0x621fd134, 0x6f14df3d, 0x7809cd26, 0x7502c32f, 0x5633e910, 0x5b38e719, 0x4c25f502, 0x412efb0b, 0x618c9ad7, 0x6c8794de, 0x7b9a86c5, 0x769188cc, 0x55a0a2f3, 0x58abacfa, 0x4fb6bee1, 0x42bdb0e8, 0x09d4ea9f, 0x04dfe496, 0x13c2f68d, 0x1ec9f884, 0x3df8d2bb, 0x30f3dcb2, 0x27eecea9, 0x2ae5c0a0, 0xb13c7a47, 0xbc37744e, 0xab2a6655, 0xa621685c, 0x85104263, 0x881b4c6a, 0x9f065e71, 0x920d5078, 0xd9640a0f, 0xd46f0406, 0xc372161d, 0xce791814, 0xed48322b, 0xe0433c22, 0xf75e2e39, 0xfa552030, 0xb701ec9a, 0xba0ae293, 0xad17f088, 0xa01cfe81, 0x832dd4be, 0x8e26dab7, 0x993bc8ac, 0x9430c6a5, 0xdf599cd2, 0xd25292db, 0xc54f80c0, 0xc8448ec9, 0xeb75a4f6, 0xe67eaaff, 0xf163b8e4, 0xfc68b6ed, 0x67b10c0a, 0x6aba0203, 0x7da71018, 0x70ac1e11, 0x539d342e, 0x5e963a27, 0x498b283c, 0x44802635, 0x0fe97c42, 0x02e2724b, 0x15ff6050, 0x18f46e59, 0x3bc54466, 0x36ce4a6f, 0x21d35874, 0x2cd8567d, 0x0c7a37a1, 0x017139a8, 0x166c2bb3, 0x1b6725ba, 0x38560f85, 0x355d018c, 0x22401397, 0x2f4b1d9e, 0x642247e9, 0x692949e0, 0x7e345bfb, 0x733f55f2, 0x500e7fcd, 0x5d0571c4, 0x4a1863df, 0x47136dd6, 0xdccad731, 0xd1c1d938, 0xc6dccb23, 0xcbd7c52a, 0xe8e6ef15, 0xe5ede11c, 0xf2f0f307, 0xfffbfd0e, 0xb492a779, 0xb999a970, 0xae84bb6b, 0xa38fb562, 0x80be9f5d, 0x8db59154, 0x9aa8834f, 0x97a38d46];\n    var U4 = [0x00000000, 0x090d0b0e, 0x121a161c, 0x1b171d12, 0x24342c38, 0x2d392736, 0x362e3a24, 0x3f23312a, 0x48685870, 0x4165537e, 0x5a724e6c, 0x537f4562, 0x6c5c7448, 0x65517f46, 0x7e466254, 0x774b695a, 0x90d0b0e0, 0x99ddbbee, 0x82caa6fc, 0x8bc7adf2, 0xb4e49cd8, 0xbde997d6, 0xa6fe8ac4, 0xaff381ca, 0xd8b8e890, 0xd1b5e39e, 0xcaa2fe8c, 0xc3aff582, 0xfc8cc4a8, 0xf581cfa6, 0xee96d2b4, 0xe79bd9ba, 0x3bbb7bdb, 0x32b670d5, 0x29a16dc7, 0x20ac66c9, 0x1f8f57e3, 0x16825ced, 0x0d9541ff, 0x04984af1, 0x73d323ab, 0x7ade28a5, 0x61c935b7, 0x68c43eb9, 0x57e70f93, 0x5eea049d, 0x45fd198f, 0x4cf01281, 0xab6bcb3b, 0xa266c035, 0xb971dd27, 0xb07cd629, 0x8f5fe703, 0x8652ec0d, 0x9d45f11f, 0x9448fa11, 0xe303934b, 0xea0e9845, 0xf1198557, 0xf8148e59, 0xc737bf73, 0xce3ab47d, 0xd52da96f, 0xdc20a261, 0x766df6ad, 0x7f60fda3, 0x6477e0b1, 0x6d7aebbf, 0x5259da95, 0x5b54d19b, 0x4043cc89, 0x494ec787, 0x3e05aedd, 0x3708a5d3, 0x2c1fb8c1, 0x2512b3cf, 0x1a3182e5, 0x133c89eb, 0x082b94f9, 0x01269ff7, 0xe6bd464d, 0xefb04d43, 0xf4a75051, 0xfdaa5b5f, 0xc2896a75, 0xcb84617b, 0xd0937c69, 0xd99e7767, 0xaed51e3d, 0xa7d81533, 0xbccf0821, 0xb5c2032f, 0x8ae13205, 0x83ec390b, 0x98fb2419, 0x91f62f17, 0x4dd68d76, 0x44db8678, 0x5fcc9b6a, 0x56c19064, 0x69e2a14e, 0x60efaa40, 0x7bf8b752, 0x72f5bc5c, 0x05bed506, 0x0cb3de08, 0x17a4c31a, 0x1ea9c814, 0x218af93e, 0x2887f230, 0x3390ef22, 0x3a9de42c, 0xdd063d96, 0xd40b3698, 0xcf1c2b8a, 0xc6112084, 0xf93211ae, 0xf03f1aa0, 0xeb2807b2, 0xe2250cbc, 0x956e65e6, 0x9c636ee8, 0x877473fa, 0x8e7978f4, 0xb15a49de, 0xb85742d0, 0xa3405fc2, 0xaa4d54cc, 0xecdaf741, 0xe5d7fc4f, 0xfec0e15d, 0xf7cdea53, 0xc8eedb79, 0xc1e3d077, 0xdaf4cd65, 0xd3f9c66b, 0xa4b2af31, 0xadbfa43f, 0xb6a8b92d, 0xbfa5b223, 0x80868309, 0x898b8807, 0x929c9515, 0x9b919e1b, 0x7c0a47a1, 0x75074caf, 0x6e1051bd, 0x671d5ab3, 0x583e6b99, 0x51336097, 0x4a247d85, 0x4329768b, 0x34621fd1, 0x3d6f14df, 0x267809cd, 0x2f7502c3, 0x105633e9, 0x195b38e7, 0x024c25f5, 0x0b412efb, 0xd7618c9a, 0xde6c8794, 0xc57b9a86, 0xcc769188, 0xf355a0a2, 0xfa58abac, 0xe14fb6be, 0xe842bdb0, 0x9f09d4ea, 0x9604dfe4, 0x8d13c2f6, 0x841ec9f8, 0xbb3df8d2, 0xb230f3dc, 0xa927eece, 0xa02ae5c0, 0x47b13c7a, 0x4ebc3774, 0x55ab2a66, 0x5ca62168, 0x63851042, 0x6a881b4c, 0x719f065e, 0x78920d50, 0x0fd9640a, 0x06d46f04, 0x1dc37216, 0x14ce7918, 0x2bed4832, 0x22e0433c, 0x39f75e2e, 0x30fa5520, 0x9ab701ec, 0x93ba0ae2, 0x88ad17f0, 0x81a01cfe, 0xbe832dd4, 0xb78e26da, 0xac993bc8, 0xa59430c6, 0xd2df599c, 0xdbd25292, 0xc0c54f80, 0xc9c8448e, 0xf6eb75a4, 0xffe67eaa, 0xe4f163b8, 0xedfc68b6, 0x0a67b10c, 0x036aba02, 0x187da710, 0x1170ac1e, 0x2e539d34, 0x275e963a, 0x3c498b28, 0x35448026, 0x420fe97c, 0x4b02e272, 0x5015ff60, 0x5918f46e, 0x663bc544, 0x6f36ce4a, 0x7421d358, 0x7d2cd856, 0xa10c7a37, 0xa8017139, 0xb3166c2b, 0xba1b6725, 0x8538560f, 0x8c355d01, 0x97224013, 0x9e2f4b1d, 0xe9642247, 0xe0692949, 0xfb7e345b, 0xf2733f55, 0xcd500e7f, 0xc45d0571, 0xdf4a1863, 0xd647136d, 0x31dccad7, 0x38d1c1d9, 0x23c6dccb, 0x2acbd7c5, 0x15e8e6ef, 0x1ce5ede1, 0x07f2f0f3, 0x0efffbfd, 0x79b492a7, 0x70b999a9, 0x6bae84bb, 0x62a38fb5, 0x5d80be9f, 0x548db591, 0x4f9aa883, 0x4697a38d];\n\n    function convertToInt32(bytes) {\n        var result = [];\n        for (var i = 0; i < bytes.length; i += 4) {\n            result.push(\n                (bytes[i    ] << 24) |\n                (bytes[i + 1] << 16) |\n                (bytes[i + 2] <<  8) |\n                 bytes[i + 3]\n            );\n        }\n        return result;\n    }\n\n    var AES = function(key) {\n        if (!(this instanceof AES)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        Object.defineProperty(this, 'key', {\n            value: coerceArray(key, true)\n        });\n\n        this._prepare();\n    }\n\n\n    AES.prototype._prepare = function() {\n\n        var rounds = numberOfRounds[this.key.length];\n        if (rounds == null) {\n            throw new Error('invalid key size (must be 16, 24 or 32 bytes)');\n        }\n\n        // encryption round keys\n        this._Ke = [];\n\n        // decryption round keys\n        this._Kd = [];\n\n        for (var i = 0; i <= rounds; i++) {\n            this._Ke.push([0, 0, 0, 0]);\n            this._Kd.push([0, 0, 0, 0]);\n        }\n\n        var roundKeyCount = (rounds + 1) * 4;\n        var KC = this.key.length / 4;\n\n        // convert the key into ints\n        var tk = convertToInt32(this.key);\n\n        // copy values into round key arrays\n        var index;\n        for (var i = 0; i < KC; i++) {\n            index = i >> 2;\n            this._Ke[index][i % 4] = tk[i];\n            this._Kd[rounds - index][i % 4] = tk[i];\n        }\n\n        // key expansion (fips-197 section 5.2)\n        var rconpointer = 0;\n        var t = KC, tt;\n        while (t < roundKeyCount) {\n            tt = tk[KC - 1];\n            tk[0] ^= ((S[(tt >> 16) & 0xFF] << 24) ^\n                      (S[(tt >>  8) & 0xFF] << 16) ^\n                      (S[ tt        & 0xFF] <<  8) ^\n                       S[(tt >> 24) & 0xFF]        ^\n                      (rcon[rconpointer] << 24));\n            rconpointer += 1;\n\n            // key expansion (for non-256 bit)\n            if (KC != 8) {\n                for (var i = 1; i < KC; i++) {\n                    tk[i] ^= tk[i - 1];\n                }\n\n            // key expansion for 256-bit keys is \"slightly different\" (fips-197)\n            } else {\n                for (var i = 1; i < (KC / 2); i++) {\n                    tk[i] ^= tk[i - 1];\n                }\n                tt = tk[(KC / 2) - 1];\n\n                tk[KC / 2] ^= (S[ tt        & 0xFF]        ^\n                              (S[(tt >>  8) & 0xFF] <<  8) ^\n                              (S[(tt >> 16) & 0xFF] << 16) ^\n                              (S[(tt >> 24) & 0xFF] << 24));\n\n                for (var i = (KC / 2) + 1; i < KC; i++) {\n                    tk[i] ^= tk[i - 1];\n                }\n            }\n\n            // copy values into round key arrays\n            var i = 0, r, c;\n            while (i < KC && t < roundKeyCount) {\n                r = t >> 2;\n                c = t % 4;\n                this._Ke[r][c] = tk[i];\n                this._Kd[rounds - r][c] = tk[i++];\n                t++;\n            }\n        }\n\n        // inverse-cipher-ify the decryption round key (fips-197 section 5.3)\n        for (var r = 1; r < rounds; r++) {\n            for (var c = 0; c < 4; c++) {\n                tt = this._Kd[r][c];\n                this._Kd[r][c] = (U1[(tt >> 24) & 0xFF] ^\n                                  U2[(tt >> 16) & 0xFF] ^\n                                  U3[(tt >>  8) & 0xFF] ^\n                                  U4[ tt        & 0xFF]);\n            }\n        }\n    }\n\n    AES.prototype.encrypt = function(plaintext) {\n        if (plaintext.length != 16) {\n            throw new Error('invalid plaintext size (must be 16 bytes)');\n        }\n\n        var rounds = this._Ke.length - 1;\n        var a = [0, 0, 0, 0];\n\n        // convert plaintext to (ints ^ key)\n        var t = convertToInt32(plaintext);\n        for (var i = 0; i < 4; i++) {\n            t[i] ^= this._Ke[0][i];\n        }\n\n        // apply round transforms\n        for (var r = 1; r < rounds; r++) {\n            for (var i = 0; i < 4; i++) {\n                a[i] = (T1[(t[ i         ] >> 24) & 0xff] ^\n                        T2[(t[(i + 1) % 4] >> 16) & 0xff] ^\n                        T3[(t[(i + 2) % 4] >>  8) & 0xff] ^\n                        T4[ t[(i + 3) % 4]        & 0xff] ^\n                        this._Ke[r][i]);\n            }\n            t = a.slice();\n        }\n\n        // the last round is special\n        var result = createArray(16), tt;\n        for (var i = 0; i < 4; i++) {\n            tt = this._Ke[rounds][i];\n            result[4 * i    ] = (S[(t[ i         ] >> 24) & 0xff] ^ (tt >> 24)) & 0xff;\n            result[4 * i + 1] = (S[(t[(i + 1) % 4] >> 16) & 0xff] ^ (tt >> 16)) & 0xff;\n            result[4 * i + 2] = (S[(t[(i + 2) % 4] >>  8) & 0xff] ^ (tt >>  8)) & 0xff;\n            result[4 * i + 3] = (S[ t[(i + 3) % 4]        & 0xff] ^  tt       ) & 0xff;\n        }\n\n        return result;\n    }\n\n    AES.prototype.decrypt = function(ciphertext) {\n        if (ciphertext.length != 16) {\n            throw new Error('invalid ciphertext size (must be 16 bytes)');\n        }\n\n        var rounds = this._Kd.length - 1;\n        var a = [0, 0, 0, 0];\n\n        // convert plaintext to (ints ^ key)\n        var t = convertToInt32(ciphertext);\n        for (var i = 0; i < 4; i++) {\n            t[i] ^= this._Kd[0][i];\n        }\n\n        // apply round transforms\n        for (var r = 1; r < rounds; r++) {\n            for (var i = 0; i < 4; i++) {\n                a[i] = (T5[(t[ i          ] >> 24) & 0xff] ^\n                        T6[(t[(i + 3) % 4] >> 16) & 0xff] ^\n                        T7[(t[(i + 2) % 4] >>  8) & 0xff] ^\n                        T8[ t[(i + 1) % 4]        & 0xff] ^\n                        this._Kd[r][i]);\n            }\n            t = a.slice();\n        }\n\n        // the last round is special\n        var result = createArray(16), tt;\n        for (var i = 0; i < 4; i++) {\n            tt = this._Kd[rounds][i];\n            result[4 * i    ] = (Si[(t[ i         ] >> 24) & 0xff] ^ (tt >> 24)) & 0xff;\n            result[4 * i + 1] = (Si[(t[(i + 3) % 4] >> 16) & 0xff] ^ (tt >> 16)) & 0xff;\n            result[4 * i + 2] = (Si[(t[(i + 2) % 4] >>  8) & 0xff] ^ (tt >>  8)) & 0xff;\n            result[4 * i + 3] = (Si[ t[(i + 1) % 4]        & 0xff] ^  tt       ) & 0xff;\n        }\n\n        return result;\n    }\n\n\n    /**\n     *  Mode Of Operation - Electonic Codebook (ECB)\n     */\n    var ModeOfOperationECB = function(key) {\n        if (!(this instanceof ModeOfOperationECB)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Electronic Code Block\";\n        this.name = \"ecb\";\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationECB.prototype.encrypt = function(plaintext) {\n        plaintext = coerceArray(plaintext);\n\n        if ((plaintext.length % 16) !== 0) {\n            throw new Error('invalid plaintext size (must be multiple of 16 bytes)');\n        }\n\n        var ciphertext = createArray(plaintext.length);\n        var block = createArray(16);\n\n        for (var i = 0; i < plaintext.length; i += 16) {\n            copyArray(plaintext, block, 0, i, i + 16);\n            block = this._aes.encrypt(block);\n            copyArray(block, ciphertext, i);\n        }\n\n        return ciphertext;\n    }\n\n    ModeOfOperationECB.prototype.decrypt = function(ciphertext) {\n        ciphertext = coerceArray(ciphertext);\n\n        if ((ciphertext.length % 16) !== 0) {\n            throw new Error('invalid ciphertext size (must be multiple of 16 bytes)');\n        }\n\n        var plaintext = createArray(ciphertext.length);\n        var block = createArray(16);\n\n        for (var i = 0; i < ciphertext.length; i += 16) {\n            copyArray(ciphertext, block, 0, i, i + 16);\n            block = this._aes.decrypt(block);\n            copyArray(block, plaintext, i);\n        }\n\n        return plaintext;\n    }\n\n\n    /**\n     *  Mode Of Operation - Cipher Block Chaining (CBC)\n     */\n    var ModeOfOperationCBC = function(key, iv) {\n        if (!(this instanceof ModeOfOperationCBC)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Cipher Block Chaining\";\n        this.name = \"cbc\";\n\n        if (!iv) {\n            iv = createArray(16);\n\n        } else if (iv.length != 16) {\n            throw new Error('invalid initialation vector size (must be 16 bytes)');\n        }\n\n        this._lastCipherblock = coerceArray(iv, true);\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationCBC.prototype.encrypt = function(plaintext) {\n        plaintext = coerceArray(plaintext);\n\n        if ((plaintext.length % 16) !== 0) {\n            throw new Error('invalid plaintext size (must be multiple of 16 bytes)');\n        }\n\n        var ciphertext = createArray(plaintext.length);\n        var block = createArray(16);\n\n        for (var i = 0; i < plaintext.length; i += 16) {\n            copyArray(plaintext, block, 0, i, i + 16);\n\n            for (var j = 0; j < 16; j++) {\n                block[j] ^= this._lastCipherblock[j];\n            }\n\n            this._lastCipherblock = this._aes.encrypt(block);\n            copyArray(this._lastCipherblock, ciphertext, i);\n        }\n\n        return ciphertext;\n    }\n\n    ModeOfOperationCBC.prototype.decrypt = function(ciphertext) {\n        ciphertext = coerceArray(ciphertext);\n\n        if ((ciphertext.length % 16) !== 0) {\n            throw new Error('invalid ciphertext size (must be multiple of 16 bytes)');\n        }\n\n        var plaintext = createArray(ciphertext.length);\n        var block = createArray(16);\n\n        for (var i = 0; i < ciphertext.length; i += 16) {\n            copyArray(ciphertext, block, 0, i, i + 16);\n            block = this._aes.decrypt(block);\n\n            for (var j = 0; j < 16; j++) {\n                plaintext[i + j] = block[j] ^ this._lastCipherblock[j];\n            }\n\n            copyArray(ciphertext, this._lastCipherblock, 0, i, i + 16);\n        }\n\n        return plaintext;\n    }\n\n\n    /**\n     *  Mode Of Operation - Cipher Feedback (CFB)\n     */\n    var ModeOfOperationCFB = function(key, iv, segmentSize) {\n        if (!(this instanceof ModeOfOperationCFB)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Cipher Feedback\";\n        this.name = \"cfb\";\n\n        if (!iv) {\n            iv = createArray(16);\n\n        } else if (iv.length != 16) {\n            throw new Error('invalid initialation vector size (must be 16 size)');\n        }\n\n        if (!segmentSize) { segmentSize = 1; }\n\n        this.segmentSize = segmentSize;\n\n        this._shiftRegister = coerceArray(iv, true);\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationCFB.prototype.encrypt = function(plaintext) {\n        if ((plaintext.length % this.segmentSize) != 0) {\n            throw new Error('invalid plaintext size (must be segmentSize bytes)');\n        }\n\n        var encrypted = coerceArray(plaintext, true);\n\n        var xorSegment;\n        for (var i = 0; i < encrypted.length; i += this.segmentSize) {\n            xorSegment = this._aes.encrypt(this._shiftRegister);\n            for (var j = 0; j < this.segmentSize; j++) {\n                encrypted[i + j] ^= xorSegment[j];\n            }\n\n            // Shift the register\n            copyArray(this._shiftRegister, this._shiftRegister, 0, this.segmentSize);\n            copyArray(encrypted, this._shiftRegister, 16 - this.segmentSize, i, i + this.segmentSize);\n        }\n\n        return encrypted;\n    }\n\n    ModeOfOperationCFB.prototype.decrypt = function(ciphertext) {\n        if ((ciphertext.length % this.segmentSize) != 0) {\n            throw new Error('invalid ciphertext size (must be segmentSize bytes)');\n        }\n\n        var plaintext = coerceArray(ciphertext, true);\n\n        var xorSegment;\n        for (var i = 0; i < plaintext.length; i += this.segmentSize) {\n            xorSegment = this._aes.encrypt(this._shiftRegister);\n\n            for (var j = 0; j < this.segmentSize; j++) {\n                plaintext[i + j] ^= xorSegment[j];\n            }\n\n            // Shift the register\n            copyArray(this._shiftRegister, this._shiftRegister, 0, this.segmentSize);\n            copyArray(ciphertext, this._shiftRegister, 16 - this.segmentSize, i, i + this.segmentSize);\n        }\n\n        return plaintext;\n    }\n\n    /**\n     *  Mode Of Operation - Output Feedback (OFB)\n     */\n    var ModeOfOperationOFB = function(key, iv) {\n        if (!(this instanceof ModeOfOperationOFB)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Output Feedback\";\n        this.name = \"ofb\";\n\n        if (!iv) {\n            iv = createArray(16);\n\n        } else if (iv.length != 16) {\n            throw new Error('invalid initialation vector size (must be 16 bytes)');\n        }\n\n        this._lastPrecipher = coerceArray(iv, true);\n        this._lastPrecipherIndex = 16;\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationOFB.prototype.encrypt = function(plaintext) {\n        var encrypted = coerceArray(plaintext, true);\n\n        for (var i = 0; i < encrypted.length; i++) {\n            if (this._lastPrecipherIndex === 16) {\n                this._lastPrecipher = this._aes.encrypt(this._lastPrecipher);\n                this._lastPrecipherIndex = 0;\n            }\n            encrypted[i] ^= this._lastPrecipher[this._lastPrecipherIndex++];\n        }\n\n        return encrypted;\n    }\n\n    // Decryption is symetric\n    ModeOfOperationOFB.prototype.decrypt = ModeOfOperationOFB.prototype.encrypt;\n\n\n    /**\n     *  Counter object for CTR common mode of operation\n     */\n    var Counter = function(initialValue) {\n        if (!(this instanceof Counter)) {\n            throw Error('Counter must be instanitated with `new`');\n        }\n\n        // We allow 0, but anything false-ish uses the default 1\n        if (initialValue !== 0 && !initialValue) { initialValue = 1; }\n\n        if (typeof(initialValue) === 'number') {\n            this._counter = createArray(16);\n            this.setValue(initialValue);\n\n        } else {\n            this.setBytes(initialValue);\n        }\n    }\n\n    Counter.prototype.setValue = function(value) {\n        if (typeof(value) !== 'number' || parseInt(value) != value) {\n            throw new Error('invalid counter value (must be an integer)');\n        }\n\n        for (var index = 15; index >= 0; --index) {\n            this._counter[index] = value % 256;\n            value = value >> 8;\n        }\n    }\n\n    Counter.prototype.setBytes = function(bytes) {\n        bytes = coerceArray(bytes, true);\n\n        if (bytes.length != 16) {\n            throw new Error('invalid counter bytes size (must be 16 bytes)');\n        }\n\n        this._counter = bytes;\n    };\n\n    Counter.prototype.increment = function() {\n        for (var i = 15; i >= 0; i--) {\n            if (this._counter[i] === 255) {\n                this._counter[i] = 0;\n            } else {\n                this._counter[i]++;\n                break;\n            }\n        }\n    }\n\n\n    /**\n     *  Mode Of Operation - Counter (CTR)\n     */\n    var ModeOfOperationCTR = function(key, counter) {\n        if (!(this instanceof ModeOfOperationCTR)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Counter\";\n        this.name = \"ctr\";\n\n        if (!(counter instanceof Counter)) {\n            counter = new Counter(counter)\n        }\n\n        this._counter = counter;\n\n        this._remainingCounter = null;\n        this._remainingCounterIndex = 16;\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationCTR.prototype.encrypt = function(plaintext) {\n        var encrypted = coerceArray(plaintext, true);\n\n        for (var i = 0; i < encrypted.length; i++) {\n            if (this._remainingCounterIndex === 16) {\n                this._remainingCounter = this._aes.encrypt(this._counter._counter);\n                this._remainingCounterIndex = 0;\n                this._counter.increment();\n            }\n            encrypted[i] ^= this._remainingCounter[this._remainingCounterIndex++];\n        }\n\n        return encrypted;\n    }\n\n    // Decryption is symetric\n    ModeOfOperationCTR.prototype.decrypt = ModeOfOperationCTR.prototype.encrypt;\n\n\n    ///////////////////////\n    // Padding\n\n    // See:https://tools.ietf.org/html/rfc2315\n    function pkcs7pad(data) {\n        data = coerceArray(data, true);\n        var padder = 16 - (data.length % 16);\n        var result = createArray(data.length + padder);\n        copyArray(data, result);\n        for (var i = data.length; i < result.length; i++) {\n            result[i] = padder;\n        }\n        return result;\n    }\n\n    function pkcs7strip(data) {\n        data = coerceArray(data, true);\n        if (data.length < 16) { throw new Error('PKCS#7 invalid length'); }\n\n        var padder = data[data.length - 1];\n        if (padder > 16) { throw new Error('PKCS#7 padding byte out of range'); }\n\n        var length = data.length - padder;\n        for (var i = 0; i < padder; i++) {\n            if (data[length + i] !== padder) {\n                throw new Error('PKCS#7 invalid padding byte');\n            }\n        }\n\n        var result = createArray(length);\n        copyArray(data, result, 0, 0, length);\n        return result;\n    }\n\n    ///////////////////////\n    // Exporting\n\n\n    // The block cipher\n    var aesjs = {\n        AES: AES,\n        Counter: Counter,\n\n        ModeOfOperation: {\n            ecb: ModeOfOperationECB,\n            cbc: ModeOfOperationCBC,\n            cfb: ModeOfOperationCFB,\n            ofb: ModeOfOperationOFB,\n            ctr: ModeOfOperationCTR\n        },\n\n        utils: {\n            hex: convertHex,\n            utf8: convertUtf8\n        },\n\n        padding: {\n            pkcs7: {\n                pad: pkcs7pad,\n                strip: pkcs7strip\n            }\n        },\n\n        _arrayTest: {\n            coerceArray: coerceArray,\n            createArray: createArray,\n            copyArray: copyArray,\n        }\n    };\n\n\n    // node.js\n    if (typeof exports !== 'undefined') {\n        module.exports = aesjs\n\n    // RequireJS/AMD\n    // http://www.requirejs.org/docs/api.html\n    // https://github.com/amdjs/amdjs-api/wiki/AMD\n    } else if (typeof(define) === 'function' && define.amd) {\n        define(aesjs);\n\n    // Web Browsers\n    } else {\n\n        // If there was an existing library at \"aesjs\" make sure it's still available\n        if (root.aesjs) {\n            aesjs._aesjs = root.aesjs;\n        }\n\n        root.aesjs = aesjs;\n    }\n\n\n})(this);\n","/*! crc32.js (C) 2014-present SheetJS -- http://sheetjs.com */\n/* vim: set ts=2: */\n/*exported CRC32 */\nvar CRC32;\n(function (factory) {\n\t/*jshint ignore:start */\n\t/*eslint-disable */\n\tif(typeof DO_NOT_EXPORT_CRC === 'undefined') {\n\t\tif('object' === typeof exports) {\n\t\t\tfactory(exports);\n\t\t} else if ('function' === typeof define && define.amd) {\n\t\t\tdefine(function () {\n\t\t\t\tvar module = {};\n\t\t\t\tfactory(module);\n\t\t\t\treturn module;\n\t\t\t});\n\t\t} else {\n\t\t\tfactory(CRC32 = {});\n\t\t}\n\t} else {\n\t\tfactory(CRC32 = {});\n\t}\n\t/*eslint-enable */\n\t/*jshint ignore:end */\n}(function(CRC32) {\nCRC32.version = '1.2.2';\n/*global Int32Array */\nfunction signed_crc_table() {\n\tvar c = 0, table = new Array(256);\n\n\tfor(var n =0; n != 256; ++n){\n\t\tc = n;\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\ttable[n] = c;\n\t}\n\n\treturn typeof Int32Array !== 'undefined' ? new Int32Array(table) : table;\n}\n\nvar T0 = signed_crc_table();\nfunction slice_by_16_tables(T) {\n\tvar c = 0, v = 0, n = 0, table = typeof Int32Array !== 'undefined' ? new Int32Array(4096) : new Array(4096) ;\n\n\tfor(n = 0; n != 256; ++n) table[n] = T[n];\n\tfor(n = 0; n != 256; ++n) {\n\t\tv = T[n];\n\t\tfor(c = 256 + n; c < 4096; c += 256) v = table[c] = (v >>> 8) ^ T[v & 0xFF];\n\t}\n\tvar out = [];\n\tfor(n = 1; n != 16; ++n) out[n - 1] = typeof Int32Array !== 'undefined' ? table.subarray(n * 256, n * 256 + 256) : table.slice(n * 256, n * 256 + 256);\n\treturn out;\n}\nvar TT = slice_by_16_tables(T0);\nvar T1 = TT[0],  T2 = TT[1],  T3 = TT[2],  T4 = TT[3],  T5 = TT[4];\nvar T6 = TT[5],  T7 = TT[6],  T8 = TT[7],  T9 = TT[8],  Ta = TT[9];\nvar Tb = TT[10], Tc = TT[11], Td = TT[12], Te = TT[13], Tf = TT[14];\nfunction crc32_bstr(bstr, seed) {\n\tvar C = seed ^ -1;\n\tfor(var i = 0, L = bstr.length; i < L;) C = (C>>>8) ^ T0[(C^bstr.charCodeAt(i++))&0xFF];\n\treturn ~C;\n}\n\nfunction crc32_buf(B, seed) {\n\tvar C = seed ^ -1, L = B.length - 15, i = 0;\n\tfor(; i < L;) C =\n\t\tTf[B[i++] ^ (C & 255)] ^\n\t\tTe[B[i++] ^ ((C >> 8) & 255)] ^\n\t\tTd[B[i++] ^ ((C >> 16) & 255)] ^\n\t\tTc[B[i++] ^ (C >>> 24)] ^\n\t\tTb[B[i++]] ^ Ta[B[i++]] ^ T9[B[i++]] ^ T8[B[i++]] ^\n\t\tT7[B[i++]] ^ T6[B[i++]] ^ T5[B[i++]] ^ T4[B[i++]] ^\n\t\tT3[B[i++]] ^ T2[B[i++]] ^ T1[B[i++]] ^ T0[B[i++]];\n\tL += 15;\n\twhile(i < L) C = (C>>>8) ^ T0[(C^B[i++])&0xFF];\n\treturn ~C;\n}\n\nfunction crc32_str(str, seed) {\n\tvar C = seed ^ -1;\n\tfor(var i = 0, L = str.length, c = 0, d = 0; i < L;) {\n\t\tc = str.charCodeAt(i++);\n\t\tif(c < 0x80) {\n\t\t\tC = (C>>>8) ^ T0[(C^c)&0xFF];\n\t\t} else if(c < 0x800) {\n\t\t\tC = (C>>>8) ^ T0[(C ^ (192|((c>>6)&31)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|(c&63)))&0xFF];\n\t\t} else if(c >= 0xD800 && c < 0xE000) {\n\t\t\tc = (c&1023)+64; d = str.charCodeAt(i++)&1023;\n\t\t\tC = (C>>>8) ^ T0[(C ^ (240|((c>>8)&7)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|((c>>2)&63)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|((d>>6)&15)|((c&3)<<4)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|(d&63)))&0xFF];\n\t\t} else {\n\t\t\tC = (C>>>8) ^ T0[(C ^ (224|((c>>12)&15)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|((c>>6)&63)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|(c&63)))&0xFF];\n\t\t}\n\t}\n\treturn ~C;\n}\nCRC32.table = T0;\n// $FlowIgnore\nCRC32.bstr = crc32_bstr;\n// $FlowIgnore\nCRC32.buf = crc32_buf;\n// $FlowIgnore\nCRC32.str = crc32_str;\n}));\n","\"use strict\";\n\nvar EC = require(\"elliptic\").ec;\n\nvar ec = new EC(\"secp256k1\");\nvar browserCrypto = global.crypto || global.msCrypto || {};\nvar subtle = browserCrypto.subtle || browserCrypto.webkitSubtle;\n\nvar nodeCrypto = require('crypto');\n\nconst EC_GROUP_ORDER = Buffer.from('fffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141', 'hex');\nconst ZERO32 = Buffer.alloc(32, 0);\n\nfunction assert(condition, message) {\n  if (!condition) {\n    throw new Error(message || \"Assertion failed\");\n  }\n}\n\nfunction isScalar (x) {\n  return Buffer.isBuffer(x) && x.length === 32;\n}\n\nfunction isValidPrivateKey(privateKey) {\n  if (!isScalar(privateKey))\n  {\n    return false;\n  }\n  return privateKey.compare(ZERO32) > 0 && // > 0\n  privateKey.compare(EC_GROUP_ORDER) < 0; // < G\n}\n\n// Compare two buffers in constant time to prevent timing attacks.\nfunction equalConstTime(b1, b2) {\n  if (b1.length !== b2.length) {\n    return false;\n  }\n  var res = 0;\n  for (var i = 0; i < b1.length; i++) {\n    res |= b1[i] ^ b2[i];  // jshint ignore:line\n  }\n  return res === 0;\n}\n\n/* This must check if we're in the browser or\nnot, since the functions are different and does\nnot convert using browserify */\nfunction randomBytes(size) {\n  var arr = new Uint8Array(size);\n  if (typeof browserCrypto.getRandomValues === 'undefined') {\n    return Buffer.from(nodeCrypto.randomBytes(size));\n  } else {\n    browserCrypto.getRandomValues(arr);\n  }\n  return Buffer.from(arr);\n}\n\nfunction sha512(msg) {\n  return new Promise(function(resolve) {\n    var hash = nodeCrypto.createHash('sha512');\n    var result = hash.update(msg).digest();\n    resolve(new Uint8Array(result));\n  });\n}\n\nfunction getAes(op) {\n  return function(iv, key, data) {\n    return new Promise(function(resolve) {\n      if (subtle) {\n        var importAlgorithm = {name: \"AES-CBC\"};\n        var keyp = subtle.importKey(\"raw\", key, importAlgorithm, false, [op]);\n        return keyp.then(function(cryptoKey) {\n          var encAlgorithm = {name: \"AES-CBC\", iv: iv};\n          return subtle[op](encAlgorithm, cryptoKey, data);\n        }).then(function(result) {\n          resolve(Buffer.from(new Uint8Array(result)));\n        });\n      } else {\n        if (op === 'encrypt') {\n          var cipher = nodeCrypto.createCipheriv('aes-256-cbc', key, iv);\n          let firstChunk = cipher.update(data);\n          let secondChunk = cipher.final();\n          resolve(Buffer.concat([firstChunk, secondChunk]));\n        }\n        else if (op === 'decrypt') {\n          var decipher = nodeCrypto.createDecipheriv('aes-256-cbc', key, iv);\n          let firstChunk = decipher.update(data);\n          let secondChunk = decipher.final();\n          resolve(Buffer.concat([firstChunk, secondChunk]));\n        }\n      }\n    });\n  };\n}\n\nvar aesCbcEncrypt = getAes(\"encrypt\");\nvar aesCbcDecrypt = getAes(\"decrypt\");\n\nfunction hmacSha256Sign(key, msg) {\n  return new Promise(function(resolve) {\n    var hmac = nodeCrypto.createHmac('sha256', Buffer.from(key));\n    hmac.update(msg);\n    var result = hmac.digest();\n    resolve(result);\n  });\n}\n\nfunction hmacSha256Verify(key, msg, sig) {\n  return new Promise(function(resolve) {\n    var hmac = nodeCrypto.createHmac('sha256', Buffer.from(key));\n    hmac.update(msg);\n    var expectedSig = hmac.digest();\n    resolve(equalConstTime(expectedSig, sig));\n  });\n}\n\n/**\n  * Generate a new valid private key. Will use the window.crypto or window.msCrypto as source\n  * depending on your browser.\n  * @return {Buffer} A 32-byte private key.\n  * @function\n  */\nexports.generatePrivate = function () {\n  var privateKey = randomBytes(32);\n  while (!isValidPrivateKey(privateKey)) {\n    privateKey = randomBytes(32);\n  }\n  return privateKey;\n};\n\nvar getPublic = exports.getPublic = function(privateKey) {\n  // This function has sync API so we throw an error immediately.\n  assert(privateKey.length === 32, \"Bad private key\");\n  assert(isValidPrivateKey(privateKey), \"Bad private key\");\n  // XXX(Kagami): `elliptic.utils.encode` returns array for every\n  // encoding except `hex`.\n  return Buffer.from(ec.keyFromPrivate(privateKey).getPublic(\"arr\"));\n};\n\n/**\n * Get compressed version of public key.\n */\nvar getPublicCompressed = exports.getPublicCompressed = function(privateKey) { // jshint ignore:line\n  assert(privateKey.length === 32, \"Bad private key\");\n  assert(isValidPrivateKey(privateKey), \"Bad private key\");\n  // See https://github.com/wanderer/secp256k1-node/issues/46\n  let compressed = true;\n  return Buffer.from(ec.keyFromPrivate(privateKey).getPublic(compressed, \"arr\"));\n};\n\n// NOTE(Kagami): We don't use promise shim in Browser implementation\n// because it's supported natively in new browsers (see\n// <http://caniuse.com/#feat=promises>) and we can use only new browsers\n// because of the WebCryptoAPI (see\n// <http://caniuse.com/#feat=cryptography>).\nexports.sign = function(privateKey, msg) {\n  return new Promise(function(resolve) {\n    assert(privateKey.length === 32, \"Bad private key\");\n    assert(isValidPrivateKey(privateKey), \"Bad private key\");\n    assert(msg.length > 0, \"Message should not be empty\");\n    assert(msg.length <= 32, \"Message is too long\");\n    resolve(Buffer.from(ec.sign(msg, privateKey, {canonical: true}).toDER()));\n  });\n};\n\nexports.verify = function(publicKey, msg, sig) {\n  return new Promise(function(resolve, reject) {\n    assert(publicKey.length === 65 || publicKey.length === 33, \"Bad public key\");\n    if (publicKey.length === 65)\n    {\n      assert(publicKey[0] === 4, \"Bad public key\");\n    }\n    if (publicKey.length === 33)\n    {\n      assert(publicKey[0] === 2 || publicKey[0] === 3, \"Bad public key\");\n    }\n    assert(msg.length > 0, \"Message should not be empty\");\n    assert(msg.length <= 32, \"Message is too long\");\n    if (ec.verify(msg, sig, publicKey)) {\n      resolve(null);\n    } else {\n      reject(new Error(\"Bad signature\"));\n    }\n  });\n};\n\nvar derive = exports.derive = function(privateKeyA, publicKeyB) {\n  return new Promise(function(resolve) {\n    assert(Buffer.isBuffer(privateKeyA), \"Bad private key\");\n    assert(Buffer.isBuffer(publicKeyB), \"Bad public key\");\n    assert(privateKeyA.length === 32, \"Bad private key\");\n    assert(isValidPrivateKey(privateKeyA), \"Bad private key\");\n    assert(publicKeyB.length === 65 || publicKeyB.length === 33, \"Bad public key\");\n    if (publicKeyB.length === 65)\n    {\n      assert(publicKeyB[0] === 4, \"Bad public key\");\n    }\n    if (publicKeyB.length === 33)\n    {\n      assert(publicKeyB[0] === 2 || publicKeyB[0] === 3, \"Bad public key\");\n    }\n    var keyA = ec.keyFromPrivate(privateKeyA);\n    var keyB = ec.keyFromPublic(publicKeyB);\n    var Px = keyA.derive(keyB.getPublic());  // BN instance\n    resolve(Buffer.from(Px.toArray()));\n  });\n};\n\nexports.encrypt = function(publicKeyTo, msg, opts) {\n  opts = opts || {};\n  // Tmp variables to save context from flat promises;\n  var iv, ephemPublicKey, ciphertext, macKey;\n  return new Promise(function(resolve) {\n    var ephemPrivateKey = opts.ephemPrivateKey || randomBytes(32);\n    // There is a very unlikely possibility that it is not a valid key\n    while(!isValidPrivateKey(ephemPrivateKey))\n    {\n      ephemPrivateKey = opts.ephemPrivateKey || randomBytes(32);\n    }\n    ephemPublicKey = getPublic(ephemPrivateKey);\n    resolve(derive(ephemPrivateKey, publicKeyTo));\n  }).then(function(Px) {\n    return sha512(Px);\n  }).then(function(hash) {\n    iv = opts.iv || randomBytes(16);\n    var encryptionKey = hash.slice(0, 32);\n    macKey = hash.slice(32);\n    return aesCbcEncrypt(iv, encryptionKey, msg);\n  }).then(function(data) {\n    ciphertext = data;\n    var dataToMac = Buffer.concat([iv, ephemPublicKey, ciphertext]);\n    return hmacSha256Sign(macKey, dataToMac);\n  }).then(function(mac) {\n    return {\n      iv: iv,\n      ephemPublicKey: ephemPublicKey,\n      ciphertext: ciphertext,\n      mac: mac,\n    };\n  });\n};\n\nexports.decrypt = function(privateKey, opts) {\n  // Tmp variable to save context from flat promises;\n  var encryptionKey;\n  return derive(privateKey, opts.ephemPublicKey).then(function(Px) {\n    return sha512(Px);\n  }).then(function(hash) {\n    encryptionKey = hash.slice(0, 32);\n    var macKey = hash.slice(32);\n    var dataToMac = Buffer.concat([\n      opts.iv,\n      opts.ephemPublicKey,\n      opts.ciphertext\n    ]);\n    return hmacSha256Verify(macKey, dataToMac, opts.mac);\n  }).then(function(macGood) {\n    assert(macGood, \"Bad MAC\");\n    return aesCbcDecrypt(opts.iv, encryptionKey, opts.ciphertext);\n  }).then(function(msg) {\n    return Buffer.from(new Uint8Array(msg));\n  });\n};\n\n","export const version = \"random/5.7.0\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nimport { arrayify } from \"@ethersproject/bytes\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n// Debugging line for testing browser lib in node\n//const window = { crypto: { getRandomValues: () => { } } };\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/globalThis\nfunction getGlobal() {\n    if (typeof self !== 'undefined') {\n        return self;\n    }\n    if (typeof window !== 'undefined') {\n        return window;\n    }\n    if (typeof global !== 'undefined') {\n        return global;\n    }\n    throw new Error('unable to locate global object');\n}\n;\nconst anyGlobal = getGlobal();\nlet crypto = anyGlobal.crypto || anyGlobal.msCrypto;\nif (!crypto || !crypto.getRandomValues) {\n    logger.warn(\"WARNING: Missing strong random number source\");\n    crypto = {\n        getRandomValues: function (buffer) {\n            return logger.throwError(\"no secure random source avaialble\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"crypto.getRandomValues\"\n            });\n        }\n    };\n}\nexport function randomBytes(length) {\n    if (length <= 0 || length > 1024 || (length % 1) || length != length) {\n        logger.throwArgumentError(\"invalid length\", \"length\", length);\n    }\n    const result = new Uint8Array(length);\n    crypto.getRandomValues(result);\n    return arrayify(result);\n}\n;\n//# sourceMappingURL=random.js.map","\"use strict\";\nimport { arrayify, hexlify } from \"@ethersproject/bytes\";\nimport { computeHmac } from \"@ethersproject/sha2\";\nexport function pbkdf2(password, salt, iterations, keylen, hashAlgorithm) {\n    password = arrayify(password);\n    salt = arrayify(salt);\n    let hLen;\n    let l = 1;\n    const DK = new Uint8Array(keylen);\n    const block1 = new Uint8Array(salt.length + 4);\n    block1.set(salt);\n    //salt.copy(block1, 0, 0, salt.length)\n    let r;\n    let T;\n    for (let i = 1; i <= l; i++) {\n        //block1.writeUInt32BE(i, salt.length)\n        block1[salt.length] = (i >> 24) & 0xff;\n        block1[salt.length + 1] = (i >> 16) & 0xff;\n        block1[salt.length + 2] = (i >> 8) & 0xff;\n        block1[salt.length + 3] = i & 0xff;\n        //let U = createHmac(password).update(block1).digest();\n        let U = arrayify(computeHmac(hashAlgorithm, password, block1));\n        if (!hLen) {\n            hLen = U.length;\n            T = new Uint8Array(hLen);\n            l = Math.ceil(keylen / hLen);\n            r = keylen - (l - 1) * hLen;\n        }\n        //U.copy(T, 0, 0, hLen)\n        T.set(U);\n        for (let j = 1; j < iterations; j++) {\n            //U = createHmac(password).update(U).digest();\n            U = arrayify(computeHmac(hashAlgorithm, password, U));\n            for (let k = 0; k < hLen; k++)\n                T[k] ^= U[k];\n        }\n        const destPos = (i - 1) * hLen;\n        const len = (i === l ? r : hLen);\n        //T.copy(DK, destPos, 0, len)\n        DK.set(arrayify(T).slice(0, len), destPos);\n    }\n    return hexlify(DK);\n}\n//# sourceMappingURL=pbkdf2.js.map","export const version = \"wordlists/5.7.0\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\n// This gets overridden by rollup\nconst exportWordlist = false;\nimport { id } from \"@ethersproject/hash\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nexport const logger = new Logger(version);\nexport class Wordlist {\n    constructor(locale) {\n        logger.checkAbstract(new.target, Wordlist);\n        defineReadOnly(this, \"locale\", locale);\n    }\n    // Subclasses may override this\n    split(mnemonic) {\n        return mnemonic.toLowerCase().split(/ +/g);\n    }\n    // Subclasses may override this\n    join(words) {\n        return words.join(\" \");\n    }\n    static check(wordlist) {\n        const words = [];\n        for (let i = 0; i < 2048; i++) {\n            const word = wordlist.getWord(i);\n            /* istanbul ignore if */\n            if (i !== wordlist.getWordIndex(word)) {\n                return \"0x\";\n            }\n            words.push(word);\n        }\n        return id(words.join(\"\\n\") + \"\\n\");\n    }\n    static register(lang, name) {\n        if (!name) {\n            name = lang.locale;\n        }\n        /* istanbul ignore if */\n        if (exportWordlist) {\n            try {\n                const anyGlobal = window;\n                if (anyGlobal._ethers && anyGlobal._ethers.wordlists) {\n                    if (!anyGlobal._ethers.wordlists[name]) {\n                        defineReadOnly(anyGlobal._ethers.wordlists, name, lang);\n                    }\n                }\n            }\n            catch (error) { }\n        }\n    }\n}\n//# sourceMappingURL=wordlist.js.map","\"use strict\";\nimport { Wordlist } from \"./wordlist\";\nconst words = \"AbandonAbilityAbleAboutAboveAbsentAbsorbAbstractAbsurdAbuseAccessAccidentAccountAccuseAchieveAcidAcousticAcquireAcrossActActionActorActressActualAdaptAddAddictAddressAdjustAdmitAdultAdvanceAdviceAerobicAffairAffordAfraidAgainAgeAgentAgreeAheadAimAirAirportAisleAlarmAlbumAlcoholAlertAlienAllAlleyAllowAlmostAloneAlphaAlreadyAlsoAlterAlwaysAmateurAmazingAmongAmountAmusedAnalystAnchorAncientAngerAngleAngryAnimalAnkleAnnounceAnnualAnotherAnswerAntennaAntiqueAnxietyAnyApartApologyAppearAppleApproveAprilArchArcticAreaArenaArgueArmArmedArmorArmyAroundArrangeArrestArriveArrowArtArtefactArtistArtworkAskAspectAssaultAssetAssistAssumeAsthmaAthleteAtomAttackAttendAttitudeAttractAuctionAuditAugustAuntAuthorAutoAutumnAverageAvocadoAvoidAwakeAwareAwayAwesomeAwfulAwkwardAxisBabyBachelorBaconBadgeBagBalanceBalconyBallBambooBananaBannerBarBarelyBargainBarrelBaseBasicBasketBattleBeachBeanBeautyBecauseBecomeBeefBeforeBeginBehaveBehindBelieveBelowBeltBenchBenefitBestBetrayBetterBetweenBeyondBicycleBidBikeBindBiologyBirdBirthBitterBlackBladeBlameBlanketBlastBleakBlessBlindBloodBlossomBlouseBlueBlurBlushBoardBoatBodyBoilBombBoneBonusBookBoostBorderBoringBorrowBossBottomBounceBoxBoyBracketBrainBrandBrassBraveBreadBreezeBrickBridgeBriefBrightBringBriskBroccoliBrokenBronzeBroomBrotherBrownBrushBubbleBuddyBudgetBuffaloBuildBulbBulkBulletBundleBunkerBurdenBurgerBurstBusBusinessBusyButterBuyerBuzzCabbageCabinCableCactusCageCakeCallCalmCameraCampCanCanalCancelCandyCannonCanoeCanvasCanyonCapableCapitalCaptainCarCarbonCardCargoCarpetCarryCartCaseCashCasinoCastleCasualCatCatalogCatchCategoryCattleCaughtCauseCautionCaveCeilingCeleryCementCensusCenturyCerealCertainChairChalkChampionChangeChaosChapterChargeChaseChatCheapCheckCheeseChefCherryChestChickenChiefChildChimneyChoiceChooseChronicChuckleChunkChurnCigarCinnamonCircleCitizenCityCivilClaimClapClarifyClawClayCleanClerkCleverClickClientCliffClimbClinicClipClockClogCloseClothCloudClownClubClumpClusterClutchCoachCoastCoconutCodeCoffeeCoilCoinCollectColorColumnCombineComeComfortComicCommonCompanyConcertConductConfirmCongressConnectConsiderControlConvinceCookCoolCopperCopyCoralCoreCornCorrectCostCottonCouchCountryCoupleCourseCousinCoverCoyoteCrackCradleCraftCramCraneCrashCraterCrawlCrazyCreamCreditCreekCrewCricketCrimeCrispCriticCropCrossCrouchCrowdCrucialCruelCruiseCrumbleCrunchCrushCryCrystalCubeCultureCupCupboardCuriousCurrentCurtainCurveCushionCustomCuteCycleDadDamageDampDanceDangerDaringDashDaughterDawnDayDealDebateDebrisDecadeDecemberDecideDeclineDecorateDecreaseDeerDefenseDefineDefyDegreeDelayDeliverDemandDemiseDenialDentistDenyDepartDependDepositDepthDeputyDeriveDescribeDesertDesignDeskDespairDestroyDetailDetectDevelopDeviceDevoteDiagramDialDiamondDiaryDiceDieselDietDifferDigitalDignityDilemmaDinnerDinosaurDirectDirtDisagreeDiscoverDiseaseDishDismissDisorderDisplayDistanceDivertDivideDivorceDizzyDoctorDocumentDogDollDolphinDomainDonateDonkeyDonorDoorDoseDoubleDoveDraftDragonDramaDrasticDrawDreamDressDriftDrillDrinkDripDriveDropDrumDryDuckDumbDuneDuringDustDutchDutyDwarfDynamicEagerEagleEarlyEarnEarthEasilyEastEasyEchoEcologyEconomyEdgeEditEducateEffortEggEightEitherElbowElderElectricElegantElementElephantElevatorEliteElseEmbarkEmbodyEmbraceEmergeEmotionEmployEmpowerEmptyEnableEnactEndEndlessEndorseEnemyEnergyEnforceEngageEngineEnhanceEnjoyEnlistEnoughEnrichEnrollEnsureEnterEntireEntryEnvelopeEpisodeEqualEquipEraEraseErodeErosionErrorEruptEscapeEssayEssenceEstateEternalEthicsEvidenceEvilEvokeEvolveExactExampleExcessExchangeExciteExcludeExcuseExecuteExerciseExhaustExhibitExileExistExitExoticExpandExpectExpireExplainExposeExpressExtendExtraEyeEyebrowFabricFaceFacultyFadeFaintFaithFallFalseFameFamilyFamousFanFancyFantasyFarmFashionFatFatalFatherFatigueFaultFavoriteFeatureFebruaryFederalFeeFeedFeelFemaleFenceFestivalFetchFeverFewFiberFictionFieldFigureFileFilmFilterFinalFindFineFingerFinishFireFirmFirstFiscalFishFitFitnessFixFlagFlameFlashFlatFlavorFleeFlightFlipFloatFlockFloorFlowerFluidFlushFlyFoamFocusFogFoilFoldFollowFoodFootForceForestForgetForkFortuneForumForwardFossilFosterFoundFoxFragileFrameFrequentFreshFriendFringeFrogFrontFrostFrownFrozenFruitFuelFunFunnyFurnaceFuryFutureGadgetGainGalaxyGalleryGameGapGarageGarbageGardenGarlicGarmentGasGaspGateGatherGaugeGazeGeneralGeniusGenreGentleGenuineGestureGhostGiantGiftGiggleGingerGiraffeGirlGiveGladGlanceGlareGlassGlideGlimpseGlobeGloomGloryGloveGlowGlueGoatGoddessGoldGoodGooseGorillaGospelGossipGovernGownGrabGraceGrainGrantGrapeGrassGravityGreatGreenGridGriefGritGroceryGroupGrowGruntGuardGuessGuideGuiltGuitarGunGymHabitHairHalfHammerHamsterHandHappyHarborHardHarshHarvestHatHaveHawkHazardHeadHealthHeartHeavyHedgehogHeightHelloHelmetHelpHenHeroHiddenHighHillHintHipHireHistoryHobbyHockeyHoldHoleHolidayHollowHomeHoneyHoodHopeHornHorrorHorseHospitalHostHotelHourHoverHubHugeHumanHumbleHumorHundredHungryHuntHurdleHurryHurtHusbandHybridIceIconIdeaIdentifyIdleIgnoreIllIllegalIllnessImageImitateImmenseImmuneImpactImposeImproveImpulseInchIncludeIncomeIncreaseIndexIndicateIndoorIndustryInfantInflictInformInhaleInheritInitialInjectInjuryInmateInnerInnocentInputInquiryInsaneInsectInsideInspireInstallIntactInterestIntoInvestInviteInvolveIronIslandIsolateIssueItemIvoryJacketJaguarJarJazzJealousJeansJellyJewelJobJoinJokeJourneyJoyJudgeJuiceJumpJungleJuniorJunkJustKangarooKeenKeepKetchupKeyKickKidKidneyKindKingdomKissKitKitchenKiteKittenKiwiKneeKnifeKnockKnowLabLabelLaborLadderLadyLakeLampLanguageLaptopLargeLaterLatinLaughLaundryLavaLawLawnLawsuitLayerLazyLeaderLeafLearnLeaveLectureLeftLegLegalLegendLeisureLemonLendLengthLensLeopardLessonLetterLevelLiarLibertyLibraryLicenseLifeLiftLightLikeLimbLimitLinkLionLiquidListLittleLiveLizardLoadLoanLobsterLocalLockLogicLonelyLongLoopLotteryLoudLoungeLoveLoyalLuckyLuggageLumberLunarLunchLuxuryLyricsMachineMadMagicMagnetMaidMailMainMajorMakeMammalManManageMandateMangoMansionManualMapleMarbleMarchMarginMarineMarketMarriageMaskMassMasterMatchMaterialMathMatrixMatterMaximumMazeMeadowMeanMeasureMeatMechanicMedalMediaMelodyMeltMemberMemoryMentionMenuMercyMergeMeritMerryMeshMessageMetalMethodMiddleMidnightMilkMillionMimicMindMinimumMinorMinuteMiracleMirrorMiseryMissMistakeMixMixedMixtureMobileModelModifyMomMomentMonitorMonkeyMonsterMonthMoonMoralMoreMorningMosquitoMotherMotionMotorMountainMouseMoveMovieMuchMuffinMuleMultiplyMuscleMuseumMushroomMusicMustMutualMyselfMysteryMythNaiveNameNapkinNarrowNastyNationNatureNearNeckNeedNegativeNeglectNeitherNephewNerveNestNetNetworkNeutralNeverNewsNextNiceNightNobleNoiseNomineeNoodleNormalNorthNoseNotableNoteNothingNoticeNovelNowNuclearNumberNurseNutOakObeyObjectObligeObscureObserveObtainObviousOccurOceanOctoberOdorOffOfferOfficeOftenOilOkayOldOliveOlympicOmitOnceOneOnionOnlineOnlyOpenOperaOpinionOpposeOptionOrangeOrbitOrchardOrderOrdinaryOrganOrientOriginalOrphanOstrichOtherOutdoorOuterOutputOutsideOvalOvenOverOwnOwnerOxygenOysterOzonePactPaddlePagePairPalacePalmPandaPanelPanicPantherPaperParadeParentParkParrotPartyPassPatchPathPatientPatrolPatternPausePavePaymentPeacePeanutPearPeasantPelicanPenPenaltyPencilPeoplePepperPerfectPermitPersonPetPhonePhotoPhrasePhysicalPianoPicnicPicturePiecePigPigeonPillPilotPinkPioneerPipePistolPitchPizzaPlacePlanetPlasticPlatePlayPleasePledgePluckPlugPlungePoemPoetPointPolarPolePolicePondPonyPoolPopularPortionPositionPossiblePostPotatoPotteryPovertyPowderPowerPracticePraisePredictPreferPreparePresentPrettyPreventPricePridePrimaryPrintPriorityPrisonPrivatePrizeProblemProcessProduceProfitProgramProjectPromoteProofPropertyProsperProtectProudProvidePublicPuddingPullPulpPulsePumpkinPunchPupilPuppyPurchasePurityPurposePursePushPutPuzzlePyramidQualityQuantumQuarterQuestionQuickQuitQuizQuoteRabbitRaccoonRaceRackRadarRadioRailRainRaiseRallyRampRanchRandomRangeRapidRareRateRatherRavenRawRazorReadyRealReasonRebelRebuildRecallReceiveRecipeRecordRecycleReduceReflectReformRefuseRegionRegretRegularRejectRelaxReleaseReliefRelyRemainRememberRemindRemoveRenderRenewRentReopenRepairRepeatReplaceReportRequireRescueResembleResistResourceResponseResultRetireRetreatReturnReunionRevealReviewRewardRhythmRibRibbonRiceRichRideRidgeRifleRightRigidRingRiotRippleRiskRitualRivalRiverRoadRoastRobotRobustRocketRomanceRoofRookieRoomRoseRotateRoughRoundRouteRoyalRubberRudeRugRuleRunRunwayRuralSadSaddleSadnessSafeSailSaladSalmonSalonSaltSaluteSameSampleSandSatisfySatoshiSauceSausageSaveSayScaleScanScareScatterSceneSchemeSchoolScienceScissorsScorpionScoutScrapScreenScriptScrubSeaSearchSeasonSeatSecondSecretSectionSecuritySeedSeekSegmentSelectSellSeminarSeniorSenseSentenceSeriesServiceSessionSettleSetupSevenShadowShaftShallowShareShedShellSheriffShieldShiftShineShipShiverShockShoeShootShopShortShoulderShoveShrimpShrugShuffleShySiblingSickSideSiegeSightSignSilentSilkSillySilverSimilarSimpleSinceSingSirenSisterSituateSixSizeSkateSketchSkiSkillSkinSkirtSkullSlabSlamSleepSlenderSliceSlideSlightSlimSloganSlotSlowSlushSmallSmartSmileSmokeSmoothSnackSnakeSnapSniffSnowSoapSoccerSocialSockSodaSoftSolarSoldierSolidSolutionSolveSomeoneSongSoonSorrySortSoulSoundSoupSourceSouthSpaceSpareSpatialSpawnSpeakSpecialSpeedSpellSpendSphereSpiceSpiderSpikeSpinSpiritSplitSpoilSponsorSpoonSportSpotSpraySpreadSpringSpySquareSqueezeSquirrelStableStadiumStaffStageStairsStampStandStartStateStaySteakSteelStemStepStereoStickStillStingStockStomachStoneStoolStoryStoveStrategyStreetStrikeStrongStruggleStudentStuffStumbleStyleSubjectSubmitSubwaySuccessSuchSuddenSufferSugarSuggestSuitSummerSunSunnySunsetSuperSupplySupremeSureSurfaceSurgeSurpriseSurroundSurveySuspectSustainSwallowSwampSwapSwarmSwearSweetSwiftSwimSwingSwitchSwordSymbolSymptomSyrupSystemTableTackleTagTailTalentTalkTankTapeTargetTaskTasteTattooTaxiTeachTeamTellTenTenantTennisTentTermTestTextThankThatThemeThenTheoryThereTheyThingThisThoughtThreeThriveThrowThumbThunderTicketTideTigerTiltTimberTimeTinyTipTiredTissueTitleToastTobaccoTodayToddlerToeTogetherToiletTokenTomatoTomorrowToneTongueTonightToolToothTopTopicToppleTorchTornadoTortoiseTossTotalTouristTowardTowerTownToyTrackTradeTrafficTragicTrainTransferTrapTrashTravelTrayTreatTreeTrendTrialTribeTrickTriggerTrimTripTrophyTroubleTruckTrueTrulyTrumpetTrustTruthTryTubeTuitionTumbleTunaTunnelTurkeyTurnTurtleTwelveTwentyTwiceTwinTwistTwoTypeTypicalUglyUmbrellaUnableUnawareUncleUncoverUnderUndoUnfairUnfoldUnhappyUniformUniqueUnitUniverseUnknownUnlockUntilUnusualUnveilUpdateUpgradeUpholdUponUpperUpsetUrbanUrgeUsageUseUsedUsefulUselessUsualUtilityVacantVacuumVagueValidValleyValveVanVanishVaporVariousVastVaultVehicleVelvetVendorVentureVenueVerbVerifyVersionVeryVesselVeteranViableVibrantViciousVictoryVideoViewVillageVintageViolinVirtualVirusVisaVisitVisualVitalVividVocalVoiceVoidVolcanoVolumeVoteVoyageWageWagonWaitWalkWallWalnutWantWarfareWarmWarriorWashWaspWasteWaterWaveWayWealthWeaponWearWeaselWeatherWebWeddingWeekendWeirdWelcomeWestWetWhaleWhatWheatWheelWhenWhereWhipWhisperWideWidthWifeWildWillWinWindowWineWingWinkWinnerWinterWireWisdomWiseWishWitnessWolfWomanWonderWoodWoolWordWorkWorldWorryWorthWrapWreckWrestleWristWriteWrongYardYearYellowYouYoungYouthZebraZeroZoneZoo\";\nlet wordlist = null;\nfunction loadWords(lang) {\n    if (wordlist != null) {\n        return;\n    }\n    wordlist = words.replace(/([A-Z])/g, \" $1\").toLowerCase().substring(1).split(\" \");\n    // Verify the computed list matches the official list\n    /* istanbul ignore if */\n    if (Wordlist.check(lang) !== \"0x3c8acc1e7b08d8e76f9fda015ef48dc8c710a73cb7e0f77b2c18a9b5a7adde60\") {\n        wordlist = null;\n        throw new Error(\"BIP39 Wordlist for en (English) FAILED\");\n    }\n}\nclass LangEn extends Wordlist {\n    constructor() {\n        super(\"en\");\n    }\n    getWord(index) {\n        loadWords(this);\n        return wordlist[index];\n    }\n    getWordIndex(word) {\n        loadWords(this);\n        return wordlist.indexOf(word);\n    }\n}\nconst langEn = new LangEn();\nWordlist.register(langEn);\nexport { langEn };\n//# sourceMappingURL=lang-en.js.map","\"use strict\";\nimport { langEn as en } from \"./lang-en\";\nexport const wordlists = {\n    en: en\n};\n//# sourceMappingURL=wordlists.js.map","\"use strict\";\nimport { Base58 } from \"@ethersproject/basex\";\nimport { arrayify, concat, hexDataSlice, hexZeroPad, hexlify } from \"@ethersproject/bytes\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { toUtf8Bytes, UnicodeNormalizationForm } from \"@ethersproject/strings\";\nimport { pbkdf2 } from \"@ethersproject/pbkdf2\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\nimport { SigningKey } from \"@ethersproject/signing-key\";\nimport { computeHmac, ripemd160, sha256, SupportedAlgorithm } from \"@ethersproject/sha2\";\nimport { computeAddress } from \"@ethersproject/transactions\";\nimport { wordlists } from \"@ethersproject/wordlists\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nconst N = BigNumber.from(\"0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141\");\n// \"Bitcoin seed\"\nconst MasterSecret = toUtf8Bytes(\"Bitcoin seed\");\nconst HardenedBit = 0x80000000;\n// Returns a byte with the MSB bits set\nfunction getUpperMask(bits) {\n    return ((1 << bits) - 1) << (8 - bits);\n}\n// Returns a byte with the LSB bits set\nfunction getLowerMask(bits) {\n    return (1 << bits) - 1;\n}\nfunction bytes32(value) {\n    return hexZeroPad(hexlify(value), 32);\n}\nfunction base58check(data) {\n    return Base58.encode(concat([data, hexDataSlice(sha256(sha256(data)), 0, 4)]));\n}\nfunction getWordlist(wordlist) {\n    if (wordlist == null) {\n        return wordlists[\"en\"];\n    }\n    if (typeof (wordlist) === \"string\") {\n        const words = wordlists[wordlist];\n        if (words == null) {\n            logger.throwArgumentError(\"unknown locale\", \"wordlist\", wordlist);\n        }\n        return words;\n    }\n    return wordlist;\n}\nconst _constructorGuard = {};\nexport const defaultPath = \"m/44'/60'/0'/0/0\";\n;\nexport class HDNode {\n    /**\n     *  This constructor should not be called directly.\n     *\n     *  Please use:\n     *   - fromMnemonic\n     *   - fromSeed\n     */\n    constructor(constructorGuard, privateKey, publicKey, parentFingerprint, chainCode, index, depth, mnemonicOrPath) {\n        /* istanbul ignore if */\n        if (constructorGuard !== _constructorGuard) {\n            throw new Error(\"HDNode constructor cannot be called directly\");\n        }\n        if (privateKey) {\n            const signingKey = new SigningKey(privateKey);\n            defineReadOnly(this, \"privateKey\", signingKey.privateKey);\n            defineReadOnly(this, \"publicKey\", signingKey.compressedPublicKey);\n        }\n        else {\n            defineReadOnly(this, \"privateKey\", null);\n            defineReadOnly(this, \"publicKey\", hexlify(publicKey));\n        }\n        defineReadOnly(this, \"parentFingerprint\", parentFingerprint);\n        defineReadOnly(this, \"fingerprint\", hexDataSlice(ripemd160(sha256(this.publicKey)), 0, 4));\n        defineReadOnly(this, \"address\", computeAddress(this.publicKey));\n        defineReadOnly(this, \"chainCode\", chainCode);\n        defineReadOnly(this, \"index\", index);\n        defineReadOnly(this, \"depth\", depth);\n        if (mnemonicOrPath == null) {\n            // From a source that does not preserve the path (e.g. extended keys)\n            defineReadOnly(this, \"mnemonic\", null);\n            defineReadOnly(this, \"path\", null);\n        }\n        else if (typeof (mnemonicOrPath) === \"string\") {\n            // From a source that does not preserve the mnemonic (e.g. neutered)\n            defineReadOnly(this, \"mnemonic\", null);\n            defineReadOnly(this, \"path\", mnemonicOrPath);\n        }\n        else {\n            // From a fully qualified source\n            defineReadOnly(this, \"mnemonic\", mnemonicOrPath);\n            defineReadOnly(this, \"path\", mnemonicOrPath.path);\n        }\n    }\n    get extendedKey() {\n        // We only support the mainnet values for now, but if anyone needs\n        // testnet values, let me know. I believe current sentiment is that\n        // we should always use mainnet, and use BIP-44 to derive the network\n        //   - Mainnet: public=0x0488B21E, private=0x0488ADE4\n        //   - Testnet: public=0x043587CF, private=0x04358394\n        if (this.depth >= 256) {\n            throw new Error(\"Depth too large!\");\n        }\n        return base58check(concat([\n            ((this.privateKey != null) ? \"0x0488ADE4\" : \"0x0488B21E\"),\n            hexlify(this.depth),\n            this.parentFingerprint,\n            hexZeroPad(hexlify(this.index), 4),\n            this.chainCode,\n            ((this.privateKey != null) ? concat([\"0x00\", this.privateKey]) : this.publicKey),\n        ]));\n    }\n    neuter() {\n        return new HDNode(_constructorGuard, null, this.publicKey, this.parentFingerprint, this.chainCode, this.index, this.depth, this.path);\n    }\n    _derive(index) {\n        if (index > 0xffffffff) {\n            throw new Error(\"invalid index - \" + String(index));\n        }\n        // Base path\n        let path = this.path;\n        if (path) {\n            path += \"/\" + (index & ~HardenedBit);\n        }\n        const data = new Uint8Array(37);\n        if (index & HardenedBit) {\n            if (!this.privateKey) {\n                throw new Error(\"cannot derive child of neutered node\");\n            }\n            // Data = 0x00 || ser_256(k_par)\n            data.set(arrayify(this.privateKey), 1);\n            // Hardened path\n            if (path) {\n                path += \"'\";\n            }\n        }\n        else {\n            // Data = ser_p(point(k_par))\n            data.set(arrayify(this.publicKey));\n        }\n        // Data += ser_32(i)\n        for (let i = 24; i >= 0; i -= 8) {\n            data[33 + (i >> 3)] = ((index >> (24 - i)) & 0xff);\n        }\n        const I = arrayify(computeHmac(SupportedAlgorithm.sha512, this.chainCode, data));\n        const IL = I.slice(0, 32);\n        const IR = I.slice(32);\n        // The private key\n        let ki = null;\n        // The public key\n        let Ki = null;\n        if (this.privateKey) {\n            ki = bytes32(BigNumber.from(IL).add(this.privateKey).mod(N));\n        }\n        else {\n            const ek = new SigningKey(hexlify(IL));\n            Ki = ek._addPoint(this.publicKey);\n        }\n        let mnemonicOrPath = path;\n        const srcMnemonic = this.mnemonic;\n        if (srcMnemonic) {\n            mnemonicOrPath = Object.freeze({\n                phrase: srcMnemonic.phrase,\n                path: path,\n                locale: (srcMnemonic.locale || \"en\")\n            });\n        }\n        return new HDNode(_constructorGuard, ki, Ki, this.fingerprint, bytes32(IR), index, this.depth + 1, mnemonicOrPath);\n    }\n    derivePath(path) {\n        const components = path.split(\"/\");\n        if (components.length === 0 || (components[0] === \"m\" && this.depth !== 0)) {\n            throw new Error(\"invalid path - \" + path);\n        }\n        if (components[0] === \"m\") {\n            components.shift();\n        }\n        let result = this;\n        for (let i = 0; i < components.length; i++) {\n            const component = components[i];\n            if (component.match(/^[0-9]+'$/)) {\n                const index = parseInt(component.substring(0, component.length - 1));\n                if (index >= HardenedBit) {\n                    throw new Error(\"invalid path index - \" + component);\n                }\n                result = result._derive(HardenedBit + index);\n            }\n            else if (component.match(/^[0-9]+$/)) {\n                const index = parseInt(component);\n                if (index >= HardenedBit) {\n                    throw new Error(\"invalid path index - \" + component);\n                }\n                result = result._derive(index);\n            }\n            else {\n                throw new Error(\"invalid path component - \" + component);\n            }\n        }\n        return result;\n    }\n    static _fromSeed(seed, mnemonic) {\n        const seedArray = arrayify(seed);\n        if (seedArray.length < 16 || seedArray.length > 64) {\n            throw new Error(\"invalid seed\");\n        }\n        const I = arrayify(computeHmac(SupportedAlgorithm.sha512, MasterSecret, seedArray));\n        return new HDNode(_constructorGuard, bytes32(I.slice(0, 32)), null, \"0x00000000\", bytes32(I.slice(32)), 0, 0, mnemonic);\n    }\n    static fromMnemonic(mnemonic, password, wordlist) {\n        // If a locale name was passed in, find the associated wordlist\n        wordlist = getWordlist(wordlist);\n        // Normalize the case and spacing in the mnemonic (throws if the mnemonic is invalid)\n        mnemonic = entropyToMnemonic(mnemonicToEntropy(mnemonic, wordlist), wordlist);\n        return HDNode._fromSeed(mnemonicToSeed(mnemonic, password), {\n            phrase: mnemonic,\n            path: \"m\",\n            locale: wordlist.locale\n        });\n    }\n    static fromSeed(seed) {\n        return HDNode._fromSeed(seed, null);\n    }\n    static fromExtendedKey(extendedKey) {\n        const bytes = Base58.decode(extendedKey);\n        if (bytes.length !== 82 || base58check(bytes.slice(0, 78)) !== extendedKey) {\n            logger.throwArgumentError(\"invalid extended key\", \"extendedKey\", \"[REDACTED]\");\n        }\n        const depth = bytes[4];\n        const parentFingerprint = hexlify(bytes.slice(5, 9));\n        const index = parseInt(hexlify(bytes.slice(9, 13)).substring(2), 16);\n        const chainCode = hexlify(bytes.slice(13, 45));\n        const key = bytes.slice(45, 78);\n        switch (hexlify(bytes.slice(0, 4))) {\n            // Public Key\n            case \"0x0488b21e\":\n            case \"0x043587cf\":\n                return new HDNode(_constructorGuard, null, hexlify(key), parentFingerprint, chainCode, index, depth, null);\n            // Private Key\n            case \"0x0488ade4\":\n            case \"0x04358394 \":\n                if (key[0] !== 0) {\n                    break;\n                }\n                return new HDNode(_constructorGuard, hexlify(key.slice(1)), null, parentFingerprint, chainCode, index, depth, null);\n        }\n        return logger.throwArgumentError(\"invalid extended key\", \"extendedKey\", \"[REDACTED]\");\n    }\n}\nexport function mnemonicToSeed(mnemonic, password) {\n    if (!password) {\n        password = \"\";\n    }\n    const salt = toUtf8Bytes(\"mnemonic\" + password, UnicodeNormalizationForm.NFKD);\n    return pbkdf2(toUtf8Bytes(mnemonic, UnicodeNormalizationForm.NFKD), salt, 2048, 64, \"sha512\");\n}\nexport function mnemonicToEntropy(mnemonic, wordlist) {\n    wordlist = getWordlist(wordlist);\n    logger.checkNormalize();\n    const words = wordlist.split(mnemonic);\n    if ((words.length % 3) !== 0) {\n        throw new Error(\"invalid mnemonic\");\n    }\n    const entropy = arrayify(new Uint8Array(Math.ceil(11 * words.length / 8)));\n    let offset = 0;\n    for (let i = 0; i < words.length; i++) {\n        let index = wordlist.getWordIndex(words[i].normalize(\"NFKD\"));\n        if (index === -1) {\n            throw new Error(\"invalid mnemonic\");\n        }\n        for (let bit = 0; bit < 11; bit++) {\n            if (index & (1 << (10 - bit))) {\n                entropy[offset >> 3] |= (1 << (7 - (offset % 8)));\n            }\n            offset++;\n        }\n    }\n    const entropyBits = 32 * words.length / 3;\n    const checksumBits = words.length / 3;\n    const checksumMask = getUpperMask(checksumBits);\n    const checksum = arrayify(sha256(entropy.slice(0, entropyBits / 8)))[0] & checksumMask;\n    if (checksum !== (entropy[entropy.length - 1] & checksumMask)) {\n        throw new Error(\"invalid checksum\");\n    }\n    return hexlify(entropy.slice(0, entropyBits / 8));\n}\nexport function entropyToMnemonic(entropy, wordlist) {\n    wordlist = getWordlist(wordlist);\n    entropy = arrayify(entropy);\n    if ((entropy.length % 4) !== 0 || entropy.length < 16 || entropy.length > 32) {\n        throw new Error(\"invalid entropy\");\n    }\n    const indices = [0];\n    let remainingBits = 11;\n    for (let i = 0; i < entropy.length; i++) {\n        // Consume the whole byte (with still more to go)\n        if (remainingBits > 8) {\n            indices[indices.length - 1] <<= 8;\n            indices[indices.length - 1] |= entropy[i];\n            remainingBits -= 8;\n            // This byte will complete an 11-bit index\n        }\n        else {\n            indices[indices.length - 1] <<= remainingBits;\n            indices[indices.length - 1] |= entropy[i] >> (8 - remainingBits);\n            // Start the next word\n            indices.push(entropy[i] & getLowerMask(8 - remainingBits));\n            remainingBits += 3;\n        }\n    }\n    // Compute the checksum bits\n    const checksumBits = entropy.length / 4;\n    const checksum = arrayify(sha256(entropy))[0] & getUpperMask(checksumBits);\n    // Shift the checksum into the word indices\n    indices[indices.length - 1] <<= checksumBits;\n    indices[indices.length - 1] |= (checksum >> (8 - checksumBits));\n    return wordlist.join(indices.map((index) => wordlist.getWord(index)));\n}\nexport function isValidMnemonic(mnemonic, wordlist) {\n    try {\n        mnemonicToEntropy(mnemonic, wordlist);\n        return true;\n    }\n    catch (error) { }\n    return false;\n}\nexport function getAccountPath(index) {\n    if (typeof (index) !== \"number\" || index < 0 || index >= HardenedBit || index % 1) {\n        logger.throwArgumentError(\"invalid account index\", \"index\", index);\n    }\n    return `m/44'/60'/${index}'/0/0`;\n}\n//# sourceMappingURL=index.js.map","export const version = \"hdnode/5.7.0\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nimport { arrayify, hexlify } from \"@ethersproject/bytes\";\nimport { toUtf8Bytes, UnicodeNormalizationForm } from '@ethersproject/strings';\nexport function looseArrayify(hexString) {\n    if (typeof (hexString) === 'string' && hexString.substring(0, 2) !== '0x') {\n        hexString = '0x' + hexString;\n    }\n    return arrayify(hexString);\n}\nexport function zpad(value, length) {\n    value = String(value);\n    while (value.length < length) {\n        value = '0' + value;\n    }\n    return value;\n}\nexport function getPassword(password) {\n    if (typeof (password) === 'string') {\n        return toUtf8Bytes(password, UnicodeNormalizationForm.NFKC);\n    }\n    return arrayify(password);\n}\nexport function searchPath(object, path) {\n    let currentChild = object;\n    const comps = path.toLowerCase().split('/');\n    for (let i = 0; i < comps.length; i++) {\n        // Search for a child object with a case-insensitive matching key\n        let matchingChild = null;\n        for (const key in currentChild) {\n            if (key.toLowerCase() === comps[i]) {\n                matchingChild = currentChild[key];\n                break;\n            }\n        }\n        // Didn't find one. :'(\n        if (matchingChild === null) {\n            return null;\n        }\n        // Now check this child...\n        currentChild = matchingChild;\n    }\n    return currentChild;\n}\n// See: https://www.ietf.org/rfc/rfc4122.txt (Section 4.4)\nexport function uuidV4(randomBytes) {\n    const bytes = arrayify(randomBytes);\n    // Section: 4.1.3:\n    // - time_hi_and_version[12:16] = 0b0100\n    bytes[6] = (bytes[6] & 0x0f) | 0x40;\n    // Section 4.4\n    // - clock_seq_hi_and_reserved[6] = 0b0\n    // - clock_seq_hi_and_reserved[7] = 0b1\n    bytes[8] = (bytes[8] & 0x3f) | 0x80;\n    const value = hexlify(bytes);\n    return [\n        value.substring(2, 10),\n        value.substring(10, 14),\n        value.substring(14, 18),\n        value.substring(18, 22),\n        value.substring(22, 34),\n    ].join(\"-\");\n}\n//# sourceMappingURL=utils.js.map","export const version = \"json-wallets/5.7.0\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport aes from \"aes-js\";\nimport scrypt from \"scrypt-js\";\nimport { getAddress } from \"@ethersproject/address\";\nimport { arrayify, concat, hexlify } from \"@ethersproject/bytes\";\nimport { defaultPath, entropyToMnemonic, HDNode, mnemonicToEntropy } from \"@ethersproject/hdnode\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { pbkdf2 as _pbkdf2 } from \"@ethersproject/pbkdf2\";\nimport { randomBytes } from \"@ethersproject/random\";\nimport { Description } from \"@ethersproject/properties\";\nimport { computeAddress } from \"@ethersproject/transactions\";\nimport { getPassword, looseArrayify, searchPath, uuidV4, zpad } from \"./utils\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n// Exported Types\nfunction hasMnemonic(value) {\n    return (value != null && value.mnemonic && value.mnemonic.phrase);\n}\nexport class KeystoreAccount extends Description {\n    isKeystoreAccount(value) {\n        return !!(value && value._isKeystoreAccount);\n    }\n}\nfunction _decrypt(data, key, ciphertext) {\n    const cipher = searchPath(data, \"crypto/cipher\");\n    if (cipher === \"aes-128-ctr\") {\n        const iv = looseArrayify(searchPath(data, \"crypto/cipherparams/iv\"));\n        const counter = new aes.Counter(iv);\n        const aesCtr = new aes.ModeOfOperation.ctr(key, counter);\n        return arrayify(aesCtr.decrypt(ciphertext));\n    }\n    return null;\n}\nfunction _getAccount(data, key) {\n    const ciphertext = looseArrayify(searchPath(data, \"crypto/ciphertext\"));\n    const computedMAC = hexlify(keccak256(concat([key.slice(16, 32), ciphertext]))).substring(2);\n    if (computedMAC !== searchPath(data, \"crypto/mac\").toLowerCase()) {\n        throw new Error(\"invalid password\");\n    }\n    const privateKey = _decrypt(data, key.slice(0, 16), ciphertext);\n    if (!privateKey) {\n        logger.throwError(\"unsupported cipher\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"decrypt\"\n        });\n    }\n    const mnemonicKey = key.slice(32, 64);\n    const address = computeAddress(privateKey);\n    if (data.address) {\n        let check = data.address.toLowerCase();\n        if (check.substring(0, 2) !== \"0x\") {\n            check = \"0x\" + check;\n        }\n        if (getAddress(check) !== address) {\n            throw new Error(\"address mismatch\");\n        }\n    }\n    const account = {\n        _isKeystoreAccount: true,\n        address: address,\n        privateKey: hexlify(privateKey)\n    };\n    // Version 0.1 x-ethers metadata must contain an encrypted mnemonic phrase\n    if (searchPath(data, \"x-ethers/version\") === \"0.1\") {\n        const mnemonicCiphertext = looseArrayify(searchPath(data, \"x-ethers/mnemonicCiphertext\"));\n        const mnemonicIv = looseArrayify(searchPath(data, \"x-ethers/mnemonicCounter\"));\n        const mnemonicCounter = new aes.Counter(mnemonicIv);\n        const mnemonicAesCtr = new aes.ModeOfOperation.ctr(mnemonicKey, mnemonicCounter);\n        const path = searchPath(data, \"x-ethers/path\") || defaultPath;\n        const locale = searchPath(data, \"x-ethers/locale\") || \"en\";\n        const entropy = arrayify(mnemonicAesCtr.decrypt(mnemonicCiphertext));\n        try {\n            const mnemonic = entropyToMnemonic(entropy, locale);\n            const node = HDNode.fromMnemonic(mnemonic, null, locale).derivePath(path);\n            if (node.privateKey != account.privateKey) {\n                throw new Error(\"mnemonic mismatch\");\n            }\n            account.mnemonic = node.mnemonic;\n        }\n        catch (error) {\n            // If we don't have the locale wordlist installed to\n            // read this mnemonic, just bail and don't set the\n            // mnemonic\n            if (error.code !== Logger.errors.INVALID_ARGUMENT || error.argument !== \"wordlist\") {\n                throw error;\n            }\n        }\n    }\n    return new KeystoreAccount(account);\n}\nfunction pbkdf2Sync(passwordBytes, salt, count, dkLen, prfFunc) {\n    return arrayify(_pbkdf2(passwordBytes, salt, count, dkLen, prfFunc));\n}\nfunction pbkdf2(passwordBytes, salt, count, dkLen, prfFunc) {\n    return Promise.resolve(pbkdf2Sync(passwordBytes, salt, count, dkLen, prfFunc));\n}\nfunction _computeKdfKey(data, password, pbkdf2Func, scryptFunc, progressCallback) {\n    const passwordBytes = getPassword(password);\n    const kdf = searchPath(data, \"crypto/kdf\");\n    if (kdf && typeof (kdf) === \"string\") {\n        const throwError = function (name, value) {\n            return logger.throwArgumentError(\"invalid key-derivation function parameters\", name, value);\n        };\n        if (kdf.toLowerCase() === \"scrypt\") {\n            const salt = looseArrayify(searchPath(data, \"crypto/kdfparams/salt\"));\n            const N = parseInt(searchPath(data, \"crypto/kdfparams/n\"));\n            const r = parseInt(searchPath(data, \"crypto/kdfparams/r\"));\n            const p = parseInt(searchPath(data, \"crypto/kdfparams/p\"));\n            // Check for all required parameters\n            if (!N || !r || !p) {\n                throwError(\"kdf\", kdf);\n            }\n            // Make sure N is a power of 2\n            if ((N & (N - 1)) !== 0) {\n                throwError(\"N\", N);\n            }\n            const dkLen = parseInt(searchPath(data, \"crypto/kdfparams/dklen\"));\n            if (dkLen !== 32) {\n                throwError(\"dklen\", dkLen);\n            }\n            return scryptFunc(passwordBytes, salt, N, r, p, 64, progressCallback);\n        }\n        else if (kdf.toLowerCase() === \"pbkdf2\") {\n            const salt = looseArrayify(searchPath(data, \"crypto/kdfparams/salt\"));\n            let prfFunc = null;\n            const prf = searchPath(data, \"crypto/kdfparams/prf\");\n            if (prf === \"hmac-sha256\") {\n                prfFunc = \"sha256\";\n            }\n            else if (prf === \"hmac-sha512\") {\n                prfFunc = \"sha512\";\n            }\n            else {\n                throwError(\"prf\", prf);\n            }\n            const count = parseInt(searchPath(data, \"crypto/kdfparams/c\"));\n            const dkLen = parseInt(searchPath(data, \"crypto/kdfparams/dklen\"));\n            if (dkLen !== 32) {\n                throwError(\"dklen\", dkLen);\n            }\n            return pbkdf2Func(passwordBytes, salt, count, dkLen, prfFunc);\n        }\n    }\n    return logger.throwArgumentError(\"unsupported key-derivation function\", \"kdf\", kdf);\n}\nexport function decryptSync(json, password) {\n    const data = JSON.parse(json);\n    const key = _computeKdfKey(data, password, pbkdf2Sync, scrypt.syncScrypt);\n    return _getAccount(data, key);\n}\nexport function decrypt(json, password, progressCallback) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const data = JSON.parse(json);\n        const key = yield _computeKdfKey(data, password, pbkdf2, scrypt.scrypt, progressCallback);\n        return _getAccount(data, key);\n    });\n}\nexport function encrypt(account, password, options, progressCallback) {\n    try {\n        // Check the address matches the private key\n        if (getAddress(account.address) !== computeAddress(account.privateKey)) {\n            throw new Error(\"address/privateKey mismatch\");\n        }\n        // Check the mnemonic (if any) matches the private key\n        if (hasMnemonic(account)) {\n            const mnemonic = account.mnemonic;\n            const node = HDNode.fromMnemonic(mnemonic.phrase, null, mnemonic.locale).derivePath(mnemonic.path || defaultPath);\n            if (node.privateKey != account.privateKey) {\n                throw new Error(\"mnemonic mismatch\");\n            }\n        }\n    }\n    catch (e) {\n        return Promise.reject(e);\n    }\n    // The options are optional, so adjust the call as needed\n    if (typeof (options) === \"function\" && !progressCallback) {\n        progressCallback = options;\n        options = {};\n    }\n    if (!options) {\n        options = {};\n    }\n    const privateKey = arrayify(account.privateKey);\n    const passwordBytes = getPassword(password);\n    let entropy = null;\n    let path = null;\n    let locale = null;\n    if (hasMnemonic(account)) {\n        const srcMnemonic = account.mnemonic;\n        entropy = arrayify(mnemonicToEntropy(srcMnemonic.phrase, srcMnemonic.locale || \"en\"));\n        path = srcMnemonic.path || defaultPath;\n        locale = srcMnemonic.locale || \"en\";\n    }\n    let client = options.client;\n    if (!client) {\n        client = \"ethers.js\";\n    }\n    // Check/generate the salt\n    let salt = null;\n    if (options.salt) {\n        salt = arrayify(options.salt);\n    }\n    else {\n        salt = randomBytes(32);\n        ;\n    }\n    // Override initialization vector\n    let iv = null;\n    if (options.iv) {\n        iv = arrayify(options.iv);\n        if (iv.length !== 16) {\n            throw new Error(\"invalid iv\");\n        }\n    }\n    else {\n        iv = randomBytes(16);\n    }\n    // Override the uuid\n    let uuidRandom = null;\n    if (options.uuid) {\n        uuidRandom = arrayify(options.uuid);\n        if (uuidRandom.length !== 16) {\n            throw new Error(\"invalid uuid\");\n        }\n    }\n    else {\n        uuidRandom = randomBytes(16);\n    }\n    // Override the scrypt password-based key derivation function parameters\n    let N = (1 << 17), r = 8, p = 1;\n    if (options.scrypt) {\n        if (options.scrypt.N) {\n            N = options.scrypt.N;\n        }\n        if (options.scrypt.r) {\n            r = options.scrypt.r;\n        }\n        if (options.scrypt.p) {\n            p = options.scrypt.p;\n        }\n    }\n    // We take 64 bytes:\n    //   - 32 bytes   As normal for the Web3 secret storage (derivedKey, macPrefix)\n    //   - 32 bytes   AES key to encrypt mnemonic with (required here to be Ethers Wallet)\n    return scrypt.scrypt(passwordBytes, salt, N, r, p, 64, progressCallback).then((key) => {\n        key = arrayify(key);\n        // This will be used to encrypt the wallet (as per Web3 secret storage)\n        const derivedKey = key.slice(0, 16);\n        const macPrefix = key.slice(16, 32);\n        // This will be used to encrypt the mnemonic phrase (if any)\n        const mnemonicKey = key.slice(32, 64);\n        // Encrypt the private key\n        const counter = new aes.Counter(iv);\n        const aesCtr = new aes.ModeOfOperation.ctr(derivedKey, counter);\n        const ciphertext = arrayify(aesCtr.encrypt(privateKey));\n        // Compute the message authentication code, used to check the password\n        const mac = keccak256(concat([macPrefix, ciphertext]));\n        // See: https://github.com/ethereum/wiki/wiki/Web3-Secret-Storage-Definition\n        const data = {\n            address: account.address.substring(2).toLowerCase(),\n            id: uuidV4(uuidRandom),\n            version: 3,\n            crypto: {\n                cipher: \"aes-128-ctr\",\n                cipherparams: {\n                    iv: hexlify(iv).substring(2),\n                },\n                ciphertext: hexlify(ciphertext).substring(2),\n                kdf: \"scrypt\",\n                kdfparams: {\n                    salt: hexlify(salt).substring(2),\n                    n: N,\n                    dklen: 32,\n                    p: p,\n                    r: r\n                },\n                mac: mac.substring(2)\n            }\n        };\n        // If we have a mnemonic, encrypt it into the JSON wallet\n        if (entropy) {\n            const mnemonicIv = randomBytes(16);\n            const mnemonicCounter = new aes.Counter(mnemonicIv);\n            const mnemonicAesCtr = new aes.ModeOfOperation.ctr(mnemonicKey, mnemonicCounter);\n            const mnemonicCiphertext = arrayify(mnemonicAesCtr.encrypt(entropy));\n            const now = new Date();\n            const timestamp = (now.getUTCFullYear() + \"-\" +\n                zpad(now.getUTCMonth() + 1, 2) + \"-\" +\n                zpad(now.getUTCDate(), 2) + \"T\" +\n                zpad(now.getUTCHours(), 2) + \"-\" +\n                zpad(now.getUTCMinutes(), 2) + \"-\" +\n                zpad(now.getUTCSeconds(), 2) + \".0Z\");\n            data[\"x-ethers\"] = {\n                client: client,\n                gethFilename: (\"UTC--\" + timestamp + \"--\" + data.address),\n                mnemonicCounter: hexlify(mnemonicIv).substring(2),\n                mnemonicCiphertext: hexlify(mnemonicCiphertext).substring(2),\n                path: path,\n                locale: locale,\n                version: \"0.1\"\n            };\n        }\n        return JSON.stringify(data);\n    });\n}\n//# sourceMappingURL=keystore.js.map","\"use strict\";\nimport aes from \"aes-js\";\nimport { getAddress } from \"@ethersproject/address\";\nimport { arrayify } from \"@ethersproject/bytes\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { pbkdf2 } from \"@ethersproject/pbkdf2\";\nimport { toUtf8Bytes } from \"@ethersproject/strings\";\nimport { Description } from \"@ethersproject/properties\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { getPassword, looseArrayify, searchPath } from \"./utils\";\nexport class CrowdsaleAccount extends Description {\n    isCrowdsaleAccount(value) {\n        return !!(value && value._isCrowdsaleAccount);\n    }\n}\n// See: https://github.com/ethereum/pyethsaletool\nexport function decrypt(json, password) {\n    const data = JSON.parse(json);\n    password = getPassword(password);\n    // Ethereum Address\n    const ethaddr = getAddress(searchPath(data, \"ethaddr\"));\n    // Encrypted Seed\n    const encseed = looseArrayify(searchPath(data, \"encseed\"));\n    if (!encseed || (encseed.length % 16) !== 0) {\n        logger.throwArgumentError(\"invalid encseed\", \"json\", json);\n    }\n    const key = arrayify(pbkdf2(password, password, 2000, 32, \"sha256\")).slice(0, 16);\n    const iv = encseed.slice(0, 16);\n    const encryptedSeed = encseed.slice(16);\n    // Decrypt the seed\n    const aesCbc = new aes.ModeOfOperation.cbc(key, iv);\n    const seed = aes.padding.pkcs7.strip(arrayify(aesCbc.decrypt(encryptedSeed)));\n    // This wallet format is weird... Convert the binary encoded hex to a string.\n    let seedHex = \"\";\n    for (let i = 0; i < seed.length; i++) {\n        seedHex += String.fromCharCode(seed[i]);\n    }\n    const seedHexBytes = toUtf8Bytes(seedHex);\n    const privateKey = keccak256(seedHexBytes);\n    return new CrowdsaleAccount({\n        _isCrowdsaleAccount: true,\n        address: ethaddr,\n        privateKey: privateKey\n    });\n}\n//# sourceMappingURL=crowdsale.js.map","\"use strict\";\nimport { getAddress } from \"@ethersproject/address\";\nexport function isCrowdsaleWallet(json) {\n    let data = null;\n    try {\n        data = JSON.parse(json);\n    }\n    catch (error) {\n        return false;\n    }\n    return (data.encseed && data.ethaddr);\n}\nexport function isKeystoreWallet(json) {\n    let data = null;\n    try {\n        data = JSON.parse(json);\n    }\n    catch (error) {\n        return false;\n    }\n    if (!data.version || parseInt(data.version) !== data.version || parseInt(data.version) !== 3) {\n        return false;\n    }\n    // @TODO: Put more checks to make sure it has kdf, iv and all that good stuff\n    return true;\n}\n//export function isJsonWallet(json: string): boolean {\n//    return (isSecretStorageWallet(json) || isCrowdsaleWallet(json));\n//}\nexport function getJsonWalletAddress(json) {\n    if (isCrowdsaleWallet(json)) {\n        try {\n            return getAddress(JSON.parse(json).ethaddr);\n        }\n        catch (error) {\n            return null;\n        }\n    }\n    if (isKeystoreWallet(json)) {\n        try {\n            return getAddress(JSON.parse(json).address);\n        }\n        catch (error) {\n            return null;\n        }\n    }\n    return null;\n}\n//# sourceMappingURL=inspect.js.map","\"use strict\";\nimport { decrypt as decryptCrowdsale } from \"./crowdsale\";\nimport { getJsonWalletAddress, isCrowdsaleWallet, isKeystoreWallet } from \"./inspect\";\nimport { decrypt as decryptKeystore, decryptSync as decryptKeystoreSync, encrypt as encryptKeystore } from \"./keystore\";\nfunction decryptJsonWallet(json, password, progressCallback) {\n    if (isCrowdsaleWallet(json)) {\n        if (progressCallback) {\n            progressCallback(0);\n        }\n        const account = decryptCrowdsale(json, password);\n        if (progressCallback) {\n            progressCallback(1);\n        }\n        return Promise.resolve(account);\n    }\n    if (isKeystoreWallet(json)) {\n        return decryptKeystore(json, password, progressCallback);\n    }\n    return Promise.reject(new Error(\"invalid JSON wallet\"));\n}\nfunction decryptJsonWalletSync(json, password) {\n    if (isCrowdsaleWallet(json)) {\n        return decryptCrowdsale(json, password);\n    }\n    if (isKeystoreWallet(json)) {\n        return decryptKeystoreSync(json, password);\n    }\n    throw new Error(\"invalid JSON wallet\");\n}\nexport { decryptCrowdsale, decryptKeystore, decryptKeystoreSync, encryptKeystore, isCrowdsaleWallet, isKeystoreWallet, getJsonWalletAddress, decryptJsonWallet, decryptJsonWalletSync, };\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { getAddress } from \"@ethersproject/address\";\nimport { Provider } from \"@ethersproject/abstract-provider\";\nimport { Signer } from \"@ethersproject/abstract-signer\";\nimport { arrayify, concat, hexDataSlice, isHexString, joinSignature } from \"@ethersproject/bytes\";\nimport { hashMessage, _TypedDataEncoder } from \"@ethersproject/hash\";\nimport { defaultPath, HDNode, entropyToMnemonic } from \"@ethersproject/hdnode\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { defineReadOnly, resolveProperties } from \"@ethersproject/properties\";\nimport { randomBytes } from \"@ethersproject/random\";\nimport { SigningKey } from \"@ethersproject/signing-key\";\nimport { decryptJsonWallet, decryptJsonWalletSync, encryptKeystore } from \"@ethersproject/json-wallets\";\nimport { computeAddress, recoverAddress, serialize } from \"@ethersproject/transactions\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nfunction isAccount(value) {\n    return (value != null && isHexString(value.privateKey, 32) && value.address != null);\n}\nfunction hasMnemonic(value) {\n    const mnemonic = value.mnemonic;\n    return (mnemonic && mnemonic.phrase);\n}\nexport class Wallet extends Signer {\n    constructor(privateKey, provider) {\n        super();\n        if (isAccount(privateKey)) {\n            const signingKey = new SigningKey(privateKey.privateKey);\n            defineReadOnly(this, \"_signingKey\", () => signingKey);\n            defineReadOnly(this, \"address\", computeAddress(this.publicKey));\n            if (this.address !== getAddress(privateKey.address)) {\n                logger.throwArgumentError(\"privateKey/address mismatch\", \"privateKey\", \"[REDACTED]\");\n            }\n            if (hasMnemonic(privateKey)) {\n                const srcMnemonic = privateKey.mnemonic;\n                defineReadOnly(this, \"_mnemonic\", () => ({\n                    phrase: srcMnemonic.phrase,\n                    path: srcMnemonic.path || defaultPath,\n                    locale: srcMnemonic.locale || \"en\"\n                }));\n                const mnemonic = this.mnemonic;\n                const node = HDNode.fromMnemonic(mnemonic.phrase, null, mnemonic.locale).derivePath(mnemonic.path);\n                if (computeAddress(node.privateKey) !== this.address) {\n                    logger.throwArgumentError(\"mnemonic/address mismatch\", \"privateKey\", \"[REDACTED]\");\n                }\n            }\n            else {\n                defineReadOnly(this, \"_mnemonic\", () => null);\n            }\n        }\n        else {\n            if (SigningKey.isSigningKey(privateKey)) {\n                /* istanbul ignore if */\n                if (privateKey.curve !== \"secp256k1\") {\n                    logger.throwArgumentError(\"unsupported curve; must be secp256k1\", \"privateKey\", \"[REDACTED]\");\n                }\n                defineReadOnly(this, \"_signingKey\", () => privateKey);\n            }\n            else {\n                // A lot of common tools do not prefix private keys with a 0x (see: #1166)\n                if (typeof (privateKey) === \"string\") {\n                    if (privateKey.match(/^[0-9a-f]*$/i) && privateKey.length === 64) {\n                        privateKey = \"0x\" + privateKey;\n                    }\n                }\n                const signingKey = new SigningKey(privateKey);\n                defineReadOnly(this, \"_signingKey\", () => signingKey);\n            }\n            defineReadOnly(this, \"_mnemonic\", () => null);\n            defineReadOnly(this, \"address\", computeAddress(this.publicKey));\n        }\n        /* istanbul ignore if */\n        if (provider && !Provider.isProvider(provider)) {\n            logger.throwArgumentError(\"invalid provider\", \"provider\", provider);\n        }\n        defineReadOnly(this, \"provider\", provider || null);\n    }\n    get mnemonic() { return this._mnemonic(); }\n    get privateKey() { return this._signingKey().privateKey; }\n    get publicKey() { return this._signingKey().publicKey; }\n    getAddress() {\n        return Promise.resolve(this.address);\n    }\n    connect(provider) {\n        return new Wallet(this, provider);\n    }\n    signTransaction(transaction) {\n        return resolveProperties(transaction).then((tx) => {\n            if (tx.from != null) {\n                if (getAddress(tx.from) !== this.address) {\n                    logger.throwArgumentError(\"transaction from address mismatch\", \"transaction.from\", transaction.from);\n                }\n                delete tx.from;\n            }\n            const signature = this._signingKey().signDigest(keccak256(serialize(tx)));\n            return serialize(tx, signature);\n        });\n    }\n    signMessage(message) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return joinSignature(this._signingKey().signDigest(hashMessage(message)));\n        });\n    }\n    _signTypedData(domain, types, value) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Populate any ENS names\n            const populated = yield _TypedDataEncoder.resolveNames(domain, types, value, (name) => {\n                if (this.provider == null) {\n                    logger.throwError(\"cannot resolve ENS names without a provider\", Logger.errors.UNSUPPORTED_OPERATION, {\n                        operation: \"resolveName\",\n                        value: name\n                    });\n                }\n                return this.provider.resolveName(name);\n            });\n            return joinSignature(this._signingKey().signDigest(_TypedDataEncoder.hash(populated.domain, types, populated.value)));\n        });\n    }\n    encrypt(password, options, progressCallback) {\n        if (typeof (options) === \"function\" && !progressCallback) {\n            progressCallback = options;\n            options = {};\n        }\n        if (progressCallback && typeof (progressCallback) !== \"function\") {\n            throw new Error(\"invalid callback\");\n        }\n        if (!options) {\n            options = {};\n        }\n        return encryptKeystore(this, password, options, progressCallback);\n    }\n    /**\n     *  Static methods to create Wallet instances.\n     */\n    static createRandom(options) {\n        let entropy = randomBytes(16);\n        if (!options) {\n            options = {};\n        }\n        if (options.extraEntropy) {\n            entropy = arrayify(hexDataSlice(keccak256(concat([entropy, options.extraEntropy])), 0, 16));\n        }\n        const mnemonic = entropyToMnemonic(entropy, options.locale);\n        return Wallet.fromMnemonic(mnemonic, options.path, options.locale);\n    }\n    static fromEncryptedJson(json, password, progressCallback) {\n        return decryptJsonWallet(json, password, progressCallback).then((account) => {\n            return new Wallet(account);\n        });\n    }\n    static fromEncryptedJsonSync(json, password) {\n        return new Wallet(decryptJsonWalletSync(json, password));\n    }\n    static fromMnemonic(mnemonic, path, wordlist) {\n        if (!path) {\n            path = defaultPath;\n        }\n        return new Wallet(HDNode.fromMnemonic(mnemonic, null, wordlist).derivePath(path));\n    }\n}\nexport function verifyMessage(message, signature) {\n    return recoverAddress(hashMessage(message), signature);\n}\nexport function verifyTypedData(domain, types, value, signature) {\n    return recoverAddress(_TypedDataEncoder.hash(domain, types, value), signature);\n}\n//# sourceMappingURL=index.js.map","export const version = \"wallet/5.7.0\";\n//# sourceMappingURL=_version.js.map","import { concat } from \"@ethersproject/bytes\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { toUtf8Bytes } from \"@ethersproject/strings\";\nexport const messagePrefix = \"\\x19Ethereum Signed Message:\\n\";\nexport function hashMessage(message) {\n    if (typeof (message) === \"string\") {\n        message = toUtf8Bytes(message);\n    }\n    return keccak256(concat([\n        toUtf8Bytes(messagePrefix),\n        toUtf8Bytes(String(message.length)),\n        message\n    ]));\n}\n//# sourceMappingURL=message.js.map","import { utils as ethersUtils, Wallet } from 'ethers';\nimport { stripHexPrefix } from 'ethereumjs-util';\nvar MIN_ENTROPY_SIZE = 128;\nvar keccak256 = ethersUtils.keccak256;\n\n/**\n * create a privateKey from the given entropy or a new one\n * @param  {Buffer} entropy\n * @return {string}\n */\nexport function createPrivateKey(entropy) {\n  if (entropy) {\n    if (!Buffer.isBuffer(entropy)) throw new Error('EthCrypto.createPrivateKey(): given entropy is no Buffer');\n    if (Buffer.byteLength(entropy, 'utf8') < MIN_ENTROPY_SIZE) throw new Error('EthCrypto.createPrivateKey(): Entropy-size must be at least ' + MIN_ENTROPY_SIZE);\n    var outerHex = keccak256(entropy);\n    return outerHex;\n  } else {\n    var innerHex = keccak256(ethersUtils.concat([ethersUtils.randomBytes(32), ethersUtils.randomBytes(32)]));\n    var middleHex = ethersUtils.concat([ethersUtils.concat([ethersUtils.randomBytes(32), innerHex]), ethersUtils.randomBytes(32)]);\n    var _outerHex = keccak256(middleHex);\n    return _outerHex;\n  }\n}\n\n/**\n * creates a new object with\n * private-, public-Key and address\n * @param {Buffer?} entropy if provided, will use that as single random-source\n */\nexport function createIdentity(entropy) {\n  var privateKey = createPrivateKey(entropy);\n  var wallet = new Wallet(privateKey);\n  var identity = {\n    privateKey: privateKey,\n    // remove trailing '0x04'\n    publicKey: stripHexPrefix(wallet.publicKey).slice(2),\n    address: wallet.address\n  };\n  return identity;\n}","export function removeLeading0x(str) {\n  if (str.startsWith('0x')) return str.substring(2);else return str;\n}\nexport function addLeading0x(str) {\n  if (!str.startsWith('0x')) return '0x' + str;else return str;\n}\nexport function uint8ArrayToHex(arr) {\n  return Buffer.from(arr).toString('hex');\n}\nexport function hexToUnit8Array(str) {\n  return new Uint8Array(Buffer.from(str, 'hex'));\n}","import { publicKeyConvert } from 'secp256k1';\nimport { pubToAddress, toChecksumAddress, toBuffer } from 'ethereumjs-util';\nimport { hexToUnit8Array, uint8ArrayToHex, addLeading0x } from './util';\nexport function compress(startsWith04) {\n  // add trailing 04 if not done before\n  var testBuffer = Buffer.from(startsWith04, 'hex');\n  if (testBuffer.length === 64) startsWith04 = '04' + startsWith04;\n  return uint8ArrayToHex(publicKeyConvert(hexToUnit8Array(startsWith04), true));\n}\nexport function decompress(startsWith02Or03) {\n  // if already decompressed an not has trailing 04\n  var testBuffer = Buffer.from(startsWith02Or03, 'hex');\n  if (testBuffer.length === 64) startsWith02Or03 = '04' + startsWith02Or03;\n  var decompressed = uint8ArrayToHex(publicKeyConvert(hexToUnit8Array(startsWith02Or03), false));\n\n  // remove trailing 04\n  decompressed = decompressed.substring(2);\n  return decompressed;\n}\n\n/**\n * generates the ethereum-adress of the publicKey\n * We create the checksum-adress which is case-sensitive\n * @returns {string} address\n */\nexport function toAddress(publicKey) {\n  // normalize key\n  publicKey = decompress(publicKey);\n  var addressBuffer = pubToAddress(toBuffer(addLeading0x(publicKey)));\n  var checkSumAdress = toChecksumAddress(addLeading0x(addressBuffer.toString('hex')));\n  return checkSumAdress;\n}","import { compress, decompress } from './public-key';\nexport function stringify(cipher) {\n  if (typeof cipher === 'string') return cipher;\n\n  // use compressed key because it's smaller\n  var compressedKey = compress(cipher.ephemPublicKey);\n  var ret = Buffer.concat([Buffer.from(cipher.iv, 'hex'),\n  // 16bit\n  Buffer.from(compressedKey, 'hex'),\n  // 33bit\n  Buffer.from(cipher.mac, 'hex'),\n  // 32bit\n  Buffer.from(cipher.ciphertext, 'hex') // var bit\n  ]);\n\n  return ret.toString('hex');\n}\nexport function parse(str) {\n  if (typeof str !== 'string') return str;\n  var buf = Buffer.from(str, 'hex');\n  var ret = {\n    iv: buf.toString('hex', 0, 16),\n    ephemPublicKey: buf.toString('hex', 16, 49),\n    mac: buf.toString('hex', 49, 81),\n    ciphertext: buf.toString('hex', 81, buf.length)\n  };\n\n  // decompress publicKey\n  ret.ephemPublicKey = '04' + decompress(ret.ephemPublicKey);\n  return ret;\n}","import { decrypt } from 'eccrypto';\nimport { parse } from './cipher';\nimport { removeLeading0x } from './util';\nexport function decryptWithPrivateKey(privateKey, encrypted) {\n  encrypted = parse(encrypted);\n\n  // remove trailing '0x' from privateKey\n  var twoStripped = removeLeading0x(privateKey);\n  var encryptedBuffer = {\n    iv: Buffer.from(encrypted.iv, 'hex'),\n    ephemPublicKey: Buffer.from(encrypted.ephemPublicKey, 'hex'),\n    ciphertext: Buffer.from(encrypted.ciphertext, 'hex'),\n    mac: Buffer.from(encrypted.mac, 'hex')\n  };\n  return decrypt(Buffer.from(twoStripped, 'hex'), encryptedBuffer).then(function (decryptedBuffer) {\n    return decryptedBuffer.toString();\n  });\n}","import { encrypt } from 'eccrypto';\nimport { decompress } from './public-key';\nexport function encryptWithPublicKey(publicKey, message, opts) {\n  // ensure its an uncompressed publicKey\n  publicKey = decompress(publicKey);\n\n  // re-add the compression-flag\n  var pubString = '04' + publicKey;\n  return encrypt(Buffer.from(pubString, 'hex'), Buffer.from(message), opts ? opts : {}).then(function (encryptedBuffers) {\n    var encrypted = {\n      iv: encryptedBuffers.iv.toString('hex'),\n      ephemPublicKey: encryptedBuffers.ephemPublicKey.toString('hex'),\n      ciphertext: encryptedBuffers.ciphertext.toString('hex'),\n      mac: encryptedBuffers.mac.toString('hex')\n    };\n    return encrypted;\n  });\n}","import { privateToPublic, toBuffer } from 'ethereumjs-util';\nimport { addLeading0x } from './util';\n\n/**\n * Generate publicKey from the privateKey.\n * This creates the uncompressed publicKey,\n * where 04 has stripped from left\n * @returns {string}\n */\nexport function publicKeyByPrivateKey(privateKey) {\n  privateKey = addLeading0x(privateKey);\n  var publicKeyBuffer = privateToPublic(toBuffer(privateKey));\n  return publicKeyBuffer.toString('hex');\n}","import { ecdsaRecover } from 'secp256k1';\nimport { removeLeading0x, hexToUnit8Array, uint8ArrayToHex } from './util';\n\n/**\n * returns the publicKey for the privateKey with which the messageHash was signed\n * @param  {string} signature\n * @param  {string} hash\n * @return {string} publicKey\n */\nexport function recoverPublicKey(signature, hash) {\n  signature = removeLeading0x(signature);\n\n  // split into v-value and sig\n  var sigOnly = signature.substring(0, signature.length - 2); // all but last 2 chars\n  var vValue = signature.slice(-2); // last 2 chars\n\n  var recoveryNumber = vValue === '1c' ? 1 : 0;\n  var pubKey = uint8ArrayToHex(ecdsaRecover(hexToUnit8Array(sigOnly), recoveryNumber, hexToUnit8Array(removeLeading0x(hash)), false));\n\n  // remove trailing '04'\n  pubKey = pubKey.slice(2);\n  return pubKey;\n}","import { recoverPublicKey } from './recover-public-key';\nimport { toAddress as addressByPublicKey } from './public-key';\n\n/**\n * returns the adress with which the messageHash was signed\n * @param  {string} sigString\n * @param  {string} hash\n * @return {string} address\n */\nexport function recover(sigString, hash) {\n  var pubkey = recoverPublicKey(sigString, hash);\n  var address = addressByPublicKey(pubkey);\n  return address;\n}","import { ecdsaSign as secp256k1_sign } from 'secp256k1';\nimport { addLeading0x, removeLeading0x } from './util';\n\n/**\n * signs the given message\n * we do not use sign from eth-lib because the pure secp256k1-version is 90% faster\n * @param  {string} privateKey\n * @param  {string} hash\n * @return {string} hexString\n */\nexport function sign(privateKey, hash) {\n  hash = addLeading0x(hash);\n  if (hash.length !== 66) throw new Error('EthCrypto.sign(): Can only sign hashes, given: ' + hash);\n  var sigObj = secp256k1_sign(new Uint8Array(Buffer.from(removeLeading0x(hash), 'hex')), new Uint8Array(Buffer.from(removeLeading0x(privateKey), 'hex')));\n  var recoveryId = sigObj.recid === 1 ? '1c' : '1b';\n  var newSignature = '0x' + Buffer.from(sigObj.signature).toString('hex') + recoveryId;\n  return newSignature;\n}","import { Transaction } from '@ethereumjs/tx';\nimport { publicKeyByPrivateKey } from './public-key-by-private-key';\nimport { toAddress as addressByPublicKey } from './public-key';\nexport function signTransaction(rawTx, privateKey) {\n  var txOptions = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  // check if privateKey->address matches rawTx.from\n  var publicKey = publicKeyByPrivateKey(privateKey);\n  var address = addressByPublicKey(publicKey);\n  if (address != rawTx.from) throw new Error('EthCrypto.signTransaction(): rawTx.from does not match the address of the privateKey');\n  var privateKeyBuffer = Buffer.from(privateKey.replace(/^.{2}/g, ''), 'hex');\n  var tx = Transaction.fromTxData(rawTx, txOptions);\n  var signedTx = tx.sign(privateKeyBuffer);\n  var serializedTx = signedTx.serialize().toString('hex');\n  return serializedTx;\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport { ContractFactory } from 'ethers';\nexport function txDataByCompiled(abi, bytecode, args) {\n  // solc returns a string which is often passed instead of the json\n  if (typeof abi === 'string') abi = JSON.parse(abi);\n\n  // Construct a Contract Factory\n  var factory = new ContractFactory(abi, '0x' + bytecode);\n  var deployTransaction = factory.getDeployTransaction.apply(factory, _toConsumableArray(args));\n  return deployTransaction.data;\n}","import { generateAddress, toChecksumAddress, toBuffer } from 'ethereumjs-util';\nimport { addLeading0x } from './util';\nexport function calculateContractAddress(creatorAddress, nonce) {\n  var addressBuffer = generateAddress(toBuffer(addLeading0x(creatorAddress)), toBuffer(nonce));\n  var address = addressBuffer.toString('hex');\n  return toChecksumAddress(addLeading0x(address));\n}","export const version = \"solidity/5.7.0\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { arrayify, concat, hexlify, zeroPad } from \"@ethersproject/bytes\";\nimport { keccak256 as hashKeccak256 } from \"@ethersproject/keccak256\";\nimport { sha256 as hashSha256 } from \"@ethersproject/sha2\";\nimport { toUtf8Bytes } from \"@ethersproject/strings\";\nconst regexBytes = new RegExp(\"^bytes([0-9]+)$\");\nconst regexNumber = new RegExp(\"^(u?int)([0-9]*)$\");\nconst regexArray = new RegExp(\"^(.*)\\\\[([0-9]*)\\\\]$\");\nconst Zeros = \"0000000000000000000000000000000000000000000000000000000000000000\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nfunction _pack(type, value, isArray) {\n    switch (type) {\n        case \"address\":\n            if (isArray) {\n                return zeroPad(value, 32);\n            }\n            return arrayify(value);\n        case \"string\":\n            return toUtf8Bytes(value);\n        case \"bytes\":\n            return arrayify(value);\n        case \"bool\":\n            value = (value ? \"0x01\" : \"0x00\");\n            if (isArray) {\n                return zeroPad(value, 32);\n            }\n            return arrayify(value);\n    }\n    let match = type.match(regexNumber);\n    if (match) {\n        //let signed = (match[1] === \"int\")\n        let size = parseInt(match[2] || \"256\");\n        if ((match[2] && String(size) !== match[2]) || (size % 8 !== 0) || size === 0 || size > 256) {\n            logger.throwArgumentError(\"invalid number type\", \"type\", type);\n        }\n        if (isArray) {\n            size = 256;\n        }\n        value = BigNumber.from(value).toTwos(size);\n        return zeroPad(value, size / 8);\n    }\n    match = type.match(regexBytes);\n    if (match) {\n        const size = parseInt(match[1]);\n        if (String(size) !== match[1] || size === 0 || size > 32) {\n            logger.throwArgumentError(\"invalid bytes type\", \"type\", type);\n        }\n        if (arrayify(value).byteLength !== size) {\n            logger.throwArgumentError(`invalid value for ${type}`, \"value\", value);\n        }\n        if (isArray) {\n            return arrayify((value + Zeros).substring(0, 66));\n        }\n        return value;\n    }\n    match = type.match(regexArray);\n    if (match && Array.isArray(value)) {\n        const baseType = match[1];\n        const count = parseInt(match[2] || String(value.length));\n        if (count != value.length) {\n            logger.throwArgumentError(`invalid array length for ${type}`, \"value\", value);\n        }\n        const result = [];\n        value.forEach(function (value) {\n            result.push(_pack(baseType, value, true));\n        });\n        return concat(result);\n    }\n    return logger.throwArgumentError(\"invalid type\", \"type\", type);\n}\n// @TODO: Array Enum\nexport function pack(types, values) {\n    if (types.length != values.length) {\n        logger.throwArgumentError(\"wrong number of values; expected ${ types.length }\", \"values\", values);\n    }\n    const tight = [];\n    types.forEach(function (type, index) {\n        tight.push(_pack(type, values[index]));\n    });\n    return hexlify(concat(tight));\n}\nexport function keccak256(types, values) {\n    return hashKeccak256(pack(types, values));\n}\nexport function sha256(types, values) {\n    return hashSha256(pack(types, values));\n}\n//# sourceMappingURL=index.js.map","import { utils as ethersUtils } from 'ethers';\nexport function keccak256(params) {\n  var types = [];\n  var values = [];\n  if (!Array.isArray(params)) {\n    types.push('string');\n    values.push(params);\n  } else {\n    params.forEach(function (p) {\n      types.push(p.type);\n      values.push(p.value);\n    });\n  }\n  return ethersUtils.solidityKeccak256(types, values);\n}\nexport var SIGN_PREFIX = '\\x19Ethereum Signed Message:\\n32';","/**\n * compress/decompress hex-strings to utf16 or base64\n * thx @juvian\n * @link https://stackoverflow.com/a/40471908/3443137\n */\n\nimport { removeLeading0x, addLeading0x } from './util';\nexport function compress(hex) {\n  var base64 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  hex = removeLeading0x(hex);\n\n  // if base64:true, we use our own function because it results in a smaller output\n  if (base64 === true) return Buffer.from(hex, 'hex').toString('base64');\n  var string = '';\n  while (hex.length % 4 != 0) {\n    // we need it to be multiple of 4\n    hex = '0' + hex;\n  }\n  for (var i = 0; i < hex.length; i += 4) {\n    // get char from ascii code which goes from 0 to 65536\n    string += String.fromCharCode(parseInt(hex.substring(i, i + 4), 16));\n  }\n  return string;\n}\nexport function decompress(compressedString) {\n  var base64 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  // if base64:true, we use our own function because it results in a smaller output\n  if (base64 === true) {\n    var ret = Buffer.from(compressedString, 'base64').toString('hex');\n    return addLeading0x(ret);\n  }\n  var hex = '';\n  for (var i = 0; i < compressedString.length; i++) {\n    // get character ascii code and convert to hexa string, adding necessary 0s\n    hex += ((i == 0 ? '' : '000') + compressedString.charCodeAt(i).toString(16)).slice(-4);\n  }\n  hex = hex.toLowerCase();\n  return addLeading0x(hex);\n}","import { utils as ethersUtils } from 'ethers';\n/**\n * split signature-hex into parts\n * @param  {string} hexString\n * @return {{v: string, r: string, s: string}}\n */\nexport function fromString(hexString) {\n  var arr = ethersUtils.splitSignature(hexString);\n  return {\n    // convert \"v\" to hex\n    v: \"0x\".concat(arr.v.toString(16)),\n    r: arr.r,\n    s: arr.s\n  };\n}\n\n/**\n * merge signature-parts to one string\n * @param  {{v: string, r: string, s: string}} sig\n * @return {string} hexString\n */\nexport function toString(sig) {\n  return ethersUtils.joinSignature(sig);\n}","import { createIdentity } from './create-identity';\nimport * as publicKey from './public-key';\nimport { decryptWithPrivateKey } from './decrypt-with-private-key';\nimport { encryptWithPublicKey } from './encrypt-with-public-key';\nimport * as cipher from './cipher';\nimport { publicKeyByPrivateKey } from './public-key-by-private-key';\nimport { recover } from './recover';\nimport { recoverPublicKey } from './recover-public-key';\nimport { sign } from './sign';\nimport { signTransaction } from './sign-transaction';\nimport { txDataByCompiled } from './tx-data-by-compiled';\nimport { calculateContractAddress } from './calculate-contract-address';\nimport * as hash from './hash';\nimport * as hex from './hex';\nimport * as vrs from './vrs';\nimport * as util from './util';\nexport { createIdentity, publicKey, decryptWithPrivateKey, encryptWithPublicKey, cipher, publicKeyByPrivateKey, recover, recoverPublicKey, sign, signTransaction, txDataByCompiled, calculateContractAddress, hash, hex, vrs, util };\nexport default {\n  createIdentity: createIdentity,\n  publicKey: publicKey,\n  decryptWithPrivateKey: decryptWithPrivateKey,\n  encryptWithPublicKey: encryptWithPublicKey,\n  cipher: cipher,\n  publicKeyByPrivateKey: publicKeyByPrivateKey,\n  recover: recover,\n  recoverPublicKey: recoverPublicKey,\n  sign: sign,\n  signTransaction: signTransaction,\n  txDataByCompiled: txDataByCompiled,\n  calculateContractAddress: calculateContractAddress,\n  hash: hash,\n  hex: hex,\n  vrs: vrs,\n  util: util\n};","\"use strict\";\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.chains = exports._getInitializedChains = void 0;\nvar mainnet_json_1 = __importDefault(require(\"./mainnet.json\"));\nvar ropsten_json_1 = __importDefault(require(\"./ropsten.json\"));\nvar rinkeby_json_1 = __importDefault(require(\"./rinkeby.json\"));\nvar kovan_json_1 = __importDefault(require(\"./kovan.json\"));\nvar goerli_json_1 = __importDefault(require(\"./goerli.json\"));\nvar sepolia_json_1 = __importDefault(require(\"./sepolia.json\"));\n/**\n * @hidden\n */\nfunction _getInitializedChains(customChains) {\n    var e_1, _a;\n    var names = {\n        '1': 'mainnet',\n        '3': 'ropsten',\n        '4': 'rinkeby',\n        '42': 'kovan',\n        '5': 'goerli',\n        '11155111': 'sepolia',\n    };\n    var chains = {\n        mainnet: mainnet_json_1.default,\n        ropsten: ropsten_json_1.default,\n        rinkeby: rinkeby_json_1.default,\n        kovan: kovan_json_1.default,\n        goerli: goerli_json_1.default,\n        sepolia: sepolia_json_1.default,\n    };\n    if (customChains) {\n        try {\n            for (var customChains_1 = __values(customChains), customChains_1_1 = customChains_1.next(); !customChains_1_1.done; customChains_1_1 = customChains_1.next()) {\n                var chain = customChains_1_1.value;\n                var name_1 = chain.name;\n                names[chain.chainId.toString()] = name_1;\n                chains[name_1] = chain;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (customChains_1_1 && !customChains_1_1.done && (_a = customChains_1.return)) _a.call(customChains_1);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n    }\n    chains['names'] = names;\n    return chains;\n}\nexports._getInitializedChains = _getInitializedChains;\n/**\n * @deprecated this constant will be internalized (removed)\n * on next major version update\n */\nexports.chains = _getInitializedChains();\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EIPs = void 0;\nexports.EIPs = {\n    1153: require('./1153.json'),\n    1559: require('./1559.json'),\n    2315: require('./2315.json'),\n    2537: require('./2537.json'),\n    2565: require('./2565.json'),\n    2718: require('./2718.json'),\n    2929: require('./2929.json'),\n    2930: require('./2930.json'),\n    3198: require('./3198.json'),\n    3529: require('./3529.json'),\n    3540: require('./3540.json'),\n    3541: require('./3541.json'),\n    3554: require('./3554.json'),\n    3607: require('./3607.json'),\n    3651: require('./3651.json'),\n    3670: require('./3670.json'),\n    3675: require('./3675.json'),\n    3855: require('./3855.json'),\n    3860: require('./3860.json'),\n    4345: require('./4345.json'),\n    4399: require('./4399.json'),\n    5133: require('./5133.json'),\n};\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.hardforks = void 0;\nexports.hardforks = [\n    ['chainstart', require('./chainstart.json')],\n    ['homestead', require('./homestead.json')],\n    ['dao', require('./dao.json')],\n    ['tangerineWhistle', require('./tangerineWhistle.json')],\n    ['spuriousDragon', require('./spuriousDragon.json')],\n    ['byzantium', require('./byzantium.json')],\n    ['constantinople', require('./constantinople.json')],\n    ['petersburg', require('./petersburg.json')],\n    ['istanbul', require('./istanbul.json')],\n    ['muirGlacier', require('./muirGlacier.json')],\n    ['berlin', require('./berlin.json')],\n    ['london', require('./london.json')],\n    ['shanghai', require('./shanghai.json')],\n    ['arrowGlacier', require('./arrowGlacier.json')],\n    ['grayGlacier', require('./grayGlacier.json')],\n    ['mergeForkIdTransition', require('./mergeForkIdTransition.json')],\n    ['merge', require('./merge.json')],\n];\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConsensusAlgorithm = exports.ConsensusType = exports.Hardfork = exports.Chain = exports.CustomChain = void 0;\nvar events_1 = require(\"events\");\nvar crc_32_1 = require(\"crc-32\");\nvar ethereumjs_util_1 = require(\"ethereumjs-util\");\nvar chains_1 = require(\"./chains\");\nvar hardforks_1 = require(\"./hardforks\");\nvar eips_1 = require(\"./eips\");\nvar CustomChain;\n(function (CustomChain) {\n    /**\n     * Polygon (Matic) Mainnet\n     *\n     * - [Documentation](https://docs.matic.network/docs/develop/network-details/network)\n     */\n    CustomChain[\"PolygonMainnet\"] = \"polygon-mainnet\";\n    /**\n     * Polygon (Matic) Mumbai Testnet\n     *\n     * - [Documentation](https://docs.matic.network/docs/develop/network-details/network)\n     */\n    CustomChain[\"PolygonMumbai\"] = \"polygon-mumbai\";\n    /**\n     * Arbitrum Rinkeby Testnet\n     *\n     * - [Documentation](https://developer.offchainlabs.com/docs/public_testnet)\n     */\n    CustomChain[\"ArbitrumRinkebyTestnet\"] = \"arbitrum-rinkeby-testnet\";\n    /**\n     * xDai EVM sidechain with a native stable token\n     *\n     * - [Documentation](https://www.xdaichain.com/)\n     */\n    CustomChain[\"xDaiChain\"] = \"x-dai-chain\";\n    /**\n     * Optimistic Kovan - testnet for Optimism roll-up\n     *\n     * - [Documentation](https://community.optimism.io/docs/developers/tutorials.html)\n     */\n    CustomChain[\"OptimisticKovan\"] = \"optimistic-kovan\";\n    /**\n     * Optimistic Ethereum - mainnet for Optimism roll-up\n     *\n     * - [Documentation](https://community.optimism.io/docs/developers/tutorials.html)\n     */\n    CustomChain[\"OptimisticEthereum\"] = \"optimistic-ethereum\";\n})(CustomChain = exports.CustomChain || (exports.CustomChain = {}));\nvar Chain;\n(function (Chain) {\n    Chain[Chain[\"Mainnet\"] = 1] = \"Mainnet\";\n    Chain[Chain[\"Ropsten\"] = 3] = \"Ropsten\";\n    Chain[Chain[\"Rinkeby\"] = 4] = \"Rinkeby\";\n    Chain[Chain[\"Kovan\"] = 42] = \"Kovan\";\n    Chain[Chain[\"Goerli\"] = 5] = \"Goerli\";\n    Chain[Chain[\"Sepolia\"] = 11155111] = \"Sepolia\";\n})(Chain = exports.Chain || (exports.Chain = {}));\nvar Hardfork;\n(function (Hardfork) {\n    Hardfork[\"Chainstart\"] = \"chainstart\";\n    Hardfork[\"Homestead\"] = \"homestead\";\n    Hardfork[\"Dao\"] = \"dao\";\n    Hardfork[\"TangerineWhistle\"] = \"tangerineWhistle\";\n    Hardfork[\"SpuriousDragon\"] = \"spuriousDragon\";\n    Hardfork[\"Byzantium\"] = \"byzantium\";\n    Hardfork[\"Constantinople\"] = \"constantinople\";\n    Hardfork[\"Petersburg\"] = \"petersburg\";\n    Hardfork[\"Istanbul\"] = \"istanbul\";\n    Hardfork[\"MuirGlacier\"] = \"muirGlacier\";\n    Hardfork[\"Berlin\"] = \"berlin\";\n    Hardfork[\"London\"] = \"london\";\n    Hardfork[\"ArrowGlacier\"] = \"arrowGlacier\";\n    Hardfork[\"GrayGlacier\"] = \"grayGlacier\";\n    Hardfork[\"MergeForkIdTransition\"] = \"mergeForkIdTransition\";\n    Hardfork[\"Merge\"] = \"merge\";\n    Hardfork[\"Shanghai\"] = \"shanghai\";\n})(Hardfork = exports.Hardfork || (exports.Hardfork = {}));\nvar ConsensusType;\n(function (ConsensusType) {\n    ConsensusType[\"ProofOfStake\"] = \"pos\";\n    ConsensusType[\"ProofOfWork\"] = \"pow\";\n    ConsensusType[\"ProofOfAuthority\"] = \"poa\";\n})(ConsensusType = exports.ConsensusType || (exports.ConsensusType = {}));\nvar ConsensusAlgorithm;\n(function (ConsensusAlgorithm) {\n    ConsensusAlgorithm[\"Ethash\"] = \"ethash\";\n    ConsensusAlgorithm[\"Clique\"] = \"clique\";\n    ConsensusAlgorithm[\"Casper\"] = \"casper\";\n})(ConsensusAlgorithm = exports.ConsensusAlgorithm || (exports.ConsensusAlgorithm = {}));\n/**\n * Common class to access chain and hardfork parameters and to provide\n * a unified and shared view on the network and hardfork state.\n *\n * Use the {@link Common.custom} static constructor for creating simple\n * custom chain {@link Common} objects (more complete custom chain setups\n * can be created via the main constructor and the {@link CommonOpts.customChains} parameter).\n */\nvar Common = /** @class */ (function (_super) {\n    __extends(Common, _super);\n    /**\n     *\n     * @constructor\n     */\n    function Common(opts) {\n        var e_1, _a;\n        var _this = this;\n        var _b, _c;\n        _this = _super.call(this) || this;\n        _this._supportedHardforks = [];\n        _this._eips = [];\n        _this._customChains = (_b = opts.customChains) !== null && _b !== void 0 ? _b : [];\n        _this._chainParams = _this.setChain(opts.chain);\n        _this.DEFAULT_HARDFORK = (_c = _this._chainParams.defaultHardfork) !== null && _c !== void 0 ? _c : Hardfork.Istanbul;\n        try {\n            for (var _d = __values(_this._chainParams.hardforks), _e = _d.next(); !_e.done; _e = _d.next()) {\n                var hf = _e.value;\n                if (!hf.forkHash) {\n                    hf.forkHash = _this._calcForkHash(hf.name);\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_e && !_e.done && (_a = _d.return)) _a.call(_d);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        _this._hardfork = _this.DEFAULT_HARDFORK;\n        if (opts.supportedHardforks) {\n            _this._supportedHardforks = opts.supportedHardforks;\n        }\n        if (opts.hardfork) {\n            _this.setHardfork(opts.hardfork);\n        }\n        if (opts.eips) {\n            _this.setEIPs(opts.eips);\n        }\n        return _this;\n    }\n    /**\n     * Creates a {@link Common} object for a custom chain, based on a standard one.\n     *\n     * It uses all the {@link Chain} parameters from the {@link baseChain} option except the ones overridden\n     * in a provided {@link chainParamsOrName} dictionary. Some usage example:\n     *\n     * ```javascript\n     * Common.custom({chainId: 123})\n     * ```\n     *\n     * There are also selected supported custom chains which can be initialized by using one of the\n     * {@link CustomChains} for {@link chainParamsOrName}, e.g.:\n     *\n     * ```javascript\n     * Common.custom(CustomChains.MaticMumbai)\n     * ```\n     *\n     * Note that these supported custom chains only provide some base parameters (usually the chain and\n     * network ID and a name) and can only be used for selected use cases (e.g. sending a tx with\n     * the `@ethereumjs/tx` library to a Layer-2 chain).\n     *\n     * @param chainParamsOrName Custom parameter dict (`name` will default to `custom-chain`) or string with name of a supported custom chain\n     * @param opts Custom chain options to set the {@link CustomCommonOpts.baseChain}, selected {@link CustomCommonOpts.hardfork} and others\n     */\n    Common.custom = function (chainParamsOrName, opts) {\n        var _a;\n        if (opts === void 0) { opts = {}; }\n        var baseChain = (_a = opts.baseChain) !== null && _a !== void 0 ? _a : 'mainnet';\n        var standardChainParams = __assign({}, Common._getChainParams(baseChain));\n        standardChainParams['name'] = 'custom-chain';\n        if (typeof chainParamsOrName !== 'string') {\n            return new Common(__assign({ chain: __assign(__assign({}, standardChainParams), chainParamsOrName) }, opts));\n        }\n        else {\n            if (chainParamsOrName === CustomChain.PolygonMainnet) {\n                return Common.custom({\n                    name: CustomChain.PolygonMainnet,\n                    chainId: 137,\n                    networkId: 137,\n                }, opts);\n            }\n            if (chainParamsOrName === CustomChain.PolygonMumbai) {\n                return Common.custom({\n                    name: CustomChain.PolygonMumbai,\n                    chainId: 80001,\n                    networkId: 80001,\n                }, opts);\n            }\n            if (chainParamsOrName === CustomChain.ArbitrumRinkebyTestnet) {\n                return Common.custom({\n                    name: CustomChain.ArbitrumRinkebyTestnet,\n                    chainId: 421611,\n                    networkId: 421611,\n                }, opts);\n            }\n            if (chainParamsOrName === CustomChain.xDaiChain) {\n                return Common.custom({\n                    name: CustomChain.xDaiChain,\n                    chainId: 100,\n                    networkId: 100,\n                }, opts);\n            }\n            if (chainParamsOrName === CustomChain.OptimisticKovan) {\n                return Common.custom({\n                    name: CustomChain.OptimisticKovan,\n                    chainId: 69,\n                    networkId: 69,\n                }, __assign({ hardfork: Hardfork.Berlin }, opts));\n            }\n            if (chainParamsOrName === CustomChain.OptimisticEthereum) {\n                return Common.custom({\n                    name: CustomChain.OptimisticEthereum,\n                    chainId: 10,\n                    networkId: 10,\n                }, __assign({ hardfork: Hardfork.Berlin }, opts));\n            }\n            throw new Error(\"Custom chain \".concat(chainParamsOrName, \" not supported\"));\n        }\n    };\n    /**\n     * Creates a {@link Common} object for a custom chain, based on a standard one. It uses all the `Chain`\n     * params from {@link baseChain} except the ones overridden in {@link customChainParams}.\n     *\n     * @deprecated Use {@link Common.custom} instead\n     *\n     * @param baseChain The name (`mainnet`) or id (`1`) of a standard chain used to base the custom\n     * chain params on.\n     * @param customChainParams The custom parameters of the chain.\n     * @param hardfork String identifier ('byzantium') for hardfork (optional)\n     * @param supportedHardforks Limit parameter returns to the given hardforks (optional)\n     */\n    Common.forCustomChain = function (baseChain, customChainParams, hardfork, supportedHardforks) {\n        var standardChainParams = Common._getChainParams(baseChain);\n        return new Common({\n            chain: __assign(__assign({}, standardChainParams), customChainParams),\n            hardfork: hardfork,\n            supportedHardforks: supportedHardforks,\n        });\n    };\n    /**\n     * Static method to determine if a {@link chainId} is supported as a standard chain\n     * @param chainId BN id (`1`) of a standard chain\n     * @returns boolean\n     */\n    Common.isSupportedChainId = function (chainId) {\n        var initializedChains = (0, chains_1._getInitializedChains)();\n        return Boolean(initializedChains['names'][chainId.toString()]);\n    };\n    Common._getChainParams = function (chain, customChains) {\n        var initializedChains = (0, chains_1._getInitializedChains)(customChains);\n        if (typeof chain === 'number' || ethereumjs_util_1.BN.isBN(chain)) {\n            chain = chain.toString();\n            if (initializedChains['names'][chain]) {\n                var name_1 = initializedChains['names'][chain];\n                return initializedChains[name_1];\n            }\n            throw new Error(\"Chain with ID \".concat(chain, \" not supported\"));\n        }\n        if (initializedChains[chain]) {\n            return initializedChains[chain];\n        }\n        throw new Error(\"Chain with name \".concat(chain, \" not supported\"));\n    };\n    /**\n     * Sets the chain\n     * @param chain String ('mainnet') or Number (1) chain\n     *     representation. Or, a Dictionary of chain parameters for a private network.\n     * @returns The dictionary with parameters set as chain\n     */\n    Common.prototype.setChain = function (chain) {\n        var e_2, _a;\n        if (typeof chain === 'number' || typeof chain === 'string' || ethereumjs_util_1.BN.isBN(chain)) {\n            // Filter out genesis states if passed in to customChains\n            var plainCustomChains = void 0;\n            if (this._customChains &&\n                this._customChains.length > 0 &&\n                Array.isArray(this._customChains[0])) {\n                plainCustomChains = this._customChains.map(function (e) { return e[0]; });\n            }\n            else {\n                plainCustomChains = this._customChains;\n            }\n            this._chainParams = Common._getChainParams(chain, plainCustomChains);\n        }\n        else if (typeof chain === 'object') {\n            if (this._customChains.length > 0) {\n                throw new Error('Chain must be a string, number, or BN when initialized with customChains passed in');\n            }\n            var required = ['networkId', 'genesis', 'hardforks', 'bootstrapNodes'];\n            try {\n                for (var required_1 = __values(required), required_1_1 = required_1.next(); !required_1_1.done; required_1_1 = required_1.next()) {\n                    var param = required_1_1.value;\n                    if (chain[param] === undefined) {\n                        throw new Error(\"Missing required chain parameter: \".concat(param));\n                    }\n                }\n            }\n            catch (e_2_1) { e_2 = { error: e_2_1 }; }\n            finally {\n                try {\n                    if (required_1_1 && !required_1_1.done && (_a = required_1.return)) _a.call(required_1);\n                }\n                finally { if (e_2) throw e_2.error; }\n            }\n            this._chainParams = chain;\n        }\n        else {\n            throw new Error('Wrong input format');\n        }\n        return this._chainParams;\n    };\n    /**\n     * Sets the hardfork to get params for\n     * @param hardfork String identifier (e.g. 'byzantium') or {@link Hardfork} enum\n     */\n    Common.prototype.setHardfork = function (hardfork) {\n        var e_3, _a;\n        if (!this._isSupportedHardfork(hardfork)) {\n            throw new Error(\"Hardfork \".concat(hardfork, \" not set as supported in supportedHardforks\"));\n        }\n        var existing = false;\n        try {\n            for (var HARDFORK_CHANGES_1 = __values(hardforks_1.hardforks), HARDFORK_CHANGES_1_1 = HARDFORK_CHANGES_1.next(); !HARDFORK_CHANGES_1_1.done; HARDFORK_CHANGES_1_1 = HARDFORK_CHANGES_1.next()) {\n                var hfChanges = HARDFORK_CHANGES_1_1.value;\n                if (hfChanges[0] === hardfork) {\n                    if (this._hardfork !== hardfork) {\n                        this._hardfork = hardfork;\n                        this.emit('hardforkChanged', hardfork);\n                    }\n                    existing = true;\n                }\n            }\n        }\n        catch (e_3_1) { e_3 = { error: e_3_1 }; }\n        finally {\n            try {\n                if (HARDFORK_CHANGES_1_1 && !HARDFORK_CHANGES_1_1.done && (_a = HARDFORK_CHANGES_1.return)) _a.call(HARDFORK_CHANGES_1);\n            }\n            finally { if (e_3) throw e_3.error; }\n        }\n        if (!existing) {\n            throw new Error(\"Hardfork with name \".concat(hardfork, \" not supported\"));\n        }\n    };\n    /**\n     * Returns the hardfork based on the block number or an optional\n     * total difficulty (Merge HF) provided.\n     *\n     * An optional TD takes precedence in case the corresponding HF block\n     * is set to `null` or otherwise needs to match (if not an error\n     * will be thrown).\n     *\n     * @param blockNumber\n     * @param td\n     * @returns The name of the HF\n     */\n    Common.prototype.getHardforkByBlockNumber = function (blockNumber, td) {\n        var e_4, _a;\n        blockNumber = (0, ethereumjs_util_1.toType)(blockNumber, ethereumjs_util_1.TypeOutput.BN);\n        td = (0, ethereumjs_util_1.toType)(td, ethereumjs_util_1.TypeOutput.BN);\n        var hardfork = Hardfork.Chainstart;\n        var minTdHF;\n        var maxTdHF;\n        var previousHF;\n        try {\n            for (var _b = __values(this.hardforks()), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var hf = _c.value;\n                // Skip comparison for not applied HFs\n                if (hf.block === null) {\n                    if (td !== undefined && td !== null && hf.td !== undefined && hf.td !== null) {\n                        if (td.gte(new ethereumjs_util_1.BN(hf.td))) {\n                            return hf.name;\n                        }\n                    }\n                    continue;\n                }\n                if (blockNumber.gte(new ethereumjs_util_1.BN(hf.block))) {\n                    hardfork = hf.name;\n                }\n                if (td && hf.td) {\n                    if (td.gte(new ethereumjs_util_1.BN(hf.td))) {\n                        minTdHF = hf.name;\n                    }\n                    else {\n                        maxTdHF = previousHF;\n                    }\n                }\n                previousHF = hf.name;\n            }\n        }\n        catch (e_4_1) { e_4 = { error: e_4_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_4) throw e_4.error; }\n        }\n        if (td) {\n            var msgAdd = \"block number: \".concat(blockNumber, \" (-> \").concat(hardfork, \"), \");\n            if (minTdHF) {\n                if (!this.hardforkGteHardfork(hardfork, minTdHF)) {\n                    var msg = 'HF determined by block number is lower than the minimum total difficulty HF';\n                    msgAdd += \"total difficulty: \".concat(td, \" (-> \").concat(minTdHF, \")\");\n                    throw new Error(\"\".concat(msg, \": \").concat(msgAdd));\n                }\n            }\n            if (maxTdHF) {\n                if (!this.hardforkGteHardfork(maxTdHF, hardfork)) {\n                    var msg = 'Maximum HF determined by total difficulty is lower than the block number HF';\n                    msgAdd += \"total difficulty: \".concat(td, \" (-> \").concat(maxTdHF, \")\");\n                    throw new Error(\"\".concat(msg, \": \").concat(msgAdd));\n                }\n            }\n        }\n        return hardfork;\n    };\n    /**\n     * Sets a new hardfork based on the block number or an optional\n     * total difficulty (Merge HF) provided.\n     *\n     * An optional TD takes precedence in case the corresponding HF block\n     * is set to `null` or otherwise needs to match (if not an error\n     * will be thrown).\n     *\n     * @param blockNumber\n     * @param td\n     * @returns The name of the HF set\n     */\n    Common.prototype.setHardforkByBlockNumber = function (blockNumber, td) {\n        var hardfork = this.getHardforkByBlockNumber(blockNumber, td);\n        this.setHardfork(hardfork);\n        return hardfork;\n    };\n    /**\n     * Internal helper function to choose between hardfork set and hardfork provided as param\n     * @param hardfork Hardfork given to function as a parameter\n     * @returns Hardfork chosen to be used\n     */\n    Common.prototype._chooseHardfork = function (hardfork, onlySupported) {\n        if (onlySupported === void 0) { onlySupported = true; }\n        if (!hardfork) {\n            hardfork = this._hardfork;\n        }\n        else if (onlySupported && !this._isSupportedHardfork(hardfork)) {\n            throw new Error(\"Hardfork \".concat(hardfork, \" not set as supported in supportedHardforks\"));\n        }\n        return hardfork;\n    };\n    /**\n     * Internal helper function, returns the params for the given hardfork for the chain set\n     * @param hardfork Hardfork name\n     * @returns Dictionary with hardfork params\n     */\n    Common.prototype._getHardfork = function (hardfork) {\n        var e_5, _a;\n        var hfs = this.hardforks();\n        try {\n            for (var hfs_1 = __values(hfs), hfs_1_1 = hfs_1.next(); !hfs_1_1.done; hfs_1_1 = hfs_1.next()) {\n                var hf = hfs_1_1.value;\n                if (hf['name'] === hardfork)\n                    return hf;\n            }\n        }\n        catch (e_5_1) { e_5 = { error: e_5_1 }; }\n        finally {\n            try {\n                if (hfs_1_1 && !hfs_1_1.done && (_a = hfs_1.return)) _a.call(hfs_1);\n            }\n            finally { if (e_5) throw e_5.error; }\n        }\n        throw new Error(\"Hardfork \".concat(hardfork, \" not defined for chain \").concat(this.chainName()));\n    };\n    /**\n     * Internal helper function to check if a hardfork is set to be supported by the library\n     * @param hardfork Hardfork name\n     * @returns True if hardfork is supported\n     */\n    Common.prototype._isSupportedHardfork = function (hardfork) {\n        var e_6, _a;\n        if (this._supportedHardforks.length > 0) {\n            try {\n                for (var _b = __values(this._supportedHardforks), _c = _b.next(); !_c.done; _c = _b.next()) {\n                    var supportedHf = _c.value;\n                    if (hardfork === supportedHf)\n                        return true;\n                }\n            }\n            catch (e_6_1) { e_6 = { error: e_6_1 }; }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                }\n                finally { if (e_6) throw e_6.error; }\n            }\n        }\n        else {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * Sets the active EIPs\n     * @param eips\n     */\n    Common.prototype.setEIPs = function (eips) {\n        var e_7, _a;\n        var _this = this;\n        if (eips === void 0) { eips = []; }\n        var _loop_1 = function (eip) {\n            if (!(eip in eips_1.EIPs)) {\n                throw new Error(\"\".concat(eip, \" not supported\"));\n            }\n            var minHF = this_1.gteHardfork(eips_1.EIPs[eip]['minimumHardfork']);\n            if (!minHF) {\n                throw new Error(\"\".concat(eip, \" cannot be activated on hardfork \").concat(this_1.hardfork(), \", minimumHardfork: \").concat(minHF));\n            }\n            if (eips_1.EIPs[eip].requiredEIPs) {\n                ;\n                eips_1.EIPs[eip].requiredEIPs.forEach(function (elem) {\n                    if (!(eips.includes(elem) || _this.isActivatedEIP(elem))) {\n                        throw new Error(\"\".concat(eip, \" requires EIP \").concat(elem, \", but is not included in the EIP list\"));\n                    }\n                });\n            }\n        };\n        var this_1 = this;\n        try {\n            for (var eips_2 = __values(eips), eips_2_1 = eips_2.next(); !eips_2_1.done; eips_2_1 = eips_2.next()) {\n                var eip = eips_2_1.value;\n                _loop_1(eip);\n            }\n        }\n        catch (e_7_1) { e_7 = { error: e_7_1 }; }\n        finally {\n            try {\n                if (eips_2_1 && !eips_2_1.done && (_a = eips_2.return)) _a.call(eips_2);\n            }\n            finally { if (e_7) throw e_7.error; }\n        }\n        this._eips = eips;\n    };\n    /**\n     * Returns a parameter for the current chain setup\n     *\n     * If the parameter is present in an EIP, the EIP always takes precendence.\n     * Otherwise the parameter if taken from the latest applied HF with\n     * a change on the respective parameter.\n     *\n     * @param topic Parameter topic ('gasConfig', 'gasPrices', 'vm', 'pow')\n     * @param name Parameter name (e.g. 'minGasLimit' for 'gasConfig' topic)\n     * @returns The value requested or `null` if not found\n     */\n    Common.prototype.param = function (topic, name) {\n        var e_8, _a;\n        // TODO: consider the case that different active EIPs\n        // can change the same parameter\n        var value = null;\n        try {\n            for (var _b = __values(this._eips), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var eip = _c.value;\n                value = this.paramByEIP(topic, name, eip);\n                if (value !== null) {\n                    return value;\n                }\n            }\n        }\n        catch (e_8_1) { e_8 = { error: e_8_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_8) throw e_8.error; }\n        }\n        return this.paramByHardfork(topic, name, this._hardfork);\n    };\n    /**\n     * Returns the parameter corresponding to a hardfork\n     * @param topic Parameter topic ('gasConfig', 'gasPrices', 'vm', 'pow')\n     * @param name Parameter name (e.g. 'minGasLimit' for 'gasConfig' topic)\n     * @param hardfork Hardfork name\n     * @returns The value requested or `null` if not found\n     */\n    Common.prototype.paramByHardfork = function (topic, name, hardfork) {\n        var e_9, _a, e_10, _b;\n        hardfork = this._chooseHardfork(hardfork);\n        var value = null;\n        try {\n            for (var HARDFORK_CHANGES_2 = __values(hardforks_1.hardforks), HARDFORK_CHANGES_2_1 = HARDFORK_CHANGES_2.next(); !HARDFORK_CHANGES_2_1.done; HARDFORK_CHANGES_2_1 = HARDFORK_CHANGES_2.next()) {\n                var hfChanges = HARDFORK_CHANGES_2_1.value;\n                // EIP-referencing HF file (e.g. berlin.json)\n                if ('eips' in hfChanges[1]) {\n                    var hfEIPs = hfChanges[1]['eips'];\n                    try {\n                        for (var hfEIPs_1 = (e_10 = void 0, __values(hfEIPs)), hfEIPs_1_1 = hfEIPs_1.next(); !hfEIPs_1_1.done; hfEIPs_1_1 = hfEIPs_1.next()) {\n                            var eip = hfEIPs_1_1.value;\n                            var valueEIP = this.paramByEIP(topic, name, eip);\n                            value = valueEIP !== null ? valueEIP : value;\n                        }\n                    }\n                    catch (e_10_1) { e_10 = { error: e_10_1 }; }\n                    finally {\n                        try {\n                            if (hfEIPs_1_1 && !hfEIPs_1_1.done && (_b = hfEIPs_1.return)) _b.call(hfEIPs_1);\n                        }\n                        finally { if (e_10) throw e_10.error; }\n                    }\n                    // Paramater-inlining HF file (e.g. istanbul.json)\n                }\n                else {\n                    if (!hfChanges[1][topic]) {\n                        throw new Error(\"Topic \".concat(topic, \" not defined\"));\n                    }\n                    if (hfChanges[1][topic][name] !== undefined) {\n                        value = hfChanges[1][topic][name].v;\n                    }\n                }\n                if (hfChanges[0] === hardfork)\n                    break;\n            }\n        }\n        catch (e_9_1) { e_9 = { error: e_9_1 }; }\n        finally {\n            try {\n                if (HARDFORK_CHANGES_2_1 && !HARDFORK_CHANGES_2_1.done && (_a = HARDFORK_CHANGES_2.return)) _a.call(HARDFORK_CHANGES_2);\n            }\n            finally { if (e_9) throw e_9.error; }\n        }\n        return value;\n    };\n    /**\n     * Returns a parameter corresponding to an EIP\n     * @param topic Parameter topic ('gasConfig', 'gasPrices', 'vm', 'pow')\n     * @param name Parameter name (e.g. 'minGasLimit' for 'gasConfig' topic)\n     * @param eip Number of the EIP\n     * @returns The value requested or `null` if not found\n     */\n    Common.prototype.paramByEIP = function (topic, name, eip) {\n        if (!(eip in eips_1.EIPs)) {\n            throw new Error(\"\".concat(eip, \" not supported\"));\n        }\n        var eipParams = eips_1.EIPs[eip];\n        if (!(topic in eipParams)) {\n            throw new Error(\"Topic \".concat(topic, \" not defined\"));\n        }\n        if (eipParams[topic][name] === undefined) {\n            return null;\n        }\n        var value = eipParams[topic][name].v;\n        return value;\n    };\n    /**\n     * Returns a parameter for the hardfork active on block number\n     * @param topic Parameter topic\n     * @param name Parameter name\n     * @param blockNumber Block number\n     */\n    Common.prototype.paramByBlock = function (topic, name, blockNumber) {\n        var activeHfs = this.activeHardforks(blockNumber);\n        var hardfork = activeHfs[activeHfs.length - 1]['name'];\n        return this.paramByHardfork(topic, name, hardfork);\n    };\n    /**\n     * Checks if an EIP is activated by either being included in the EIPs\n     * manually passed in with the {@link CommonOpts.eips} or in a\n     * hardfork currently being active\n     *\n     * Note: this method only works for EIPs being supported\n     * by the {@link CommonOpts.eips} constructor option\n     * @param eip\n     */\n    Common.prototype.isActivatedEIP = function (eip) {\n        var e_11, _a;\n        if (this.eips().includes(eip)) {\n            return true;\n        }\n        try {\n            for (var HARDFORK_CHANGES_3 = __values(hardforks_1.hardforks), HARDFORK_CHANGES_3_1 = HARDFORK_CHANGES_3.next(); !HARDFORK_CHANGES_3_1.done; HARDFORK_CHANGES_3_1 = HARDFORK_CHANGES_3.next()) {\n                var hfChanges = HARDFORK_CHANGES_3_1.value;\n                var hf = hfChanges[1];\n                if (this.gteHardfork(hf['name']) && 'eips' in hf) {\n                    if (hf['eips'].includes(eip)) {\n                        return true;\n                    }\n                }\n            }\n        }\n        catch (e_11_1) { e_11 = { error: e_11_1 }; }\n        finally {\n            try {\n                if (HARDFORK_CHANGES_3_1 && !HARDFORK_CHANGES_3_1.done && (_a = HARDFORK_CHANGES_3.return)) _a.call(HARDFORK_CHANGES_3);\n            }\n            finally { if (e_11) throw e_11.error; }\n        }\n        return false;\n    };\n    /**\n     * Checks if set or provided hardfork is active on block number\n     * @param hardfork Hardfork name or null (for HF set)\n     * @param blockNumber\n     * @param opts Hardfork options (onlyActive unused)\n     * @returns True if HF is active on block number\n     */\n    Common.prototype.hardforkIsActiveOnBlock = function (hardfork, blockNumber, opts) {\n        var _a;\n        if (opts === void 0) { opts = {}; }\n        blockNumber = (0, ethereumjs_util_1.toType)(blockNumber, ethereumjs_util_1.TypeOutput.BN);\n        var onlySupported = (_a = opts.onlySupported) !== null && _a !== void 0 ? _a : false;\n        hardfork = this._chooseHardfork(hardfork, onlySupported);\n        var hfBlock = this.hardforkBlockBN(hardfork);\n        if (hfBlock && blockNumber.gte(hfBlock)) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * Alias to hardforkIsActiveOnBlock when hardfork is set\n     * @param blockNumber\n     * @param opts Hardfork options (onlyActive unused)\n     * @returns True if HF is active on block number\n     */\n    Common.prototype.activeOnBlock = function (blockNumber, opts) {\n        return this.hardforkIsActiveOnBlock(null, blockNumber, opts);\n    };\n    /**\n     * Sequence based check if given or set HF1 is greater than or equal HF2\n     * @param hardfork1 Hardfork name or null (if set)\n     * @param hardfork2 Hardfork name\n     * @param opts Hardfork options\n     * @returns True if HF1 gte HF2\n     */\n    Common.prototype.hardforkGteHardfork = function (hardfork1, hardfork2, opts) {\n        var e_12, _a;\n        if (opts === void 0) { opts = {}; }\n        var onlyActive = opts.onlyActive === undefined ? false : opts.onlyActive;\n        hardfork1 = this._chooseHardfork(hardfork1, opts.onlySupported);\n        var hardforks;\n        if (onlyActive) {\n            hardforks = this.activeHardforks(null, opts);\n        }\n        else {\n            hardforks = this.hardforks();\n        }\n        var posHf1 = -1, posHf2 = -1;\n        var index = 0;\n        try {\n            for (var hardforks_2 = __values(hardforks), hardforks_2_1 = hardforks_2.next(); !hardforks_2_1.done; hardforks_2_1 = hardforks_2.next()) {\n                var hf = hardforks_2_1.value;\n                if (hf['name'] === hardfork1)\n                    posHf1 = index;\n                if (hf['name'] === hardfork2)\n                    posHf2 = index;\n                index += 1;\n            }\n        }\n        catch (e_12_1) { e_12 = { error: e_12_1 }; }\n        finally {\n            try {\n                if (hardforks_2_1 && !hardforks_2_1.done && (_a = hardforks_2.return)) _a.call(hardforks_2);\n            }\n            finally { if (e_12) throw e_12.error; }\n        }\n        return posHf1 >= posHf2 && posHf2 !== -1;\n    };\n    /**\n     * Alias to hardforkGteHardfork when hardfork is set\n     * @param hardfork Hardfork name\n     * @param opts Hardfork options\n     * @returns True if hardfork set is greater than hardfork provided\n     */\n    Common.prototype.gteHardfork = function (hardfork, opts) {\n        return this.hardforkGteHardfork(null, hardfork, opts);\n    };\n    /**\n     * Checks if given or set hardfork is active on the chain\n     * @param hardfork Hardfork name, optional if HF set\n     * @param opts Hardfork options (onlyActive unused)\n     * @returns True if hardfork is active on the chain\n     */\n    Common.prototype.hardforkIsActiveOnChain = function (hardfork, opts) {\n        var e_13, _a;\n        var _b;\n        if (opts === void 0) { opts = {}; }\n        var onlySupported = (_b = opts.onlySupported) !== null && _b !== void 0 ? _b : false;\n        hardfork = this._chooseHardfork(hardfork, onlySupported);\n        try {\n            for (var _c = __values(this.hardforks()), _d = _c.next(); !_d.done; _d = _c.next()) {\n                var hf = _d.value;\n                if (hf['name'] === hardfork && hf['block'] !== null)\n                    return true;\n            }\n        }\n        catch (e_13_1) { e_13 = { error: e_13_1 }; }\n        finally {\n            try {\n                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n            }\n            finally { if (e_13) throw e_13.error; }\n        }\n        return false;\n    };\n    /**\n     * Returns the active hardfork switches for the current chain\n     * @param blockNumber up to block if provided, otherwise for the whole chain\n     * @param opts Hardfork options (onlyActive unused)\n     * @return Array with hardfork arrays\n     */\n    Common.prototype.activeHardforks = function (blockNumber, opts) {\n        var e_14, _a;\n        if (opts === void 0) { opts = {}; }\n        var activeHardforks = [];\n        var hfs = this.hardforks();\n        try {\n            for (var hfs_2 = __values(hfs), hfs_2_1 = hfs_2.next(); !hfs_2_1.done; hfs_2_1 = hfs_2.next()) {\n                var hf = hfs_2_1.value;\n                if (hf['block'] === null)\n                    continue;\n                if (blockNumber !== undefined && blockNumber !== null && blockNumber < hf['block'])\n                    break;\n                if (opts.onlySupported && !this._isSupportedHardfork(hf['name']))\n                    continue;\n                activeHardforks.push(hf);\n            }\n        }\n        catch (e_14_1) { e_14 = { error: e_14_1 }; }\n        finally {\n            try {\n                if (hfs_2_1 && !hfs_2_1.done && (_a = hfs_2.return)) _a.call(hfs_2);\n            }\n            finally { if (e_14) throw e_14.error; }\n        }\n        return activeHardforks;\n    };\n    /**\n     * Returns the latest active hardfork name for chain or block or throws if unavailable\n     * @param blockNumber up to block if provided, otherwise for the whole chain\n     * @param opts Hardfork options (onlyActive unused)\n     * @return Hardfork name\n     */\n    Common.prototype.activeHardfork = function (blockNumber, opts) {\n        if (opts === void 0) { opts = {}; }\n        var activeHardforks = this.activeHardforks(blockNumber, opts);\n        if (activeHardforks.length > 0) {\n            return activeHardforks[activeHardforks.length - 1]['name'];\n        }\n        else {\n            throw new Error(\"No (supported) active hardfork found\");\n        }\n    };\n    /**\n     * Returns the hardfork change block for hardfork provided or set\n     * @param hardfork Hardfork name, optional if HF set\n     * @returns Block number or null if unscheduled\n     * @deprecated Please use {@link Common.hardforkBlockBN} for large number support\n     */\n    Common.prototype.hardforkBlock = function (hardfork) {\n        var block = this.hardforkBlockBN(hardfork);\n        return (0, ethereumjs_util_1.toType)(block, ethereumjs_util_1.TypeOutput.Number);\n    };\n    /**\n     * Returns the hardfork change block for hardfork provided or set\n     * @param hardfork Hardfork name, optional if HF set\n     * @returns Block number or null if unscheduled\n     */\n    Common.prototype.hardforkBlockBN = function (hardfork) {\n        hardfork = this._chooseHardfork(hardfork, false);\n        var block = this._getHardfork(hardfork)['block'];\n        if (block === undefined || block === null) {\n            return null;\n        }\n        return new ethereumjs_util_1.BN(block);\n    };\n    /**\n     * Returns the hardfork change total difficulty (Merge HF) for hardfork provided or set\n     * @param hardfork Hardfork name, optional if HF set\n     * @returns Total difficulty or null if no set\n     */\n    Common.prototype.hardforkTD = function (hardfork) {\n        hardfork = this._chooseHardfork(hardfork, false);\n        var td = this._getHardfork(hardfork)['td'];\n        if (td === undefined || td === null) {\n            return null;\n        }\n        return new ethereumjs_util_1.BN(td);\n    };\n    /**\n     * True if block number provided is the hardfork (given or set) change block\n     * @param blockNumber Number of the block to check\n     * @param hardfork Hardfork name, optional if HF set\n     * @returns True if blockNumber is HF block\n     */\n    Common.prototype.isHardforkBlock = function (blockNumber, hardfork) {\n        blockNumber = (0, ethereumjs_util_1.toType)(blockNumber, ethereumjs_util_1.TypeOutput.BN);\n        hardfork = this._chooseHardfork(hardfork, false);\n        var block = this.hardforkBlockBN(hardfork);\n        return block ? block.eq(blockNumber) : false;\n    };\n    /**\n     * Returns the change block for the next hardfork after the hardfork provided or set\n     * @param hardfork Hardfork name, optional if HF set\n     * @returns Block number or null if not available\n     * @deprecated Please use {@link Common.nextHardforkBlockBN} for large number support\n     */\n    Common.prototype.nextHardforkBlock = function (hardfork) {\n        var block = this.nextHardforkBlockBN(hardfork);\n        return (0, ethereumjs_util_1.toType)(block, ethereumjs_util_1.TypeOutput.Number);\n    };\n    /**\n     * Returns the change block for the next hardfork after the hardfork provided or set\n     * @param hardfork Hardfork name, optional if HF set\n     * @returns Block number or null if not available\n     */\n    Common.prototype.nextHardforkBlockBN = function (hardfork) {\n        hardfork = this._chooseHardfork(hardfork, false);\n        var hfBlock = this.hardforkBlockBN(hardfork);\n        if (hfBlock === null) {\n            return null;\n        }\n        // Next fork block number or null if none available\n        // Logic: if accumulator is still null and on the first occurrence of\n        // a block greater than the current hfBlock set the accumulator,\n        // pass on the accumulator as the final result from this time on\n        var nextHfBlock = this.hardforks().reduce(function (acc, hf) {\n            var block = new ethereumjs_util_1.BN(hf.block);\n            return block.gt(hfBlock) && acc === null ? block : acc;\n        }, null);\n        return nextHfBlock;\n    };\n    /**\n     * True if block number provided is the hardfork change block following the hardfork given or set\n     * @param blockNumber Number of the block to check\n     * @param hardfork Hardfork name, optional if HF set\n     * @returns True if blockNumber is HF block\n     */\n    Common.prototype.isNextHardforkBlock = function (blockNumber, hardfork) {\n        blockNumber = (0, ethereumjs_util_1.toType)(blockNumber, ethereumjs_util_1.TypeOutput.BN);\n        hardfork = this._chooseHardfork(hardfork, false);\n        var nextHardforkBlock = this.nextHardforkBlockBN(hardfork);\n        return nextHardforkBlock === null ? false : nextHardforkBlock.eq(blockNumber);\n    };\n    /**\n     * Internal helper function to calculate a fork hash\n     * @param hardfork Hardfork name\n     * @returns Fork hash as hex string\n     */\n    Common.prototype._calcForkHash = function (hardfork) {\n        var e_15, _a;\n        var genesis = Buffer.from(this.genesis().hash.substr(2), 'hex');\n        var hfBuffer = Buffer.alloc(0);\n        var prevBlock = 0;\n        try {\n            for (var _b = __values(this.hardforks()), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var hf = _c.value;\n                var block = hf.block;\n                // Skip for chainstart (0), not applied HFs (null) and\n                // when already applied on same block number HFs\n                if (block !== 0 && block !== null && block !== prevBlock) {\n                    var hfBlockBuffer = Buffer.from(block.toString(16).padStart(16, '0'), 'hex');\n                    hfBuffer = Buffer.concat([hfBuffer, hfBlockBuffer]);\n                }\n                if (hf.name === hardfork)\n                    break;\n                if (block !== null) {\n                    prevBlock = block;\n                }\n            }\n        }\n        catch (e_15_1) { e_15 = { error: e_15_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_15) throw e_15.error; }\n        }\n        var inputBuffer = Buffer.concat([genesis, hfBuffer]);\n        // CRC32 delivers result as signed (negative) 32-bit integer,\n        // convert to hex string\n        var forkhash = (0, ethereumjs_util_1.intToBuffer)((0, crc_32_1.buf)(inputBuffer) >>> 0).toString('hex');\n        return \"0x\".concat(forkhash);\n    };\n    /**\n     * Returns an eth/64 compliant fork hash (EIP-2124)\n     * @param hardfork Hardfork name, optional if HF set\n     */\n    Common.prototype.forkHash = function (hardfork) {\n        hardfork = this._chooseHardfork(hardfork, false);\n        var data = this._getHardfork(hardfork);\n        if (data['block'] === null && data['td'] === undefined) {\n            var msg = 'No fork hash calculation possible for future hardfork';\n            throw new Error(msg);\n        }\n        if (data['forkHash'] !== undefined) {\n            return data['forkHash'];\n        }\n        return this._calcForkHash(hardfork);\n    };\n    /**\n     *\n     * @param forkHash Fork hash as a hex string\n     * @returns Array with hardfork data (name, block, forkHash)\n     */\n    Common.prototype.hardforkForForkHash = function (forkHash) {\n        var resArray = this.hardforks().filter(function (hf) {\n            return hf.forkHash === forkHash;\n        });\n        return resArray.length >= 1 ? resArray[resArray.length - 1] : null;\n    };\n    /**\n     * Returns the Genesis parameters of the current chain\n     * @returns Genesis dictionary\n     */\n    Common.prototype.genesis = function () {\n        return this._chainParams['genesis'];\n    };\n    /**\n     * Returns the Genesis state of the current chain,\n     * all values are provided as hex-prefixed strings.\n     */\n    Common.prototype.genesisState = function () {\n        var e_16, _a;\n        // Use require statements here in favor of import statements\n        // to load json files on demand\n        // (high memory usage by large mainnet.json genesis state file)\n        switch (this.chainName()) {\n            case 'mainnet':\n                return require('./genesisStates/mainnet.json');\n            case 'ropsten':\n                return require('./genesisStates/ropsten.json');\n            case 'rinkeby':\n                return require('./genesisStates/rinkeby.json');\n            case 'kovan':\n                return require('./genesisStates/kovan.json');\n            case 'goerli':\n                return require('./genesisStates/goerli.json');\n            case 'sepolia':\n                return require('./genesisStates/sepolia.json');\n        }\n        // Custom chains with genesis state provided\n        if (this._customChains &&\n            this._customChains.length > 0 &&\n            Array.isArray(this._customChains[0])) {\n            try {\n                for (var _b = __values(this._customChains), _c = _b.next(); !_c.done; _c = _b.next()) {\n                    var chainArrayWithGenesis = _c.value;\n                    if (chainArrayWithGenesis[0].name === this.chainName()) {\n                        return chainArrayWithGenesis[1];\n                    }\n                }\n            }\n            catch (e_16_1) { e_16 = { error: e_16_1 }; }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                }\n                finally { if (e_16) throw e_16.error; }\n            }\n        }\n        return {};\n    };\n    /**\n     * Returns the hardforks for current chain\n     * @returns {Array} Array with arrays of hardforks\n     */\n    Common.prototype.hardforks = function () {\n        return this._chainParams['hardforks'];\n    };\n    /**\n     * Returns bootstrap nodes for the current chain\n     * @returns {Dictionary} Dict with bootstrap nodes\n     */\n    Common.prototype.bootstrapNodes = function () {\n        return this._chainParams['bootstrapNodes'];\n    };\n    /**\n     * Returns DNS networks for the current chain\n     * @returns {String[]} Array of DNS ENR urls\n     */\n    Common.prototype.dnsNetworks = function () {\n        return this._chainParams['dnsNetworks'];\n    };\n    /**\n     * Returns the hardfork set\n     * @returns Hardfork name\n     */\n    Common.prototype.hardfork = function () {\n        return this._hardfork;\n    };\n    /**\n     * Returns the Id of current chain\n     * @returns chain Id\n     * @deprecated Please use {@link Common.chainIdBN} for large number support\n     */\n    Common.prototype.chainId = function () {\n        return (0, ethereumjs_util_1.toType)(this.chainIdBN(), ethereumjs_util_1.TypeOutput.Number);\n    };\n    /**\n     * Returns the Id of current chain\n     * @returns chain Id\n     */\n    Common.prototype.chainIdBN = function () {\n        return new ethereumjs_util_1.BN(this._chainParams['chainId']);\n    };\n    /**\n     * Returns the name of current chain\n     * @returns chain name (lower case)\n     */\n    Common.prototype.chainName = function () {\n        return this._chainParams['name'];\n    };\n    /**\n     * Returns the Id of current network\n     * @returns network Id\n     * @deprecated Please use {@link Common.networkIdBN} for large number support\n     */\n    Common.prototype.networkId = function () {\n        return (0, ethereumjs_util_1.toType)(this.networkIdBN(), ethereumjs_util_1.TypeOutput.Number);\n    };\n    /**\n     * Returns the Id of current network\n     * @returns network Id\n     */\n    Common.prototype.networkIdBN = function () {\n        return new ethereumjs_util_1.BN(this._chainParams['networkId']);\n    };\n    /**\n     * Returns the active EIPs\n     * @returns List of EIPs\n     */\n    Common.prototype.eips = function () {\n        return this._eips;\n    };\n    /**\n     * Returns the consensus type of the network\n     * Possible values: \"pow\"|\"poa\"|\"pos\"\n     *\n     * Note: This value can update along a hardfork.\n     */\n    Common.prototype.consensusType = function () {\n        var e_17, _a;\n        var hardfork = this.hardfork();\n        var value;\n        try {\n            for (var HARDFORK_CHANGES_4 = __values(hardforks_1.hardforks), HARDFORK_CHANGES_4_1 = HARDFORK_CHANGES_4.next(); !HARDFORK_CHANGES_4_1.done; HARDFORK_CHANGES_4_1 = HARDFORK_CHANGES_4.next()) {\n                var hfChanges = HARDFORK_CHANGES_4_1.value;\n                if ('consensus' in hfChanges[1]) {\n                    value = hfChanges[1]['consensus']['type'];\n                }\n                if (hfChanges[0] === hardfork)\n                    break;\n            }\n        }\n        catch (e_17_1) { e_17 = { error: e_17_1 }; }\n        finally {\n            try {\n                if (HARDFORK_CHANGES_4_1 && !HARDFORK_CHANGES_4_1.done && (_a = HARDFORK_CHANGES_4.return)) _a.call(HARDFORK_CHANGES_4);\n            }\n            finally { if (e_17) throw e_17.error; }\n        }\n        if (value) {\n            return value;\n        }\n        return this._chainParams['consensus']['type'];\n    };\n    /**\n     * Returns the concrete consensus implementation\n     * algorithm or protocol for the network\n     * e.g. \"ethash\" for \"pow\" consensus type,\n     * \"clique\" for \"poa\" consensus type or\n     * \"casper\" for \"pos\" consensus type.\n     *\n     * Note: This value can update along a hardfork.\n     */\n    Common.prototype.consensusAlgorithm = function () {\n        var e_18, _a;\n        var hardfork = this.hardfork();\n        var value;\n        try {\n            for (var HARDFORK_CHANGES_5 = __values(hardforks_1.hardforks), HARDFORK_CHANGES_5_1 = HARDFORK_CHANGES_5.next(); !HARDFORK_CHANGES_5_1.done; HARDFORK_CHANGES_5_1 = HARDFORK_CHANGES_5.next()) {\n                var hfChanges = HARDFORK_CHANGES_5_1.value;\n                if ('consensus' in hfChanges[1]) {\n                    value = hfChanges[1]['consensus']['algorithm'];\n                }\n                if (hfChanges[0] === hardfork)\n                    break;\n            }\n        }\n        catch (e_18_1) { e_18 = { error: e_18_1 }; }\n        finally {\n            try {\n                if (HARDFORK_CHANGES_5_1 && !HARDFORK_CHANGES_5_1.done && (_a = HARDFORK_CHANGES_5.return)) _a.call(HARDFORK_CHANGES_5);\n            }\n            finally { if (e_18) throw e_18.error; }\n        }\n        if (value) {\n            return value;\n        }\n        return this._chainParams['consensus']['algorithm'];\n    };\n    /**\n     * Returns a dictionary with consensus configuration\n     * parameters based on the consensus algorithm\n     *\n     * Expected returns (parameters must be present in\n     * the respective chain json files):\n     *\n     * ethash: -\n     * clique: period, epoch\n     * aura: -\n     * casper: -\n     *\n     * Note: This value can update along a hardfork.\n     */\n    Common.prototype.consensusConfig = function () {\n        var e_19, _a;\n        var hardfork = this.hardfork();\n        var value;\n        try {\n            for (var HARDFORK_CHANGES_6 = __values(hardforks_1.hardforks), HARDFORK_CHANGES_6_1 = HARDFORK_CHANGES_6.next(); !HARDFORK_CHANGES_6_1.done; HARDFORK_CHANGES_6_1 = HARDFORK_CHANGES_6.next()) {\n                var hfChanges = HARDFORK_CHANGES_6_1.value;\n                if ('consensus' in hfChanges[1]) {\n                    // The config parameter is named after the respective consensus algorithm\n                    value = hfChanges[1]['consensus'][hfChanges[1]['consensus']['algorithm']];\n                }\n                if (hfChanges[0] === hardfork)\n                    break;\n            }\n        }\n        catch (e_19_1) { e_19 = { error: e_19_1 }; }\n        finally {\n            try {\n                if (HARDFORK_CHANGES_6_1 && !HARDFORK_CHANGES_6_1.done && (_a = HARDFORK_CHANGES_6.return)) _a.call(HARDFORK_CHANGES_6);\n            }\n            finally { if (e_19) throw e_19.error; }\n        }\n        if (value) {\n            return value;\n        }\n        var consensusAlgorithm = this.consensusAlgorithm();\n        return this._chainParams['consensus'][consensusAlgorithm];\n    };\n    /**\n     * Returns a deep copy of this {@link Common} instance.\n     */\n    Common.prototype.copy = function () {\n        var copy = Object.assign(Object.create(Object.getPrototypeOf(this)), this);\n        copy.removeAllListeners();\n        return copy;\n    };\n    return Common;\n}(events_1.EventEmitter));\nexports.default = Common;\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BaseTransaction = void 0;\nvar common_1 = __importStar(require(\"@ethereumjs/common\"));\nvar ethereumjs_util_1 = require(\"ethereumjs-util\");\nvar types_1 = require(\"./types\");\n/**\n * This base class will likely be subject to further\n * refactoring along the introduction of additional tx types\n * on the Ethereum network.\n *\n * It is therefore not recommended to use directly.\n */\nvar BaseTransaction = /** @class */ (function () {\n    function BaseTransaction(txData, opts) {\n        this.cache = {\n            hash: undefined,\n            dataFee: undefined,\n        };\n        /**\n         * List of tx type defining EIPs,\n         * e.g. 1559 (fee market) and 2930 (access lists)\n         * for FeeMarketEIP1559Transaction objects\n         */\n        this.activeCapabilities = [];\n        /**\n         * The default chain the tx falls back to if no Common\n         * is provided and if the chain can't be derived from\n         * a passed in chainId (only EIP-2718 typed txs) or\n         * EIP-155 signature (legacy txs).\n         *\n         * @hidden\n         */\n        this.DEFAULT_CHAIN = common_1.Chain.Mainnet;\n        /**\n         * The default HF if the tx type is active on that HF\n         * or the first greater HF where the tx is active.\n         *\n         * @hidden\n         */\n        this.DEFAULT_HARDFORK = common_1.Hardfork.Istanbul;\n        var nonce = txData.nonce, gasLimit = txData.gasLimit, to = txData.to, value = txData.value, data = txData.data, v = txData.v, r = txData.r, s = txData.s, type = txData.type;\n        this._type = new ethereumjs_util_1.BN((0, ethereumjs_util_1.toBuffer)(type)).toNumber();\n        this.txOptions = opts;\n        var toB = (0, ethereumjs_util_1.toBuffer)(to === '' ? '0x' : to);\n        var vB = (0, ethereumjs_util_1.toBuffer)(v === '' ? '0x' : v);\n        var rB = (0, ethereumjs_util_1.toBuffer)(r === '' ? '0x' : r);\n        var sB = (0, ethereumjs_util_1.toBuffer)(s === '' ? '0x' : s);\n        this.nonce = new ethereumjs_util_1.BN((0, ethereumjs_util_1.toBuffer)(nonce === '' ? '0x' : nonce));\n        this.gasLimit = new ethereumjs_util_1.BN((0, ethereumjs_util_1.toBuffer)(gasLimit === '' ? '0x' : gasLimit));\n        this.to = toB.length > 0 ? new ethereumjs_util_1.Address(toB) : undefined;\n        this.value = new ethereumjs_util_1.BN((0, ethereumjs_util_1.toBuffer)(value === '' ? '0x' : value));\n        this.data = (0, ethereumjs_util_1.toBuffer)(data === '' ? '0x' : data);\n        this.v = vB.length > 0 ? new ethereumjs_util_1.BN(vB) : undefined;\n        this.r = rB.length > 0 ? new ethereumjs_util_1.BN(rB) : undefined;\n        this.s = sB.length > 0 ? new ethereumjs_util_1.BN(sB) : undefined;\n        this._validateCannotExceedMaxInteger({ value: this.value, r: this.r, s: this.s });\n        // geth limits gasLimit to 2^64-1\n        this._validateCannotExceedMaxInteger({ gasLimit: this.gasLimit }, 64);\n        // EIP-2681 limits nonce to 2^64-1 (cannot equal 2^64-1)\n        this._validateCannotExceedMaxInteger({ nonce: this.nonce }, 64, true);\n    }\n    Object.defineProperty(BaseTransaction.prototype, \"transactionType\", {\n        /**\n         * Alias for {@link BaseTransaction.type}\n         *\n         * @deprecated Use `type` instead\n         */\n        get: function () {\n            return this.type;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BaseTransaction.prototype, \"type\", {\n        /**\n         * Returns the transaction type.\n         *\n         * Note: legacy txs will return tx type `0`.\n         */\n        get: function () {\n            return this._type;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Checks if a tx type defining capability is active\n     * on a tx, for example the EIP-1559 fee market mechanism\n     * or the EIP-2930 access list feature.\n     *\n     * Note that this is different from the tx type itself,\n     * so EIP-2930 access lists can very well be active\n     * on an EIP-1559 tx for example.\n     *\n     * This method can be useful for feature checks if the\n     * tx type is unknown (e.g. when instantiated with\n     * the tx factory).\n     *\n     * See `Capabilites` in the `types` module for a reference\n     * on all supported capabilities.\n     */\n    BaseTransaction.prototype.supports = function (capability) {\n        return this.activeCapabilities.includes(capability);\n    };\n    BaseTransaction.prototype.validate = function (stringError) {\n        if (stringError === void 0) { stringError = false; }\n        var errors = [];\n        if (this.getBaseFee().gt(this.gasLimit)) {\n            errors.push(\"gasLimit is too low. given \".concat(this.gasLimit, \", need at least \").concat(this.getBaseFee()));\n        }\n        if (this.isSigned() && !this.verifySignature()) {\n            errors.push('Invalid Signature');\n        }\n        return stringError ? errors : errors.length === 0;\n    };\n    /**\n     * The minimum amount of gas the tx must have (DataFee + TxFee + Creation Fee)\n     */\n    BaseTransaction.prototype.getBaseFee = function () {\n        var fee = this.getDataFee().addn(this.common.param('gasPrices', 'tx'));\n        if (this.common.gteHardfork('homestead') && this.toCreationAddress()) {\n            fee.iaddn(this.common.param('gasPrices', 'txCreation'));\n        }\n        return fee;\n    };\n    /**\n     * The amount of gas paid for the data in this tx\n     */\n    BaseTransaction.prototype.getDataFee = function () {\n        var txDataZero = this.common.param('gasPrices', 'txDataZero');\n        var txDataNonZero = this.common.param('gasPrices', 'txDataNonZero');\n        var cost = 0;\n        for (var i = 0; i < this.data.length; i++) {\n            this.data[i] === 0 ? (cost += txDataZero) : (cost += txDataNonZero);\n        }\n        cost = new ethereumjs_util_1.BN(cost);\n        if ((this.to === undefined || this.to === null) && this.common.isActivatedEIP(3860)) {\n            var dataLength = Math.ceil(this.data.length / 32);\n            var initCodeCost = new ethereumjs_util_1.BN(this.common.param('gasPrices', 'initCodeWordCost')).imuln(dataLength);\n            cost.iadd(initCodeCost);\n        }\n        return cost;\n    };\n    /**\n     * If the tx's `to` is to the creation address\n     */\n    BaseTransaction.prototype.toCreationAddress = function () {\n        return this.to === undefined || this.to.buf.length === 0;\n    };\n    BaseTransaction.prototype.isSigned = function () {\n        var _a = this, v = _a.v, r = _a.r, s = _a.s;\n        if (this.type === 0) {\n            if (!v || !r || !s) {\n                return false;\n            }\n            else {\n                return true;\n            }\n        }\n        else {\n            if (v === undefined || !r || !s) {\n                return false;\n            }\n            else {\n                return true;\n            }\n        }\n    };\n    /**\n     * Determines if the signature is valid\n     */\n    BaseTransaction.prototype.verifySignature = function () {\n        try {\n            // Main signature verification is done in `getSenderPublicKey()`\n            var publicKey = this.getSenderPublicKey();\n            return (0, ethereumjs_util_1.unpadBuffer)(publicKey).length !== 0;\n        }\n        catch (e) {\n            return false;\n        }\n    };\n    /**\n     * Returns the sender's address\n     */\n    BaseTransaction.prototype.getSenderAddress = function () {\n        return new ethereumjs_util_1.Address((0, ethereumjs_util_1.publicToAddress)(this.getSenderPublicKey()));\n    };\n    /**\n     * Signs a transaction.\n     *\n     * Note that the signed tx is returned as a new object,\n     * use as follows:\n     * ```javascript\n     * const signedTx = tx.sign(privateKey)\n     * ```\n     */\n    BaseTransaction.prototype.sign = function (privateKey) {\n        if (privateKey.length !== 32) {\n            var msg = this._errorMsg('Private key must be 32 bytes in length.');\n            throw new Error(msg);\n        }\n        // Hack for the constellation that we have got a legacy tx after spuriousDragon with a non-EIP155 conforming signature\n        // and want to recreate a signature (where EIP155 should be applied)\n        // Leaving this hack lets the legacy.spec.ts -> sign(), verifySignature() test fail\n        // 2021-06-23\n        var hackApplied = false;\n        if (this.type === 0 &&\n            this.common.gteHardfork('spuriousDragon') &&\n            !this.supports(types_1.Capability.EIP155ReplayProtection)) {\n            this.activeCapabilities.push(types_1.Capability.EIP155ReplayProtection);\n            hackApplied = true;\n        }\n        var msgHash = this.getMessageToSign(true);\n        var _a = (0, ethereumjs_util_1.ecsign)(msgHash, privateKey), v = _a.v, r = _a.r, s = _a.s;\n        var tx = this._processSignature(v, r, s);\n        // Hack part 2\n        if (hackApplied) {\n            var index = this.activeCapabilities.indexOf(types_1.Capability.EIP155ReplayProtection);\n            if (index > -1) {\n                this.activeCapabilities.splice(index, 1);\n            }\n        }\n        return tx;\n    };\n    /**\n     * Does chain ID checks on common and returns a common\n     * to be used on instantiation\n     * @hidden\n     *\n     * @param common - {@link Common} instance from tx options\n     * @param chainId - Chain ID from tx options (typed txs) or signature (legacy tx)\n     */\n    BaseTransaction.prototype._getCommon = function (common, chainId) {\n        var _a;\n        // Chain ID provided\n        if (chainId) {\n            var chainIdBN = new ethereumjs_util_1.BN((0, ethereumjs_util_1.toBuffer)(chainId));\n            if (common) {\n                if (!common.chainIdBN().eq(chainIdBN)) {\n                    var msg = this._errorMsg('The chain ID does not match the chain ID of Common');\n                    throw new Error(msg);\n                }\n                // Common provided, chain ID does match\n                // -> Return provided Common\n                return common.copy();\n            }\n            else {\n                if (common_1.default.isSupportedChainId(chainIdBN)) {\n                    // No Common, chain ID supported by Common\n                    // -> Instantiate Common with chain ID\n                    return new common_1.default({ chain: chainIdBN, hardfork: this.DEFAULT_HARDFORK });\n                }\n                else {\n                    // No Common, chain ID not supported by Common\n                    // -> Instantiate custom Common derived from DEFAULT_CHAIN\n                    return common_1.default.forCustomChain(this.DEFAULT_CHAIN, {\n                        name: 'custom-chain',\n                        networkId: chainIdBN,\n                        chainId: chainIdBN,\n                    }, this.DEFAULT_HARDFORK);\n                }\n            }\n        }\n        else {\n            // No chain ID provided\n            // -> return Common provided or create new default Common\n            return ((_a = common === null || common === void 0 ? void 0 : common.copy()) !== null && _a !== void 0 ? _a : new common_1.default({ chain: this.DEFAULT_CHAIN, hardfork: this.DEFAULT_HARDFORK }));\n        }\n    };\n    /**\n     * Validates that an object with BN values cannot exceed the specified bit limit.\n     * @param values Object containing string keys and BN values\n     * @param bits Number of bits to check (64 or 256)\n     * @param cannotEqual Pass true if the number also cannot equal one less the maximum value\n     */\n    BaseTransaction.prototype._validateCannotExceedMaxInteger = function (values, bits, cannotEqual) {\n        var e_1, _a;\n        if (bits === void 0) { bits = 256; }\n        if (cannotEqual === void 0) { cannotEqual = false; }\n        try {\n            for (var _b = __values(Object.entries(values)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var _d = __read(_c.value, 2), key = _d[0], value = _d[1];\n                switch (bits) {\n                    case 64:\n                        if (cannotEqual) {\n                            if (value === null || value === void 0 ? void 0 : value.gte(ethereumjs_util_1.MAX_UINT64)) {\n                                var msg = this._errorMsg(\"\".concat(key, \" cannot equal or exceed MAX_UINT64 (2^64-1), given \").concat(value));\n                                throw new Error(msg);\n                            }\n                        }\n                        else {\n                            if (value === null || value === void 0 ? void 0 : value.gt(ethereumjs_util_1.MAX_UINT64)) {\n                                var msg = this._errorMsg(\"\".concat(key, \" cannot exceed MAX_UINT64 (2^64-1), given \").concat(value));\n                                throw new Error(msg);\n                            }\n                        }\n                        break;\n                    case 256:\n                        if (cannotEqual) {\n                            if (value === null || value === void 0 ? void 0 : value.gte(ethereumjs_util_1.MAX_INTEGER)) {\n                                var msg = this._errorMsg(\"\".concat(key, \" cannot equal or exceed MAX_INTEGER (2^256-1), given \").concat(value));\n                                throw new Error(msg);\n                            }\n                        }\n                        else {\n                            if (value === null || value === void 0 ? void 0 : value.gt(ethereumjs_util_1.MAX_INTEGER)) {\n                                var msg = this._errorMsg(\"\".concat(key, \" cannot exceed MAX_INTEGER (2^256-1), given \").concat(value));\n                                throw new Error(msg);\n                            }\n                        }\n                        break;\n                    default: {\n                        var msg = this._errorMsg('unimplemented bits value');\n                        throw new Error(msg);\n                    }\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n    };\n    /**\n     * Returns the shared error postfix part for _error() method\n     * tx type implementations.\n     */\n    BaseTransaction.prototype._getSharedErrorPostfix = function () {\n        var hash = '';\n        try {\n            hash = this.isSigned() ? (0, ethereumjs_util_1.bufferToHex)(this.hash()) : 'not available (unsigned)';\n        }\n        catch (e) {\n            hash = 'error';\n        }\n        var isSigned = '';\n        try {\n            isSigned = this.isSigned().toString();\n        }\n        catch (e) {\n            hash = 'error';\n        }\n        var hf = '';\n        try {\n            hf = this.common.hardfork();\n        }\n        catch (e) {\n            hf = 'error';\n        }\n        var postfix = \"tx type=\".concat(this.type, \" hash=\").concat(hash, \" nonce=\").concat(this.nonce, \" value=\").concat(this.value, \" \");\n        postfix += \"signed=\".concat(isSigned, \" hf=\").concat(hf);\n        return postfix;\n    };\n    return BaseTransaction;\n}());\nexports.BaseTransaction = BaseTransaction;\n//# sourceMappingURL=baseTransaction.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ethereumjs_util_1 = require(\"ethereumjs-util\");\nvar baseTransaction_1 = require(\"./baseTransaction\");\nvar types_1 = require(\"./types\");\nvar util_1 = require(\"./util\");\nvar TRANSACTION_TYPE = 2;\nvar TRANSACTION_TYPE_BUFFER = Buffer.from(TRANSACTION_TYPE.toString(16).padStart(2, '0'), 'hex');\n/**\n * Typed transaction with a new gas fee market mechanism\n *\n * - TransactionType: 2\n * - EIP: [EIP-1559](https://eips.ethereum.org/EIPS/eip-1559)\n */\nvar FeeMarketEIP1559Transaction = /** @class */ (function (_super) {\n    __extends(FeeMarketEIP1559Transaction, _super);\n    /**\n     * This constructor takes the values, validates them, assigns them and freezes the object.\n     *\n     * It is not recommended to use this constructor directly. Instead use\n     * the static factory methods to assist in creating a Transaction object from\n     * varying data types.\n     */\n    function FeeMarketEIP1559Transaction(txData, opts) {\n        if (opts === void 0) { opts = {}; }\n        var _this = this;\n        var _a, _b;\n        _this = _super.call(this, __assign(__assign({}, txData), { type: TRANSACTION_TYPE }), opts) || this;\n        /**\n         * The default HF if the tx type is active on that HF\n         * or the first greater HF where the tx is active.\n         *\n         * @hidden\n         */\n        _this.DEFAULT_HARDFORK = 'london';\n        var chainId = txData.chainId, accessList = txData.accessList, maxFeePerGas = txData.maxFeePerGas, maxPriorityFeePerGas = txData.maxPriorityFeePerGas;\n        _this.common = _this._getCommon(opts.common, chainId);\n        _this.chainId = _this.common.chainIdBN();\n        if (!_this.common.isActivatedEIP(1559)) {\n            throw new Error('EIP-1559 not enabled on Common');\n        }\n        _this.activeCapabilities = _this.activeCapabilities.concat([1559, 2718, 2930]);\n        // Populate the access list fields\n        var accessListData = util_1.AccessLists.getAccessListData(accessList !== null && accessList !== void 0 ? accessList : []);\n        _this.accessList = accessListData.accessList;\n        _this.AccessListJSON = accessListData.AccessListJSON;\n        // Verify the access list format.\n        util_1.AccessLists.verifyAccessList(_this.accessList);\n        _this.maxFeePerGas = new ethereumjs_util_1.BN((0, ethereumjs_util_1.toBuffer)(maxFeePerGas === '' ? '0x' : maxFeePerGas));\n        _this.maxPriorityFeePerGas = new ethereumjs_util_1.BN((0, ethereumjs_util_1.toBuffer)(maxPriorityFeePerGas === '' ? '0x' : maxPriorityFeePerGas));\n        _this._validateCannotExceedMaxInteger({\n            maxFeePerGas: _this.maxFeePerGas,\n            maxPriorityFeePerGas: _this.maxPriorityFeePerGas,\n        });\n        if (_this.gasLimit.mul(_this.maxFeePerGas).gt(ethereumjs_util_1.MAX_INTEGER)) {\n            var msg = _this._errorMsg('gasLimit * maxFeePerGas cannot exceed MAX_INTEGER (2^256-1)');\n            throw new Error(msg);\n        }\n        if (_this.maxFeePerGas.lt(_this.maxPriorityFeePerGas)) {\n            var msg = _this._errorMsg('maxFeePerGas cannot be less than maxPriorityFeePerGas (The total must be the larger of the two)');\n            throw new Error(msg);\n        }\n        if (_this.v && !_this.v.eqn(0) && !_this.v.eqn(1)) {\n            var msg = _this._errorMsg('The y-parity of the transaction should either be 0 or 1');\n            throw new Error(msg);\n        }\n        if (_this.common.gteHardfork('homestead') && ((_a = _this.s) === null || _a === void 0 ? void 0 : _a.gt(types_1.N_DIV_2))) {\n            var msg = _this._errorMsg('Invalid Signature: s-values greater than secp256k1n/2 are considered invalid');\n            throw new Error(msg);\n        }\n        if (_this.common.isActivatedEIP(3860)) {\n            (0, util_1.checkMaxInitCodeSize)(_this.common, _this.data.length);\n        }\n        var freeze = (_b = opts === null || opts === void 0 ? void 0 : opts.freeze) !== null && _b !== void 0 ? _b : true;\n        if (freeze) {\n            Object.freeze(_this);\n        }\n        return _this;\n    }\n    Object.defineProperty(FeeMarketEIP1559Transaction.prototype, \"senderR\", {\n        /**\n         * EIP-2930 alias for `r`\n         *\n         * @deprecated use `r` instead\n         */\n        get: function () {\n            return this.r;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(FeeMarketEIP1559Transaction.prototype, \"senderS\", {\n        /**\n         * EIP-2930 alias for `s`\n         *\n         * @deprecated use `s` instead\n         */\n        get: function () {\n            return this.s;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(FeeMarketEIP1559Transaction.prototype, \"yParity\", {\n        /**\n         * EIP-2930 alias for `v`\n         *\n         * @deprecated use `v` instead\n         */\n        get: function () {\n            return this.v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Instantiate a transaction from a data dictionary.\n     *\n     * Format: { chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,\n     * accessList, v, r, s }\n     *\n     * Notes:\n     * - `chainId` will be set automatically if not provided\n     * - All parameters are optional and have some basic default values\n     */\n    FeeMarketEIP1559Transaction.fromTxData = function (txData, opts) {\n        if (opts === void 0) { opts = {}; }\n        return new FeeMarketEIP1559Transaction(txData, opts);\n    };\n    /**\n     * Instantiate a transaction from the serialized tx.\n     *\n     * Format: `0x02 || rlp([chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,\n     * accessList, signatureYParity, signatureR, signatureS])`\n     */\n    FeeMarketEIP1559Transaction.fromSerializedTx = function (serialized, opts) {\n        if (opts === void 0) { opts = {}; }\n        if (!serialized.slice(0, 1).equals(TRANSACTION_TYPE_BUFFER)) {\n            throw new Error(\"Invalid serialized tx input: not an EIP-1559 transaction (wrong tx type, expected: \".concat(TRANSACTION_TYPE, \", received: \").concat(serialized\n                .slice(0, 1)\n                .toString('hex')));\n        }\n        var values = ethereumjs_util_1.rlp.decode(serialized.slice(1));\n        if (!Array.isArray(values)) {\n            throw new Error('Invalid serialized tx input: must be array');\n        }\n        return FeeMarketEIP1559Transaction.fromValuesArray(values, opts);\n    };\n    /**\n     * Instantiate a transaction from the serialized tx.\n     * (alias of {@link FeeMarketEIP1559Transaction.fromSerializedTx})\n     *\n     * Note: This means that the Buffer should start with 0x01.\n     *\n     * @deprecated this constructor alias is deprecated and will be removed\n     * in favor of the {@link FeeMarketEIP1559Transaction.fromSerializedTx} constructor\n     */\n    FeeMarketEIP1559Transaction.fromRlpSerializedTx = function (serialized, opts) {\n        if (opts === void 0) { opts = {}; }\n        return FeeMarketEIP1559Transaction.fromSerializedTx(serialized, opts);\n    };\n    /**\n     * Create a transaction from a values array.\n     *\n     * Format: `[chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,\n     * accessList, signatureYParity, signatureR, signatureS]`\n     */\n    FeeMarketEIP1559Transaction.fromValuesArray = function (values, opts) {\n        if (opts === void 0) { opts = {}; }\n        if (values.length !== 9 && values.length !== 12) {\n            throw new Error('Invalid EIP-1559 transaction. Only expecting 9 values (for unsigned tx) or 12 values (for signed tx).');\n        }\n        var _a = __read(values, 12), chainId = _a[0], nonce = _a[1], maxPriorityFeePerGas = _a[2], maxFeePerGas = _a[3], gasLimit = _a[4], to = _a[5], value = _a[6], data = _a[7], accessList = _a[8], v = _a[9], r = _a[10], s = _a[11];\n        (0, ethereumjs_util_1.validateNoLeadingZeroes)({ nonce: nonce, maxPriorityFeePerGas: maxPriorityFeePerGas, maxFeePerGas: maxFeePerGas, gasLimit: gasLimit, value: value, v: v, r: r, s: s });\n        return new FeeMarketEIP1559Transaction({\n            chainId: new ethereumjs_util_1.BN(chainId),\n            nonce: nonce,\n            maxPriorityFeePerGas: maxPriorityFeePerGas,\n            maxFeePerGas: maxFeePerGas,\n            gasLimit: gasLimit,\n            to: to,\n            value: value,\n            data: data,\n            accessList: accessList !== null && accessList !== void 0 ? accessList : [],\n            v: v !== undefined ? new ethereumjs_util_1.BN(v) : undefined,\n            r: r,\n            s: s,\n        }, opts);\n    };\n    /**\n     * The amount of gas paid for the data in this tx\n     */\n    FeeMarketEIP1559Transaction.prototype.getDataFee = function () {\n        if (this.cache.dataFee && this.cache.dataFee.hardfork === this.common.hardfork()) {\n            return this.cache.dataFee.value;\n        }\n        var cost = _super.prototype.getDataFee.call(this);\n        cost.iaddn(util_1.AccessLists.getDataFeeEIP2930(this.accessList, this.common));\n        if (Object.isFrozen(this)) {\n            this.cache.dataFee = {\n                value: cost,\n                hardfork: this.common.hardfork(),\n            };\n        }\n        return cost;\n    };\n    /**\n     * The up front amount that an account must have for this transaction to be valid\n     * @param baseFee The base fee of the block (will be set to 0 if not provided)\n     */\n    FeeMarketEIP1559Transaction.prototype.getUpfrontCost = function (baseFee) {\n        if (baseFee === void 0) { baseFee = new ethereumjs_util_1.BN(0); }\n        var inclusionFeePerGas = ethereumjs_util_1.BN.min(this.maxPriorityFeePerGas, this.maxFeePerGas.sub(baseFee));\n        var gasPrice = inclusionFeePerGas.add(baseFee);\n        return this.gasLimit.mul(gasPrice).add(this.value);\n    };\n    /**\n     * Returns a Buffer Array of the raw Buffers of the EIP-1559 transaction, in order.\n     *\n     * Format: `[chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,\n     * accessList, signatureYParity, signatureR, signatureS]`\n     *\n     * Use {@link FeeMarketEIP1559Transaction.serialize} to add a transaction to a block\n     * with {@link Block.fromValuesArray}.\n     *\n     * For an unsigned tx this method uses the empty Buffer values for the\n     * signature parameters `v`, `r` and `s` for encoding. For an EIP-155 compliant\n     * representation for external signing use {@link FeeMarketEIP1559Transaction.getMessageToSign}.\n     */\n    FeeMarketEIP1559Transaction.prototype.raw = function () {\n        return [\n            (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.chainId),\n            (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.nonce),\n            (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.maxPriorityFeePerGas),\n            (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.maxFeePerGas),\n            (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.gasLimit),\n            this.to !== undefined ? this.to.buf : Buffer.from([]),\n            (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.value),\n            this.data,\n            this.accessList,\n            this.v !== undefined ? (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.v) : Buffer.from([]),\n            this.r !== undefined ? (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.r) : Buffer.from([]),\n            this.s !== undefined ? (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.s) : Buffer.from([]),\n        ];\n    };\n    /**\n     * Returns the serialized encoding of the EIP-1559 transaction.\n     *\n     * Format: `0x02 || rlp([chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,\n     * accessList, signatureYParity, signatureR, signatureS])`\n     *\n     * Note that in contrast to the legacy tx serialization format this is not\n     * valid RLP any more due to the raw tx type preceding and concatenated to\n     * the RLP encoding of the values.\n     */\n    FeeMarketEIP1559Transaction.prototype.serialize = function () {\n        var base = this.raw();\n        return Buffer.concat([TRANSACTION_TYPE_BUFFER, ethereumjs_util_1.rlp.encode(base)]);\n    };\n    /**\n     * Returns the serialized unsigned tx (hashed or raw), which can be used\n     * to sign the transaction (e.g. for sending to a hardware wallet).\n     *\n     * Note: in contrast to the legacy tx the raw message format is already\n     * serialized and doesn't need to be RLP encoded any more.\n     *\n     * ```javascript\n     * const serializedMessage = tx.getMessageToSign(false) // use this for the HW wallet input\n     * ```\n     *\n     * @param hashMessage - Return hashed message if set to true (default: true)\n     */\n    FeeMarketEIP1559Transaction.prototype.getMessageToSign = function (hashMessage) {\n        if (hashMessage === void 0) { hashMessage = true; }\n        var base = this.raw().slice(0, 9);\n        var message = Buffer.concat([TRANSACTION_TYPE_BUFFER, ethereumjs_util_1.rlp.encode(base)]);\n        if (hashMessage) {\n            return (0, ethereumjs_util_1.keccak256)(message);\n        }\n        else {\n            return message;\n        }\n    };\n    /**\n     * Computes a sha3-256 hash of the serialized tx.\n     *\n     * This method can only be used for signed txs (it throws otherwise).\n     * Use {@link FeeMarketEIP1559Transaction.getMessageToSign} to get a tx hash for the purpose of signing.\n     */\n    FeeMarketEIP1559Transaction.prototype.hash = function () {\n        if (!this.isSigned()) {\n            var msg = this._errorMsg('Cannot call hash method if transaction is not signed');\n            throw new Error(msg);\n        }\n        if (Object.isFrozen(this)) {\n            if (!this.cache.hash) {\n                this.cache.hash = (0, ethereumjs_util_1.keccak256)(this.serialize());\n            }\n            return this.cache.hash;\n        }\n        return (0, ethereumjs_util_1.keccak256)(this.serialize());\n    };\n    /**\n     * Computes a sha3-256 hash which can be used to verify the signature\n     */\n    FeeMarketEIP1559Transaction.prototype.getMessageToVerifySignature = function () {\n        return this.getMessageToSign();\n    };\n    /**\n     * Returns the public key of the sender\n     */\n    FeeMarketEIP1559Transaction.prototype.getSenderPublicKey = function () {\n        var _a;\n        if (!this.isSigned()) {\n            var msg = this._errorMsg('Cannot call this method if transaction is not signed');\n            throw new Error(msg);\n        }\n        var msgHash = this.getMessageToVerifySignature();\n        // EIP-2: All transaction signatures whose s-value is greater than secp256k1n/2 are considered invalid.\n        // Reasoning: https://ethereum.stackexchange.com/a/55728\n        if (this.common.gteHardfork('homestead') && ((_a = this.s) === null || _a === void 0 ? void 0 : _a.gt(types_1.N_DIV_2))) {\n            var msg = this._errorMsg('Invalid Signature: s-values greater than secp256k1n/2 are considered invalid');\n            throw new Error(msg);\n        }\n        var _b = this, v = _b.v, r = _b.r, s = _b.s;\n        try {\n            return (0, ethereumjs_util_1.ecrecover)(msgHash, v.addn(27), // Recover the 27 which was stripped from ecsign\n            (0, ethereumjs_util_1.bnToUnpaddedBuffer)(r), (0, ethereumjs_util_1.bnToUnpaddedBuffer)(s));\n        }\n        catch (e) {\n            var msg = this._errorMsg('Invalid Signature');\n            throw new Error(msg);\n        }\n    };\n    FeeMarketEIP1559Transaction.prototype._processSignature = function (v, r, s) {\n        var opts = __assign(__assign({}, this.txOptions), { common: this.common });\n        return FeeMarketEIP1559Transaction.fromTxData({\n            chainId: this.chainId,\n            nonce: this.nonce,\n            maxPriorityFeePerGas: this.maxPriorityFeePerGas,\n            maxFeePerGas: this.maxFeePerGas,\n            gasLimit: this.gasLimit,\n            to: this.to,\n            value: this.value,\n            data: this.data,\n            accessList: this.accessList,\n            v: new ethereumjs_util_1.BN(v - 27),\n            r: new ethereumjs_util_1.BN(r),\n            s: new ethereumjs_util_1.BN(s),\n        }, opts);\n    };\n    /**\n     * Returns an object with the JSON representation of the transaction\n     */\n    FeeMarketEIP1559Transaction.prototype.toJSON = function () {\n        var accessListJSON = util_1.AccessLists.getAccessListJSON(this.accessList);\n        return {\n            chainId: (0, ethereumjs_util_1.bnToHex)(this.chainId),\n            nonce: (0, ethereumjs_util_1.bnToHex)(this.nonce),\n            maxPriorityFeePerGas: (0, ethereumjs_util_1.bnToHex)(this.maxPriorityFeePerGas),\n            maxFeePerGas: (0, ethereumjs_util_1.bnToHex)(this.maxFeePerGas),\n            gasLimit: (0, ethereumjs_util_1.bnToHex)(this.gasLimit),\n            to: this.to !== undefined ? this.to.toString() : undefined,\n            value: (0, ethereumjs_util_1.bnToHex)(this.value),\n            data: '0x' + this.data.toString('hex'),\n            accessList: accessListJSON,\n            v: this.v !== undefined ? (0, ethereumjs_util_1.bnToHex)(this.v) : undefined,\n            r: this.r !== undefined ? (0, ethereumjs_util_1.bnToHex)(this.r) : undefined,\n            s: this.s !== undefined ? (0, ethereumjs_util_1.bnToHex)(this.s) : undefined,\n        };\n    };\n    /**\n     * Return a compact error string representation of the object\n     */\n    FeeMarketEIP1559Transaction.prototype.errorStr = function () {\n        var errorStr = this._getSharedErrorPostfix();\n        errorStr += \" maxFeePerGas=\".concat(this.maxFeePerGas, \" maxPriorityFeePerGas=\").concat(this.maxPriorityFeePerGas);\n        return errorStr;\n    };\n    /**\n     * Internal helper function to create an annotated error message\n     *\n     * @param msg Base error message\n     * @hidden\n     */\n    FeeMarketEIP1559Transaction.prototype._errorMsg = function (msg) {\n        return \"\".concat(msg, \" (\").concat(this.errorStr(), \")\");\n    };\n    return FeeMarketEIP1559Transaction;\n}(baseTransaction_1.BaseTransaction));\nexports.default = FeeMarketEIP1559Transaction;\n//# sourceMappingURL=eip1559Transaction.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ethereumjs_util_1 = require(\"ethereumjs-util\");\nvar baseTransaction_1 = require(\"./baseTransaction\");\nvar types_1 = require(\"./types\");\nvar util_1 = require(\"./util\");\nvar TRANSACTION_TYPE = 1;\nvar TRANSACTION_TYPE_BUFFER = Buffer.from(TRANSACTION_TYPE.toString(16).padStart(2, '0'), 'hex');\n/**\n * Typed transaction with optional access lists\n *\n * - TransactionType: 1\n * - EIP: [EIP-2930](https://eips.ethereum.org/EIPS/eip-2930)\n */\nvar AccessListEIP2930Transaction = /** @class */ (function (_super) {\n    __extends(AccessListEIP2930Transaction, _super);\n    /**\n     * This constructor takes the values, validates them, assigns them and freezes the object.\n     *\n     * It is not recommended to use this constructor directly. Instead use\n     * the static factory methods to assist in creating a Transaction object from\n     * varying data types.\n     */\n    function AccessListEIP2930Transaction(txData, opts) {\n        if (opts === void 0) { opts = {}; }\n        var _this = this;\n        var _a, _b;\n        _this = _super.call(this, __assign(__assign({}, txData), { type: TRANSACTION_TYPE }), opts) || this;\n        /**\n         * The default HF if the tx type is active on that HF\n         * or the first greater HF where the tx is active.\n         *\n         * @hidden\n         */\n        _this.DEFAULT_HARDFORK = 'berlin';\n        var chainId = txData.chainId, accessList = txData.accessList, gasPrice = txData.gasPrice;\n        _this.common = _this._getCommon(opts.common, chainId);\n        _this.chainId = _this.common.chainIdBN();\n        // EIP-2718 check is done in Common\n        if (!_this.common.isActivatedEIP(2930)) {\n            throw new Error('EIP-2930 not enabled on Common');\n        }\n        _this.activeCapabilities = _this.activeCapabilities.concat([2718, 2930]);\n        // Populate the access list fields\n        var accessListData = util_1.AccessLists.getAccessListData(accessList !== null && accessList !== void 0 ? accessList : []);\n        _this.accessList = accessListData.accessList;\n        _this.AccessListJSON = accessListData.AccessListJSON;\n        // Verify the access list format.\n        util_1.AccessLists.verifyAccessList(_this.accessList);\n        _this.gasPrice = new ethereumjs_util_1.BN((0, ethereumjs_util_1.toBuffer)(gasPrice === '' ? '0x' : gasPrice));\n        _this._validateCannotExceedMaxInteger({\n            gasPrice: _this.gasPrice,\n        });\n        if (_this.gasPrice.mul(_this.gasLimit).gt(ethereumjs_util_1.MAX_INTEGER)) {\n            var msg = _this._errorMsg('gasLimit * gasPrice cannot exceed MAX_INTEGER');\n            throw new Error(msg);\n        }\n        if (_this.v && !_this.v.eqn(0) && !_this.v.eqn(1)) {\n            var msg = _this._errorMsg('The y-parity of the transaction should either be 0 or 1');\n            throw new Error(msg);\n        }\n        if (_this.common.gteHardfork('homestead') && ((_a = _this.s) === null || _a === void 0 ? void 0 : _a.gt(types_1.N_DIV_2))) {\n            var msg = _this._errorMsg('Invalid Signature: s-values greater than secp256k1n/2 are considered invalid');\n            throw new Error(msg);\n        }\n        if (_this.common.isActivatedEIP(3860)) {\n            (0, util_1.checkMaxInitCodeSize)(_this.common, _this.data.length);\n        }\n        var freeze = (_b = opts === null || opts === void 0 ? void 0 : opts.freeze) !== null && _b !== void 0 ? _b : true;\n        if (freeze) {\n            Object.freeze(_this);\n        }\n        return _this;\n    }\n    Object.defineProperty(AccessListEIP2930Transaction.prototype, \"senderR\", {\n        /**\n         * EIP-2930 alias for `r`\n         *\n         * @deprecated use `r` instead\n         */\n        get: function () {\n            return this.r;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(AccessListEIP2930Transaction.prototype, \"senderS\", {\n        /**\n         * EIP-2930 alias for `s`\n         *\n         * @deprecated use `s` instead\n         */\n        get: function () {\n            return this.s;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(AccessListEIP2930Transaction.prototype, \"yParity\", {\n        /**\n         * EIP-2930 alias for `v`\n         *\n         * @deprecated use `v` instead\n         */\n        get: function () {\n            return this.v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Instantiate a transaction from a data dictionary.\n     *\n     * Format: { chainId, nonce, gasPrice, gasLimit, to, value, data, accessList,\n     * v, r, s }\n     *\n     * Notes:\n     * - `chainId` will be set automatically if not provided\n     * - All parameters are optional and have some basic default values\n     */\n    AccessListEIP2930Transaction.fromTxData = function (txData, opts) {\n        if (opts === void 0) { opts = {}; }\n        return new AccessListEIP2930Transaction(txData, opts);\n    };\n    /**\n     * Instantiate a transaction from the serialized tx.\n     *\n     * Format: `0x01 || rlp([chainId, nonce, gasPrice, gasLimit, to, value, data, accessList,\n     * signatureYParity (v), signatureR (r), signatureS (s)])`\n     */\n    AccessListEIP2930Transaction.fromSerializedTx = function (serialized, opts) {\n        if (opts === void 0) { opts = {}; }\n        if (!serialized.slice(0, 1).equals(TRANSACTION_TYPE_BUFFER)) {\n            throw new Error(\"Invalid serialized tx input: not an EIP-2930 transaction (wrong tx type, expected: \".concat(TRANSACTION_TYPE, \", received: \").concat(serialized\n                .slice(0, 1)\n                .toString('hex')));\n        }\n        var values = ethereumjs_util_1.rlp.decode(serialized.slice(1));\n        if (!Array.isArray(values)) {\n            throw new Error('Invalid serialized tx input: must be array');\n        }\n        return AccessListEIP2930Transaction.fromValuesArray(values, opts);\n    };\n    /**\n     * Instantiate a transaction from the serialized tx.\n     * (alias of {@link AccessListEIP2930Transaction.fromSerializedTx})\n     *\n     * Note: This means that the Buffer should start with 0x01.\n     *\n     * @deprecated this constructor alias is deprecated and will be removed\n     * in favor of the {@link AccessListEIP2930Transaction.fromSerializedTx} constructor\n     */\n    AccessListEIP2930Transaction.fromRlpSerializedTx = function (serialized, opts) {\n        if (opts === void 0) { opts = {}; }\n        return AccessListEIP2930Transaction.fromSerializedTx(serialized, opts);\n    };\n    /**\n     * Create a transaction from a values array.\n     *\n     * Format: `[chainId, nonce, gasPrice, gasLimit, to, value, data, accessList,\n     * signatureYParity (v), signatureR (r), signatureS (s)]`\n     */\n    AccessListEIP2930Transaction.fromValuesArray = function (values, opts) {\n        if (opts === void 0) { opts = {}; }\n        if (values.length !== 8 && values.length !== 11) {\n            throw new Error('Invalid EIP-2930 transaction. Only expecting 8 values (for unsigned tx) or 11 values (for signed tx).');\n        }\n        var _a = __read(values, 11), chainId = _a[0], nonce = _a[1], gasPrice = _a[2], gasLimit = _a[3], to = _a[4], value = _a[5], data = _a[6], accessList = _a[7], v = _a[8], r = _a[9], s = _a[10];\n        (0, ethereumjs_util_1.validateNoLeadingZeroes)({ nonce: nonce, gasPrice: gasPrice, gasLimit: gasLimit, value: value, v: v, r: r, s: s });\n        var emptyAccessList = [];\n        return new AccessListEIP2930Transaction({\n            chainId: new ethereumjs_util_1.BN(chainId),\n            nonce: nonce,\n            gasPrice: gasPrice,\n            gasLimit: gasLimit,\n            to: to,\n            value: value,\n            data: data,\n            accessList: accessList !== null && accessList !== void 0 ? accessList : emptyAccessList,\n            v: v !== undefined ? new ethereumjs_util_1.BN(v) : undefined,\n            r: r,\n            s: s,\n        }, opts);\n    };\n    /**\n     * The amount of gas paid for the data in this tx\n     */\n    AccessListEIP2930Transaction.prototype.getDataFee = function () {\n        if (this.cache.dataFee && this.cache.dataFee.hardfork === this.common.hardfork()) {\n            return this.cache.dataFee.value;\n        }\n        var cost = _super.prototype.getDataFee.call(this);\n        cost.iaddn(util_1.AccessLists.getDataFeeEIP2930(this.accessList, this.common));\n        if (Object.isFrozen(this)) {\n            this.cache.dataFee = {\n                value: cost,\n                hardfork: this.common.hardfork(),\n            };\n        }\n        return cost;\n    };\n    /**\n     * The up front amount that an account must have for this transaction to be valid\n     */\n    AccessListEIP2930Transaction.prototype.getUpfrontCost = function () {\n        return this.gasLimit.mul(this.gasPrice).add(this.value);\n    };\n    /**\n     * Returns a Buffer Array of the raw Buffers of the EIP-2930 transaction, in order.\n     *\n     * Format: `[chainId, nonce, gasPrice, gasLimit, to, value, data, accessList,\n     * signatureYParity (v), signatureR (r), signatureS (s)]`\n     *\n     * Use {@link AccessListEIP2930Transaction.serialize} to add a transaction to a block\n     * with {@link Block.fromValuesArray}.\n     *\n     * For an unsigned tx this method uses the empty Buffer values for the\n     * signature parameters `v`, `r` and `s` for encoding. For an EIP-155 compliant\n     * representation for external signing use {@link AccessListEIP2930Transaction.getMessageToSign}.\n     */\n    AccessListEIP2930Transaction.prototype.raw = function () {\n        return [\n            (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.chainId),\n            (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.nonce),\n            (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.gasPrice),\n            (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.gasLimit),\n            this.to !== undefined ? this.to.buf : Buffer.from([]),\n            (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.value),\n            this.data,\n            this.accessList,\n            this.v !== undefined ? (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.v) : Buffer.from([]),\n            this.r !== undefined ? (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.r) : Buffer.from([]),\n            this.s !== undefined ? (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.s) : Buffer.from([]),\n        ];\n    };\n    /**\n     * Returns the serialized encoding of the EIP-2930 transaction.\n     *\n     * Format: `0x01 || rlp([chainId, nonce, gasPrice, gasLimit, to, value, data, accessList,\n     * signatureYParity (v), signatureR (r), signatureS (s)])`\n     *\n     * Note that in contrast to the legacy tx serialization format this is not\n     * valid RLP any more due to the raw tx type preceding and concatenated to\n     * the RLP encoding of the values.\n     */\n    AccessListEIP2930Transaction.prototype.serialize = function () {\n        var base = this.raw();\n        return Buffer.concat([TRANSACTION_TYPE_BUFFER, ethereumjs_util_1.rlp.encode(base)]);\n    };\n    /**\n     * Returns the serialized unsigned tx (hashed or raw), which can be used\n     * to sign the transaction (e.g. for sending to a hardware wallet).\n     *\n     * Note: in contrast to the legacy tx the raw message format is already\n     * serialized and doesn't need to be RLP encoded any more.\n     *\n     * ```javascript\n     * const serializedMessage = tx.getMessageToSign(false) // use this for the HW wallet input\n     * ```\n     *\n     * @param hashMessage - Return hashed message if set to true (default: true)\n     */\n    AccessListEIP2930Transaction.prototype.getMessageToSign = function (hashMessage) {\n        if (hashMessage === void 0) { hashMessage = true; }\n        var base = this.raw().slice(0, 8);\n        var message = Buffer.concat([TRANSACTION_TYPE_BUFFER, ethereumjs_util_1.rlp.encode(base)]);\n        if (hashMessage) {\n            return (0, ethereumjs_util_1.keccak256)(message);\n        }\n        else {\n            return message;\n        }\n    };\n    /**\n     * Computes a sha3-256 hash of the serialized tx.\n     *\n     * This method can only be used for signed txs (it throws otherwise).\n     * Use {@link AccessListEIP2930Transaction.getMessageToSign} to get a tx hash for the purpose of signing.\n     */\n    AccessListEIP2930Transaction.prototype.hash = function () {\n        if (!this.isSigned()) {\n            var msg = this._errorMsg('Cannot call hash method if transaction is not signed');\n            throw new Error(msg);\n        }\n        if (Object.isFrozen(this)) {\n            if (!this.cache.hash) {\n                this.cache.hash = (0, ethereumjs_util_1.keccak256)(this.serialize());\n            }\n            return this.cache.hash;\n        }\n        return (0, ethereumjs_util_1.keccak256)(this.serialize());\n    };\n    /**\n     * Computes a sha3-256 hash which can be used to verify the signature\n     */\n    AccessListEIP2930Transaction.prototype.getMessageToVerifySignature = function () {\n        return this.getMessageToSign();\n    };\n    /**\n     * Returns the public key of the sender\n     */\n    AccessListEIP2930Transaction.prototype.getSenderPublicKey = function () {\n        var _a;\n        if (!this.isSigned()) {\n            var msg = this._errorMsg('Cannot call this method if transaction is not signed');\n            throw new Error(msg);\n        }\n        var msgHash = this.getMessageToVerifySignature();\n        // EIP-2: All transaction signatures whose s-value is greater than secp256k1n/2 are considered invalid.\n        // Reasoning: https://ethereum.stackexchange.com/a/55728\n        if (this.common.gteHardfork('homestead') && ((_a = this.s) === null || _a === void 0 ? void 0 : _a.gt(types_1.N_DIV_2))) {\n            var msg = this._errorMsg('Invalid Signature: s-values greater than secp256k1n/2 are considered invalid');\n            throw new Error(msg);\n        }\n        var _b = this, yParity = _b.yParity, r = _b.r, s = _b.s;\n        try {\n            return (0, ethereumjs_util_1.ecrecover)(msgHash, yParity.addn(27), // Recover the 27 which was stripped from ecsign\n            (0, ethereumjs_util_1.bnToUnpaddedBuffer)(r), (0, ethereumjs_util_1.bnToUnpaddedBuffer)(s));\n        }\n        catch (e) {\n            var msg = this._errorMsg('Invalid Signature');\n            throw new Error(msg);\n        }\n    };\n    AccessListEIP2930Transaction.prototype._processSignature = function (v, r, s) {\n        var opts = __assign(__assign({}, this.txOptions), { common: this.common });\n        return AccessListEIP2930Transaction.fromTxData({\n            chainId: this.chainId,\n            nonce: this.nonce,\n            gasPrice: this.gasPrice,\n            gasLimit: this.gasLimit,\n            to: this.to,\n            value: this.value,\n            data: this.data,\n            accessList: this.accessList,\n            v: new ethereumjs_util_1.BN(v - 27),\n            r: new ethereumjs_util_1.BN(r),\n            s: new ethereumjs_util_1.BN(s),\n        }, opts);\n    };\n    /**\n     * Returns an object with the JSON representation of the transaction\n     */\n    AccessListEIP2930Transaction.prototype.toJSON = function () {\n        var accessListJSON = util_1.AccessLists.getAccessListJSON(this.accessList);\n        return {\n            chainId: (0, ethereumjs_util_1.bnToHex)(this.chainId),\n            nonce: (0, ethereumjs_util_1.bnToHex)(this.nonce),\n            gasPrice: (0, ethereumjs_util_1.bnToHex)(this.gasPrice),\n            gasLimit: (0, ethereumjs_util_1.bnToHex)(this.gasLimit),\n            to: this.to !== undefined ? this.to.toString() : undefined,\n            value: (0, ethereumjs_util_1.bnToHex)(this.value),\n            data: '0x' + this.data.toString('hex'),\n            accessList: accessListJSON,\n            v: this.v !== undefined ? (0, ethereumjs_util_1.bnToHex)(this.v) : undefined,\n            r: this.r !== undefined ? (0, ethereumjs_util_1.bnToHex)(this.r) : undefined,\n            s: this.s !== undefined ? (0, ethereumjs_util_1.bnToHex)(this.s) : undefined,\n        };\n    };\n    /**\n     * Return a compact error string representation of the object\n     */\n    AccessListEIP2930Transaction.prototype.errorStr = function () {\n        var _a, _b;\n        var errorStr = this._getSharedErrorPostfix();\n        // Keep ? for this.accessList since this otherwise causes Hardhat E2E tests to fail\n        errorStr += \" gasPrice=\".concat(this.gasPrice, \" accessListCount=\").concat((_b = (_a = this.accessList) === null || _a === void 0 ? void 0 : _a.length) !== null && _b !== void 0 ? _b : 0);\n        return errorStr;\n    };\n    /**\n     * Internal helper function to create an annotated error message\n     *\n     * @param msg Base error message\n     * @hidden\n     */\n    AccessListEIP2930Transaction.prototype._errorMsg = function (msg) {\n        return \"\".concat(msg, \" (\").concat(this.errorStr(), \")\");\n    };\n    return AccessListEIP2930Transaction;\n}(baseTransaction_1.BaseTransaction));\nexports.default = AccessListEIP2930Transaction;\n//# sourceMappingURL=eip2930Transaction.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FeeMarketEIP1559Transaction = exports.TransactionFactory = exports.AccessListEIP2930Transaction = exports.Transaction = void 0;\nvar legacyTransaction_1 = require(\"./legacyTransaction\");\nObject.defineProperty(exports, \"Transaction\", { enumerable: true, get: function () { return __importDefault(legacyTransaction_1).default; } });\nvar eip2930Transaction_1 = require(\"./eip2930Transaction\");\nObject.defineProperty(exports, \"AccessListEIP2930Transaction\", { enumerable: true, get: function () { return __importDefault(eip2930Transaction_1).default; } });\nvar transactionFactory_1 = require(\"./transactionFactory\");\nObject.defineProperty(exports, \"TransactionFactory\", { enumerable: true, get: function () { return __importDefault(transactionFactory_1).default; } });\nvar eip1559Transaction_1 = require(\"./eip1559Transaction\");\nObject.defineProperty(exports, \"FeeMarketEIP1559Transaction\", { enumerable: true, get: function () { return __importDefault(eip1559Transaction_1).default; } });\n__exportStar(require(\"./types\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ethereumjs_util_1 = require(\"ethereumjs-util\");\nvar types_1 = require(\"./types\");\nvar baseTransaction_1 = require(\"./baseTransaction\");\nvar util_1 = require(\"./util\");\nvar TRANSACTION_TYPE = 0;\n/**\n * An Ethereum non-typed (legacy) transaction\n */\nvar Transaction = /** @class */ (function (_super) {\n    __extends(Transaction, _super);\n    /**\n     * This constructor takes the values, validates them, assigns them and freezes the object.\n     *\n     * It is not recommended to use this constructor directly. Instead use\n     * the static factory methods to assist in creating a Transaction object from\n     * varying data types.\n     */\n    function Transaction(txData, opts) {\n        if (opts === void 0) { opts = {}; }\n        var _this = this;\n        var _a;\n        _this = _super.call(this, __assign(__assign({}, txData), { type: TRANSACTION_TYPE }), opts) || this;\n        _this.common = _this._validateTxV(_this.v, opts.common);\n        _this.gasPrice = new ethereumjs_util_1.BN((0, ethereumjs_util_1.toBuffer)(txData.gasPrice === '' ? '0x' : txData.gasPrice));\n        if (_this.gasPrice.mul(_this.gasLimit).gt(ethereumjs_util_1.MAX_INTEGER)) {\n            var msg = _this._errorMsg('gas limit * gasPrice cannot exceed MAX_INTEGER (2^256-1)');\n            throw new Error(msg);\n        }\n        _this._validateCannotExceedMaxInteger({ gasPrice: _this.gasPrice });\n        if (_this.common.gteHardfork('spuriousDragon')) {\n            if (!_this.isSigned()) {\n                _this.activeCapabilities.push(types_1.Capability.EIP155ReplayProtection);\n            }\n            else {\n                // EIP155 spec:\n                // If block.number >= 2,675,000 and v = CHAIN_ID * 2 + 35 or v = CHAIN_ID * 2 + 36\n                // then when computing the hash of a transaction for purposes of signing or recovering\n                // instead of hashing only the first six elements (i.e. nonce, gasprice, startgas, to, value, data)\n                // hash nine elements, with v replaced by CHAIN_ID, r = 0 and s = 0.\n                var v = _this.v;\n                var chainIdDoubled = _this.common.chainIdBN().muln(2);\n                // v and chain ID meet EIP-155 conditions\n                if (v.eq(chainIdDoubled.addn(35)) || v.eq(chainIdDoubled.addn(36))) {\n                    _this.activeCapabilities.push(types_1.Capability.EIP155ReplayProtection);\n                }\n            }\n        }\n        if (_this.common.isActivatedEIP(3860)) {\n            (0, util_1.checkMaxInitCodeSize)(_this.common, _this.data.length);\n        }\n        var freeze = (_a = opts === null || opts === void 0 ? void 0 : opts.freeze) !== null && _a !== void 0 ? _a : true;\n        if (freeze) {\n            Object.freeze(_this);\n        }\n        return _this;\n    }\n    /**\n     * Instantiate a transaction from a data dictionary.\n     *\n     * Format: { nonce, gasPrice, gasLimit, to, value, data, v, r, s }\n     *\n     * Notes:\n     * - All parameters are optional and have some basic default values\n     */\n    Transaction.fromTxData = function (txData, opts) {\n        if (opts === void 0) { opts = {}; }\n        return new Transaction(txData, opts);\n    };\n    /**\n     * Instantiate a transaction from the serialized tx.\n     *\n     * Format: `rlp([nonce, gasPrice, gasLimit, to, value, data, v, r, s])`\n     */\n    Transaction.fromSerializedTx = function (serialized, opts) {\n        if (opts === void 0) { opts = {}; }\n        var values = ethereumjs_util_1.rlp.decode(serialized);\n        if (!Array.isArray(values)) {\n            throw new Error('Invalid serialized tx input. Must be array');\n        }\n        return this.fromValuesArray(values, opts);\n    };\n    /**\n     * Instantiate a transaction from the serialized tx.\n     * (alias of {@link Transaction.fromSerializedTx})\n     *\n     * @deprecated this constructor alias is deprecated and will be removed\n     * in favor of the {@link Transaction.fromSerializedTx} constructor\n     */\n    Transaction.fromRlpSerializedTx = function (serialized, opts) {\n        if (opts === void 0) { opts = {}; }\n        return Transaction.fromSerializedTx(serialized, opts);\n    };\n    /**\n     * Create a transaction from a values array.\n     *\n     * Format: `[nonce, gasPrice, gasLimit, to, value, data, v, r, s]`\n     */\n    Transaction.fromValuesArray = function (values, opts) {\n        if (opts === void 0) { opts = {}; }\n        // If length is not 6, it has length 9. If v/r/s are empty Buffers, it is still an unsigned transaction\n        // This happens if you get the RLP data from `raw()`\n        if (values.length !== 6 && values.length !== 9) {\n            throw new Error('Invalid transaction. Only expecting 6 values (for unsigned tx) or 9 values (for signed tx).');\n        }\n        var _a = __read(values, 9), nonce = _a[0], gasPrice = _a[1], gasLimit = _a[2], to = _a[3], value = _a[4], data = _a[5], v = _a[6], r = _a[7], s = _a[8];\n        (0, ethereumjs_util_1.validateNoLeadingZeroes)({ nonce: nonce, gasPrice: gasPrice, gasLimit: gasLimit, value: value, v: v, r: r, s: s });\n        return new Transaction({\n            nonce: nonce,\n            gasPrice: gasPrice,\n            gasLimit: gasLimit,\n            to: to,\n            value: value,\n            data: data,\n            v: v,\n            r: r,\n            s: s,\n        }, opts);\n    };\n    /**\n     * Returns a Buffer Array of the raw Buffers of the legacy transaction, in order.\n     *\n     * Format: `[nonce, gasPrice, gasLimit, to, value, data, v, r, s]`\n     *\n     * For legacy txs this is also the correct format to add transactions\n     * to a block with {@link Block.fromValuesArray} (use the `serialize()` method\n     * for typed txs).\n     *\n     * For an unsigned tx this method returns the empty Buffer values\n     * for the signature parameters `v`, `r` and `s`. For an EIP-155 compliant\n     * representation have a look at {@link Transaction.getMessageToSign}.\n     */\n    Transaction.prototype.raw = function () {\n        return [\n            (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.nonce),\n            (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.gasPrice),\n            (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.gasLimit),\n            this.to !== undefined ? this.to.buf : Buffer.from([]),\n            (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.value),\n            this.data,\n            this.v !== undefined ? (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.v) : Buffer.from([]),\n            this.r !== undefined ? (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.r) : Buffer.from([]),\n            this.s !== undefined ? (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.s) : Buffer.from([]),\n        ];\n    };\n    /**\n     * Returns the serialized encoding of the legacy transaction.\n     *\n     * Format: `rlp([nonce, gasPrice, gasLimit, to, value, data, v, r, s])`\n     *\n     * For an unsigned tx this method uses the empty Buffer values for the\n     * signature parameters `v`, `r` and `s` for encoding. For an EIP-155 compliant\n     * representation for external signing use {@link Transaction.getMessageToSign}.\n     */\n    Transaction.prototype.serialize = function () {\n        return ethereumjs_util_1.rlp.encode(this.raw());\n    };\n    Transaction.prototype._getMessageToSign = function () {\n        var values = [\n            (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.nonce),\n            (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.gasPrice),\n            (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.gasLimit),\n            this.to !== undefined ? this.to.buf : Buffer.from([]),\n            (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.value),\n            this.data,\n        ];\n        if (this.supports(types_1.Capability.EIP155ReplayProtection)) {\n            values.push((0, ethereumjs_util_1.toBuffer)(this.common.chainIdBN()));\n            values.push((0, ethereumjs_util_1.unpadBuffer)((0, ethereumjs_util_1.toBuffer)(0)));\n            values.push((0, ethereumjs_util_1.unpadBuffer)((0, ethereumjs_util_1.toBuffer)(0)));\n        }\n        return values;\n    };\n    Transaction.prototype.getMessageToSign = function (hashMessage) {\n        if (hashMessage === void 0) { hashMessage = true; }\n        var message = this._getMessageToSign();\n        if (hashMessage) {\n            return (0, ethereumjs_util_1.rlphash)(message);\n        }\n        else {\n            return message;\n        }\n    };\n    /**\n     * The amount of gas paid for the data in this tx\n     */\n    Transaction.prototype.getDataFee = function () {\n        if (this.cache.dataFee && this.cache.dataFee.hardfork === this.common.hardfork()) {\n            return this.cache.dataFee.value;\n        }\n        if (Object.isFrozen(this)) {\n            this.cache.dataFee = {\n                value: _super.prototype.getDataFee.call(this),\n                hardfork: this.common.hardfork(),\n            };\n        }\n        return _super.prototype.getDataFee.call(this);\n    };\n    /**\n     * The up front amount that an account must have for this transaction to be valid\n     */\n    Transaction.prototype.getUpfrontCost = function () {\n        return this.gasLimit.mul(this.gasPrice).add(this.value);\n    };\n    /**\n     * Computes a sha3-256 hash of the serialized tx.\n     *\n     * This method can only be used for signed txs (it throws otherwise).\n     * Use {@link Transaction.getMessageToSign} to get a tx hash for the purpose of signing.\n     */\n    Transaction.prototype.hash = function () {\n        // In contrast to the tx type transaction implementations the `hash()` function\n        // for the legacy tx does not throw if the tx is not signed.\n        // This has been considered for inclusion but lead to unexpected backwards\n        // compatibility problems (no concrete reference found, needs validation).\n        //\n        // For context see also https://github.com/ethereumjs/ethereumjs-monorepo/pull/1445,\n        // September, 2021 as well as work done before.\n        //\n        // This should be updated along the next major version release by adding:\n        //\n        //if (!this.isSigned()) {\n        //  const msg = this._errorMsg('Cannot call hash method if transaction is not signed')\n        //  throw new Error(msg)\n        //}\n        if (Object.isFrozen(this)) {\n            if (!this.cache.hash) {\n                this.cache.hash = (0, ethereumjs_util_1.rlphash)(this.raw());\n            }\n            return this.cache.hash;\n        }\n        return (0, ethereumjs_util_1.rlphash)(this.raw());\n    };\n    /**\n     * Computes a sha3-256 hash which can be used to verify the signature\n     */\n    Transaction.prototype.getMessageToVerifySignature = function () {\n        if (!this.isSigned()) {\n            var msg = this._errorMsg('This transaction is not signed');\n            throw new Error(msg);\n        }\n        var message = this._getMessageToSign();\n        return (0, ethereumjs_util_1.rlphash)(message);\n    };\n    /**\n     * Returns the public key of the sender\n     */\n    Transaction.prototype.getSenderPublicKey = function () {\n        var _a;\n        var msgHash = this.getMessageToVerifySignature();\n        // EIP-2: All transaction signatures whose s-value is greater than secp256k1n/2 are considered invalid.\n        // Reasoning: https://ethereum.stackexchange.com/a/55728\n        if (this.common.gteHardfork('homestead') && ((_a = this.s) === null || _a === void 0 ? void 0 : _a.gt(types_1.N_DIV_2))) {\n            var msg = this._errorMsg('Invalid Signature: s-values greater than secp256k1n/2 are considered invalid');\n            throw new Error(msg);\n        }\n        var _b = this, v = _b.v, r = _b.r, s = _b.s;\n        try {\n            return (0, ethereumjs_util_1.ecrecover)(msgHash, v, (0, ethereumjs_util_1.bnToUnpaddedBuffer)(r), (0, ethereumjs_util_1.bnToUnpaddedBuffer)(s), this.supports(types_1.Capability.EIP155ReplayProtection) ? this.common.chainIdBN() : undefined);\n        }\n        catch (e) {\n            var msg = this._errorMsg('Invalid Signature');\n            throw new Error(msg);\n        }\n    };\n    /**\n     * Process the v, r, s values from the `sign` method of the base transaction.\n     */\n    Transaction.prototype._processSignature = function (v, r, s) {\n        var vBN = new ethereumjs_util_1.BN(v);\n        if (this.supports(types_1.Capability.EIP155ReplayProtection)) {\n            vBN.iadd(this.common.chainIdBN().muln(2).addn(8));\n        }\n        var opts = __assign(__assign({}, this.txOptions), { common: this.common });\n        return Transaction.fromTxData({\n            nonce: this.nonce,\n            gasPrice: this.gasPrice,\n            gasLimit: this.gasLimit,\n            to: this.to,\n            value: this.value,\n            data: this.data,\n            v: vBN,\n            r: new ethereumjs_util_1.BN(r),\n            s: new ethereumjs_util_1.BN(s),\n        }, opts);\n    };\n    /**\n     * Returns an object with the JSON representation of the transaction.\n     */\n    Transaction.prototype.toJSON = function () {\n        return {\n            nonce: (0, ethereumjs_util_1.bnToHex)(this.nonce),\n            gasPrice: (0, ethereumjs_util_1.bnToHex)(this.gasPrice),\n            gasLimit: (0, ethereumjs_util_1.bnToHex)(this.gasLimit),\n            to: this.to !== undefined ? this.to.toString() : undefined,\n            value: (0, ethereumjs_util_1.bnToHex)(this.value),\n            data: '0x' + this.data.toString('hex'),\n            v: this.v !== undefined ? (0, ethereumjs_util_1.bnToHex)(this.v) : undefined,\n            r: this.r !== undefined ? (0, ethereumjs_util_1.bnToHex)(this.r) : undefined,\n            s: this.s !== undefined ? (0, ethereumjs_util_1.bnToHex)(this.s) : undefined,\n        };\n    };\n    /**\n     * Validates tx's `v` value\n     */\n    Transaction.prototype._validateTxV = function (v, common) {\n        // Check for valid v values in the scope of a signed legacy tx\n        if (v !== undefined) {\n            // v is 1. not matching the EIP-155 chainId included case and...\n            // v is 2. not matching the classic v=27 or v=28 case\n            if (v.ltn(37) && !v.eqn(27) && !v.eqn(28)) {\n                throw new Error(\"Legacy txs need either v = 27/28 or v >= 37 (EIP-155 replay protection), got v = \".concat(v));\n            }\n        }\n        var chainIdBN;\n        // No unsigned tx and EIP-155 activated and chain ID included\n        if (v !== undefined &&\n            (!common || common.gteHardfork('spuriousDragon')) &&\n            !v.eqn(27) &&\n            !v.eqn(28)) {\n            if (common) {\n                var chainIdDoubled = common.chainIdBN().muln(2);\n                var isValidEIP155V = v.eq(chainIdDoubled.addn(35)) || v.eq(chainIdDoubled.addn(36));\n                if (!isValidEIP155V) {\n                    throw new Error(\"Incompatible EIP155-based V \".concat(v, \" and chain id \").concat(common.chainIdBN(), \". See the Common parameter of the Transaction constructor to set the chain id.\"));\n                }\n            }\n            else {\n                // Derive the original chain ID\n                var numSub = void 0;\n                if (v.subn(35).isEven()) {\n                    numSub = 35;\n                }\n                else {\n                    numSub = 36;\n                }\n                // Use derived chain ID to create a proper Common\n                chainIdBN = v.subn(numSub).divn(2);\n            }\n        }\n        return this._getCommon(common, chainIdBN);\n    };\n    /**\n     * @deprecated if you have called this internal method please use `tx.supports(Capabilities.EIP155ReplayProtection)` instead\n     */\n    Transaction.prototype._unsignedTxImplementsEIP155 = function () {\n        return this.common.gteHardfork('spuriousDragon');\n    };\n    /**\n     * @deprecated if you have called this internal method please use `tx.supports(Capabilities.EIP155ReplayProtection)` instead\n     */\n    Transaction.prototype._signedTxImplementsEIP155 = function () {\n        if (!this.isSigned()) {\n            var msg = this._errorMsg('This transaction is not signed');\n            throw new Error(msg);\n        }\n        var onEIP155BlockOrLater = this.common.gteHardfork('spuriousDragon');\n        // EIP155 spec:\n        // If block.number >= 2,675,000 and v = CHAIN_ID * 2 + 35 or v = CHAIN_ID * 2 + 36, then when computing the hash of a transaction for purposes of signing or recovering, instead of hashing only the first six elements (i.e. nonce, gasprice, startgas, to, value, data), hash nine elements, with v replaced by CHAIN_ID, r = 0 and s = 0.\n        var v = this.v;\n        var chainIdDoubled = this.common.chainIdBN().muln(2);\n        var vAndChainIdMeetEIP155Conditions = v.eq(chainIdDoubled.addn(35)) || v.eq(chainIdDoubled.addn(36));\n        return vAndChainIdMeetEIP155Conditions && onEIP155BlockOrLater;\n    };\n    /**\n     * Return a compact error string representation of the object\n     */\n    Transaction.prototype.errorStr = function () {\n        var errorStr = this._getSharedErrorPostfix();\n        errorStr += \" gasPrice=\".concat(this.gasPrice);\n        return errorStr;\n    };\n    /**\n     * Internal helper function to create an annotated error message\n     *\n     * @param msg Base error message\n     * @hidden\n     */\n    Transaction.prototype._errorMsg = function (msg) {\n        return \"\".concat(msg, \" (\").concat(this.errorStr(), \")\");\n    };\n    return Transaction;\n}(baseTransaction_1.BaseTransaction));\nexports.default = Transaction;\n//# sourceMappingURL=legacyTransaction.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ethereumjs_util_1 = require(\"ethereumjs-util\");\nvar _1 = require(\".\");\nvar TransactionFactory = /** @class */ (function () {\n    // It is not possible to instantiate a TransactionFactory object.\n    function TransactionFactory() {\n    }\n    /**\n     * Create a transaction from a `txData` object\n     *\n     * @param txData - The transaction data. The `type` field will determine which transaction type is returned (if undefined, creates a legacy transaction)\n     * @param txOptions - Options to pass on to the constructor of the transaction\n     */\n    TransactionFactory.fromTxData = function (txData, txOptions) {\n        if (txOptions === void 0) { txOptions = {}; }\n        if (!('type' in txData) || txData.type === undefined) {\n            // Assume legacy transaction\n            return _1.Transaction.fromTxData(txData, txOptions);\n        }\n        else {\n            var txType = new ethereumjs_util_1.BN((0, ethereumjs_util_1.toBuffer)(txData.type)).toNumber();\n            if (txType === 0) {\n                return _1.Transaction.fromTxData(txData, txOptions);\n            }\n            else if (txType === 1) {\n                return _1.AccessListEIP2930Transaction.fromTxData(txData, txOptions);\n            }\n            else if (txType === 2) {\n                return _1.FeeMarketEIP1559Transaction.fromTxData(txData, txOptions);\n            }\n            else {\n                throw new Error(\"Tx instantiation with type \".concat(txType, \" not supported\"));\n            }\n        }\n    };\n    /**\n     * This method tries to decode serialized data.\n     *\n     * @param data - The data Buffer\n     * @param txOptions - The transaction options\n     */\n    TransactionFactory.fromSerializedData = function (data, txOptions) {\n        if (txOptions === void 0) { txOptions = {}; }\n        if (data[0] <= 0x7f) {\n            // Determine the type.\n            var EIP = void 0;\n            switch (data[0]) {\n                case 1:\n                    EIP = 2930;\n                    break;\n                case 2:\n                    EIP = 1559;\n                    break;\n                default:\n                    throw new Error(\"TypedTransaction with ID \".concat(data[0], \" unknown\"));\n            }\n            if (EIP === 1559) {\n                return _1.FeeMarketEIP1559Transaction.fromSerializedTx(data, txOptions);\n            }\n            else {\n                // EIP === 2930\n                return _1.AccessListEIP2930Transaction.fromSerializedTx(data, txOptions);\n            }\n        }\n        else {\n            return _1.Transaction.fromSerializedTx(data, txOptions);\n        }\n    };\n    /**\n     * When decoding a BlockBody, in the transactions field, a field is either:\n     * A Buffer (a TypedTransaction - encoded as TransactionType || rlp(TransactionPayload))\n     * A Buffer[] (Legacy Transaction)\n     * This method returns the right transaction.\n     *\n     * @param data - A Buffer or Buffer[]\n     * @param txOptions - The transaction options\n     */\n    TransactionFactory.fromBlockBodyData = function (data, txOptions) {\n        if (txOptions === void 0) { txOptions = {}; }\n        if (Buffer.isBuffer(data)) {\n            return this.fromSerializedData(data, txOptions);\n        }\n        else if (Array.isArray(data)) {\n            // It is a legacy transaction\n            return _1.Transaction.fromValuesArray(data, txOptions);\n        }\n        else {\n            throw new Error('Cannot decode transaction: unknown type input');\n        }\n    };\n    /**\n     * This helper method allows one to retrieve the class which matches the transactionID\n     * If transactionID is undefined, returns the legacy transaction class.\n     * @deprecated - This method is deprecated and will be removed on the next major release\n     * @param transactionID\n     * @param _common - This option is not used\n     */\n    TransactionFactory.getTransactionClass = function (transactionID, _common) {\n        if (transactionID === void 0) { transactionID = 0; }\n        var legacyTxn = transactionID == 0 || (transactionID >= 0x80 && transactionID <= 0xff);\n        if (legacyTxn) {\n            return _1.Transaction;\n        }\n        switch (transactionID) {\n            case 1:\n                return _1.AccessListEIP2930Transaction;\n            case 2:\n                return _1.FeeMarketEIP1559Transaction;\n            default:\n                throw new Error(\"TypedTransaction with ID \".concat(transactionID, \" unknown\"));\n        }\n    };\n    return TransactionFactory;\n}());\nexports.default = TransactionFactory;\n//# sourceMappingURL=transactionFactory.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.N_DIV_2 = exports.isAccessList = exports.isAccessListBuffer = exports.Capability = void 0;\nvar ethereumjs_util_1 = require(\"ethereumjs-util\");\n/**\n * Can be used in conjunction with {@link Transaction.supports}\n * to query on tx capabilities\n */\nvar Capability;\n(function (Capability) {\n    /**\n     * Tx supports EIP-155 replay protection\n     * See: [155](https://eips.ethereum.org/EIPS/eip-155) Replay Attack Protection EIP\n     */\n    Capability[Capability[\"EIP155ReplayProtection\"] = 155] = \"EIP155ReplayProtection\";\n    /**\n     * Tx supports EIP-1559 gas fee market mechansim\n     * See: [1559](https://eips.ethereum.org/EIPS/eip-1559) Fee Market EIP\n     */\n    Capability[Capability[\"EIP1559FeeMarket\"] = 1559] = \"EIP1559FeeMarket\";\n    /**\n     * Tx is a typed transaction as defined in EIP-2718\n     * See: [2718](https://eips.ethereum.org/EIPS/eip-2718) Transaction Type EIP\n     */\n    Capability[Capability[\"EIP2718TypedTransaction\"] = 2718] = \"EIP2718TypedTransaction\";\n    /**\n     * Tx supports access list generation as defined in EIP-2930\n     * See: [2930](https://eips.ethereum.org/EIPS/eip-2930) Access Lists EIP\n     */\n    Capability[Capability[\"EIP2930AccessLists\"] = 2930] = \"EIP2930AccessLists\";\n})(Capability = exports.Capability || (exports.Capability = {}));\nfunction isAccessListBuffer(input) {\n    if (input.length === 0) {\n        return true;\n    }\n    var firstItem = input[0];\n    if (Array.isArray(firstItem)) {\n        return true;\n    }\n    return false;\n}\nexports.isAccessListBuffer = isAccessListBuffer;\nfunction isAccessList(input) {\n    return !isAccessListBuffer(input); // This is exactly the same method, except the output is negated.\n}\nexports.isAccessList = isAccessList;\n/**\n * A const defining secp256k1n/2\n */\nexports.N_DIV_2 = new ethereumjs_util_1.BN('7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0', 16);\n//# sourceMappingURL=types.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AccessLists = exports.checkMaxInitCodeSize = void 0;\nvar ethereumjs_util_1 = require(\"ethereumjs-util\");\nvar types_1 = require(\"./types\");\nfunction checkMaxInitCodeSize(common, length) {\n    if (length > common.param('vm', 'maxInitCodeSize')) {\n        throw new Error(\"the initcode size of this transaction is too large: it is \".concat(length, \" while the max is \").concat(common.param('vm', 'maxInitCodeSize')));\n    }\n}\nexports.checkMaxInitCodeSize = checkMaxInitCodeSize;\nvar AccessLists = /** @class */ (function () {\n    function AccessLists() {\n    }\n    AccessLists.getAccessListData = function (accessList) {\n        var AccessListJSON;\n        var bufferAccessList;\n        if (accessList && (0, types_1.isAccessList)(accessList)) {\n            AccessListJSON = accessList;\n            var newAccessList = [];\n            for (var i = 0; i < accessList.length; i++) {\n                var item = accessList[i];\n                var addressBuffer = (0, ethereumjs_util_1.toBuffer)(item.address);\n                var storageItems = [];\n                for (var index = 0; index < item.storageKeys.length; index++) {\n                    storageItems.push((0, ethereumjs_util_1.toBuffer)(item.storageKeys[index]));\n                }\n                newAccessList.push([addressBuffer, storageItems]);\n            }\n            bufferAccessList = newAccessList;\n        }\n        else {\n            bufferAccessList = accessList !== null && accessList !== void 0 ? accessList : [];\n            // build the JSON\n            var json = [];\n            for (var i = 0; i < bufferAccessList.length; i++) {\n                var data = bufferAccessList[i];\n                var address = (0, ethereumjs_util_1.bufferToHex)(data[0]);\n                var storageKeys = [];\n                for (var item = 0; item < data[1].length; item++) {\n                    storageKeys.push((0, ethereumjs_util_1.bufferToHex)(data[1][item]));\n                }\n                var jsonItem = {\n                    address: address,\n                    storageKeys: storageKeys,\n                };\n                json.push(jsonItem);\n            }\n            AccessListJSON = json;\n        }\n        return {\n            AccessListJSON: AccessListJSON,\n            accessList: bufferAccessList,\n        };\n    };\n    AccessLists.verifyAccessList = function (accessList) {\n        for (var key = 0; key < accessList.length; key++) {\n            var accessListItem = accessList[key];\n            var address = accessListItem[0];\n            var storageSlots = accessListItem[1];\n            if (accessListItem[2] !== undefined) {\n                throw new Error('Access list item cannot have 3 elements. It can only have an address, and an array of storage slots.');\n            }\n            if (address.length != 20) {\n                throw new Error('Invalid EIP-2930 transaction: address length should be 20 bytes');\n            }\n            for (var storageSlot = 0; storageSlot < storageSlots.length; storageSlot++) {\n                if (storageSlots[storageSlot].length != 32) {\n                    throw new Error('Invalid EIP-2930 transaction: storage slot length should be 32 bytes');\n                }\n            }\n        }\n    };\n    AccessLists.getAccessListJSON = function (accessList) {\n        var accessListJSON = [];\n        for (var index = 0; index < accessList.length; index++) {\n            var item = accessList[index];\n            var JSONItem = {\n                address: '0x' + (0, ethereumjs_util_1.setLengthLeft)(item[0], 20).toString('hex'),\n                storageKeys: [],\n            };\n            var storageSlots = item[1];\n            for (var slot = 0; slot < storageSlots.length; slot++) {\n                var storageSlot = storageSlots[slot];\n                JSONItem.storageKeys.push('0x' + (0, ethereumjs_util_1.setLengthLeft)(storageSlot, 32).toString('hex'));\n            }\n            accessListJSON.push(JSONItem);\n        }\n        return accessListJSON;\n    };\n    AccessLists.getDataFeeEIP2930 = function (accessList, common) {\n        var accessListStorageKeyCost = common.param('gasPrices', 'accessListStorageKeyCost');\n        var accessListAddressCost = common.param('gasPrices', 'accessListAddressCost');\n        var slots = 0;\n        for (var index = 0; index < accessList.length; index++) {\n            var item = accessList[index];\n            var storageSlots = item[1];\n            slots += storageSlots.length;\n        }\n        var addresses = accessList.length;\n        return addresses * accessListAddressCost + slots * accessListStorageKeyCost;\n    };\n    return AccessLists;\n}());\nexports.AccessLists = AccessLists;\n//# sourceMappingURL=util.js.map","module.exports = require('./lib')(require('./lib/elliptic'))\n","const EC = require('elliptic').ec\n\nconst ec = new EC('secp256k1')\nconst ecparams = ec.curve\n\n// Hack, we can not use bn.js@5, while elliptic uses bn.js@4\n// See https://github.com/indutny/elliptic/issues/191#issuecomment-569888758\nconst BN = ecparams.n.constructor\n\nfunction loadCompressedPublicKey (first, xbuf) {\n  let x = new BN(xbuf)\n\n  // overflow\n  if (x.cmp(ecparams.p) >= 0) return null\n  x = x.toRed(ecparams.red)\n\n  // compute corresponding Y\n  let y = x.redSqr().redIMul(x).redIAdd(ecparams.b).redSqrt()\n  if ((first === 0x03) !== y.isOdd()) y = y.redNeg()\n\n  return ec.keyPair({ pub: { x: x, y: y } })\n}\n\nfunction loadUncompressedPublicKey (first, xbuf, ybuf) {\n  let x = new BN(xbuf)\n  let y = new BN(ybuf)\n\n  // overflow\n  if (x.cmp(ecparams.p) >= 0 || y.cmp(ecparams.p) >= 0) return null\n\n  x = x.toRed(ecparams.red)\n  y = y.toRed(ecparams.red)\n\n  // is odd flag\n  if ((first === 0x06 || first === 0x07) && y.isOdd() !== (first === 0x07)) return null\n\n  // x*x*x + b = y*y\n  const x3 = x.redSqr().redIMul(x)\n  if (!y.redSqr().redISub(x3.redIAdd(ecparams.b)).isZero()) return null\n\n  return ec.keyPair({ pub: { x: x, y: y } })\n}\n\nfunction loadPublicKey (pubkey) {\n  // length should be validated in interface\n  const first = pubkey[0]\n  switch (first) {\n    case 0x02:\n    case 0x03:\n      if (pubkey.length !== 33) return null\n      return loadCompressedPublicKey(first, pubkey.subarray(1, 33))\n    case 0x04:\n    case 0x06:\n    case 0x07:\n      if (pubkey.length !== 65) return null\n      return loadUncompressedPublicKey(first, pubkey.subarray(1, 33), pubkey.subarray(33, 65))\n    default:\n      return null\n  }\n}\n\nfunction savePublicKey (output, point) {\n  const pubkey = point.encode(null, output.length === 33)\n  // Loop should be faster because we do not need create extra Uint8Array\n  // output.set(new Uint8Array(pubkey))\n  for (let i = 0; i < output.length; ++i) output[i] = pubkey[i]\n}\n\nmodule.exports = {\n  contextRandomize () {\n    return 0\n  },\n\n  privateKeyVerify (seckey) {\n    const bn = new BN(seckey)\n    return bn.cmp(ecparams.n) < 0 && !bn.isZero() ? 0 : 1\n  },\n\n  privateKeyNegate (seckey) {\n    const bn = new BN(seckey)\n    const negate = ecparams.n.sub(bn).umod(ecparams.n).toArrayLike(Uint8Array, 'be', 32)\n    seckey.set(negate)\n    return 0\n  },\n\n  privateKeyTweakAdd (seckey, tweak) {\n    const bn = new BN(tweak)\n    if (bn.cmp(ecparams.n) >= 0) return 1\n\n    bn.iadd(new BN(seckey))\n    if (bn.cmp(ecparams.n) >= 0) bn.isub(ecparams.n)\n    if (bn.isZero()) return 1\n\n    const tweaked = bn.toArrayLike(Uint8Array, 'be', 32)\n    seckey.set(tweaked)\n\n    return 0\n  },\n\n  privateKeyTweakMul (seckey, tweak) {\n    let bn = new BN(tweak)\n    if (bn.cmp(ecparams.n) >= 0 || bn.isZero()) return 1\n\n    bn.imul(new BN(seckey))\n    if (bn.cmp(ecparams.n) >= 0) bn = bn.umod(ecparams.n)\n\n    const tweaked = bn.toArrayLike(Uint8Array, 'be', 32)\n    seckey.set(tweaked)\n\n    return 0\n  },\n\n  publicKeyVerify (pubkey) {\n    const pair = loadPublicKey(pubkey)\n    return pair === null ? 1 : 0\n  },\n\n  publicKeyCreate (output, seckey) {\n    const bn = new BN(seckey)\n    if (bn.cmp(ecparams.n) >= 0 || bn.isZero()) return 1\n\n    const point = ec.keyFromPrivate(seckey).getPublic()\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  publicKeyConvert (output, pubkey) {\n    const pair = loadPublicKey(pubkey)\n    if (pair === null) return 1\n\n    const point = pair.getPublic()\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  publicKeyNegate (output, pubkey) {\n    const pair = loadPublicKey(pubkey)\n    if (pair === null) return 1\n\n    const point = pair.getPublic()\n    point.y = point.y.redNeg()\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  publicKeyCombine (output, pubkeys) {\n    const pairs = new Array(pubkeys.length)\n    for (let i = 0; i < pubkeys.length; ++i) {\n      pairs[i] = loadPublicKey(pubkeys[i])\n      if (pairs[i] === null) return 1\n    }\n\n    let point = pairs[0].getPublic()\n    for (let i = 1; i < pairs.length; ++i) point = point.add(pairs[i].pub)\n    if (point.isInfinity()) return 2\n\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  publicKeyTweakAdd (output, pubkey, tweak) {\n    const pair = loadPublicKey(pubkey)\n    if (pair === null) return 1\n\n    tweak = new BN(tweak)\n    if (tweak.cmp(ecparams.n) >= 0) return 2\n\n    const point = pair.getPublic().add(ecparams.g.mul(tweak))\n    if (point.isInfinity()) return 2\n\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  publicKeyTweakMul (output, pubkey, tweak) {\n    const pair = loadPublicKey(pubkey)\n    if (pair === null) return 1\n\n    tweak = new BN(tweak)\n    if (tweak.cmp(ecparams.n) >= 0 || tweak.isZero()) return 2\n\n    const point = pair.getPublic().mul(tweak)\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  signatureNormalize (sig) {\n    const r = new BN(sig.subarray(0, 32))\n    const s = new BN(sig.subarray(32, 64))\n    if (r.cmp(ecparams.n) >= 0 || s.cmp(ecparams.n) >= 0) return 1\n\n    if (s.cmp(ec.nh) === 1) {\n      sig.set(ecparams.n.sub(s).toArrayLike(Uint8Array, 'be', 32), 32)\n    }\n\n    return 0\n  },\n\n  // Copied 1-to-1 from https://github.com/bitcoinjs/bip66/blob/master/index.js\n  // Adapted for Uint8Array instead Buffer\n  signatureExport (obj, sig) {\n    const sigR = sig.subarray(0, 32)\n    const sigS = sig.subarray(32, 64)\n    if (new BN(sigR).cmp(ecparams.n) >= 0) return 1\n    if (new BN(sigS).cmp(ecparams.n) >= 0) return 1\n\n    const { output } = obj\n\n    // Prepare R\n    let r = output.subarray(4, 4 + 33)\n    r[0] = 0x00\n    r.set(sigR, 1)\n\n    let lenR = 33\n    let posR = 0\n    for (; lenR > 1 && r[posR] === 0x00 && !(r[posR + 1] & 0x80); --lenR, ++posR);\n\n    r = r.subarray(posR)\n    if (r[0] & 0x80) return 1\n    if (lenR > 1 && (r[0] === 0x00) && !(r[1] & 0x80)) return 1\n\n    // Prepare S\n    let s = output.subarray(6 + 33, 6 + 33 + 33)\n    s[0] = 0x00\n    s.set(sigS, 1)\n\n    let lenS = 33\n    let posS = 0\n    for (; lenS > 1 && s[posS] === 0x00 && !(s[posS + 1] & 0x80); --lenS, ++posS);\n\n    s = s.subarray(posS)\n    if (s[0] & 0x80) return 1\n    if (lenS > 1 && (s[0] === 0x00) && !(s[1] & 0x80)) return 1\n\n    // Set output length for return\n    obj.outputlen = 6 + lenR + lenS\n\n    // Output in specified format\n    // 0x30 [total-length] 0x02 [R-length] [R] 0x02 [S-length] [S]\n    output[0] = 0x30\n    output[1] = obj.outputlen - 2\n    output[2] = 0x02\n    output[3] = r.length\n    output.set(r, 4)\n    output[4 + lenR] = 0x02\n    output[5 + lenR] = s.length\n    output.set(s, 6 + lenR)\n\n    return 0\n  },\n\n  // Copied 1-to-1 from https://github.com/bitcoinjs/bip66/blob/master/index.js\n  // Adapted for Uint8Array instead Buffer\n  signatureImport (output, sig) {\n    if (sig.length < 8) return 1\n    if (sig.length > 72) return 1\n    if (sig[0] !== 0x30) return 1\n    if (sig[1] !== sig.length - 2) return 1\n    if (sig[2] !== 0x02) return 1\n\n    const lenR = sig[3]\n    if (lenR === 0) return 1\n    if (5 + lenR >= sig.length) return 1\n    if (sig[4 + lenR] !== 0x02) return 1\n\n    const lenS = sig[5 + lenR]\n    if (lenS === 0) return 1\n    if ((6 + lenR + lenS) !== sig.length) return 1\n\n    if (sig[4] & 0x80) return 1\n    if (lenR > 1 && (sig[4] === 0x00) && !(sig[5] & 0x80)) return 1\n\n    if (sig[lenR + 6] & 0x80) return 1\n    if (lenS > 1 && (sig[lenR + 6] === 0x00) && !(sig[lenR + 7] & 0x80)) return 1\n\n    let sigR = sig.subarray(4, 4 + lenR)\n    if (sigR.length === 33 && sigR[0] === 0x00) sigR = sigR.subarray(1)\n    if (sigR.length > 32) return 1\n\n    let sigS = sig.subarray(6 + lenR)\n    if (sigS.length === 33 && sigS[0] === 0x00) sigS = sigS.slice(1)\n    if (sigS.length > 32) throw new Error('S length is too long')\n\n    let r = new BN(sigR)\n    if (r.cmp(ecparams.n) >= 0) r = new BN(0)\n\n    let s = new BN(sig.subarray(6 + lenR))\n    if (s.cmp(ecparams.n) >= 0) s = new BN(0)\n\n    output.set(r.toArrayLike(Uint8Array, 'be', 32), 0)\n    output.set(s.toArrayLike(Uint8Array, 'be', 32), 32)\n\n    return 0\n  },\n\n  ecdsaSign (obj, message, seckey, data, noncefn) {\n    if (noncefn) {\n      const _noncefn = noncefn\n      noncefn = (counter) => {\n        const nonce = _noncefn(message, seckey, null, data, counter)\n\n        const isValid = nonce instanceof Uint8Array && nonce.length === 32\n        if (!isValid) throw new Error('This is the way')\n\n        return new BN(nonce)\n      }\n    }\n\n    const d = new BN(seckey)\n    if (d.cmp(ecparams.n) >= 0 || d.isZero()) return 1\n\n    let sig\n    try {\n      sig = ec.sign(message, seckey, { canonical: true, k: noncefn, pers: data })\n    } catch (err) {\n      return 1\n    }\n\n    obj.signature.set(sig.r.toArrayLike(Uint8Array, 'be', 32), 0)\n    obj.signature.set(sig.s.toArrayLike(Uint8Array, 'be', 32), 32)\n    obj.recid = sig.recoveryParam\n\n    return 0\n  },\n\n  ecdsaVerify (sig, msg32, pubkey) {\n    const sigObj = { r: sig.subarray(0, 32), s: sig.subarray(32, 64) }\n\n    const sigr = new BN(sigObj.r)\n    const sigs = new BN(sigObj.s)\n    if (sigr.cmp(ecparams.n) >= 0 || sigs.cmp(ecparams.n) >= 0) return 1\n    if (sigs.cmp(ec.nh) === 1 || sigr.isZero() || sigs.isZero()) return 3\n\n    const pair = loadPublicKey(pubkey)\n    if (pair === null) return 2\n\n    const point = pair.getPublic()\n    const isValid = ec.verify(msg32, sigObj, point)\n    return isValid ? 0 : 3\n  },\n\n  ecdsaRecover (output, sig, recid, msg32) {\n    const sigObj = { r: sig.slice(0, 32), s: sig.slice(32, 64) }\n\n    const sigr = new BN(sigObj.r)\n    const sigs = new BN(sigObj.s)\n    if (sigr.cmp(ecparams.n) >= 0 || sigs.cmp(ecparams.n) >= 0) return 1\n\n    if (sigr.isZero() || sigs.isZero()) return 2\n\n    // Can throw `throw new Error('Unable to find sencond key candinate');`\n    let point\n    try {\n      point = ec.recoverPubKey(msg32, sigObj, recid)\n    } catch (err) {\n      return 2\n    }\n\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  ecdh (output, pubkey, seckey, data, hashfn, xbuf, ybuf) {\n    const pair = loadPublicKey(pubkey)\n    if (pair === null) return 1\n\n    const scalar = new BN(seckey)\n    if (scalar.cmp(ecparams.n) >= 0 || scalar.isZero()) return 2\n\n    const point = pair.getPublic().mul(scalar)\n\n    if (hashfn === undefined) {\n      const data = point.encode(null, true)\n      const sha256 = ec.hash().update(data).digest()\n      for (let i = 0; i < 32; ++i) output[i] = sha256[i]\n    } else {\n      if (!xbuf) xbuf = new Uint8Array(32)\n      const x = point.getX().toArray('be', 32)\n      for (let i = 0; i < 32; ++i) xbuf[i] = x[i]\n\n      if (!ybuf) ybuf = new Uint8Array(32)\n      const y = point.getY().toArray('be', 32)\n      for (let i = 0; i < 32; ++i) ybuf[i] = y[i]\n\n      const hash = hashfn(xbuf, ybuf, data)\n\n      const isValid = hash instanceof Uint8Array && hash.length === output.length\n      if (!isValid) return 2\n\n      output.set(hash)\n    }\n\n    return 0\n  }\n}\n","const errors = {\n  IMPOSSIBLE_CASE: 'Impossible case. Please create issue.',\n  TWEAK_ADD:\n    'The tweak was out of range or the resulted private key is invalid',\n  TWEAK_MUL: 'The tweak was out of range or equal to zero',\n  CONTEXT_RANDOMIZE_UNKNOW: 'Unknow error on context randomization',\n  SECKEY_INVALID: 'Private Key is invalid',\n  PUBKEY_PARSE: 'Public Key could not be parsed',\n  PUBKEY_SERIALIZE: 'Public Key serialization error',\n  PUBKEY_COMBINE: 'The sum of the public keys is not valid',\n  SIG_PARSE: 'Signature could not be parsed',\n  SIGN: 'The nonce generation function failed, or the private key was invalid',\n  RECOVER: 'Public key could not be recover',\n  ECDH: 'Scalar was invalid (zero or overflow)'\n}\n\nfunction assert (cond, msg) {\n  if (!cond) throw new Error(msg)\n}\n\nfunction isUint8Array (name, value, length) {\n  assert(value instanceof Uint8Array, `Expected ${name} to be an Uint8Array`)\n\n  if (length !== undefined) {\n    if (Array.isArray(length)) {\n      const numbers = length.join(', ')\n      const msg = `Expected ${name} to be an Uint8Array with length [${numbers}]`\n      assert(length.includes(value.length), msg)\n    } else {\n      const msg = `Expected ${name} to be an Uint8Array with length ${length}`\n      assert(value.length === length, msg)\n    }\n  }\n}\n\nfunction isCompressed (value) {\n  assert(toTypeString(value) === 'Boolean', 'Expected compressed to be a Boolean')\n}\n\nfunction getAssertedOutput (output = (len) => new Uint8Array(len), length) {\n  if (typeof output === 'function') output = output(length)\n  isUint8Array('output', output, length)\n  return output\n}\n\nfunction toTypeString (value) {\n  return Object.prototype.toString.call(value).slice(8, -1)\n}\n\nmodule.exports = (secp256k1) => {\n  return {\n    contextRandomize (seed) {\n      assert(\n        seed === null || seed instanceof Uint8Array,\n        'Expected seed to be an Uint8Array or null'\n      )\n      if (seed !== null) isUint8Array('seed', seed, 32)\n\n      switch (secp256k1.contextRandomize(seed)) {\n        case 1:\n          throw new Error(errors.CONTEXT_RANDOMIZE_UNKNOW)\n      }\n    },\n\n    privateKeyVerify (seckey) {\n      isUint8Array('private key', seckey, 32)\n\n      return secp256k1.privateKeyVerify(seckey) === 0\n    },\n\n    privateKeyNegate (seckey) {\n      isUint8Array('private key', seckey, 32)\n\n      switch (secp256k1.privateKeyNegate(seckey)) {\n        case 0:\n          return seckey\n        case 1:\n          throw new Error(errors.IMPOSSIBLE_CASE)\n      }\n    },\n\n    privateKeyTweakAdd (seckey, tweak) {\n      isUint8Array('private key', seckey, 32)\n      isUint8Array('tweak', tweak, 32)\n\n      switch (secp256k1.privateKeyTweakAdd(seckey, tweak)) {\n        case 0:\n          return seckey\n        case 1:\n          throw new Error(errors.TWEAK_ADD)\n      }\n    },\n\n    privateKeyTweakMul (seckey, tweak) {\n      isUint8Array('private key', seckey, 32)\n      isUint8Array('tweak', tweak, 32)\n\n      switch (secp256k1.privateKeyTweakMul(seckey, tweak)) {\n        case 0:\n          return seckey\n        case 1:\n          throw new Error(errors.TWEAK_MUL)\n      }\n    },\n\n    publicKeyVerify (pubkey) {\n      isUint8Array('public key', pubkey, [33, 65])\n\n      return secp256k1.publicKeyVerify(pubkey) === 0\n    },\n\n    publicKeyCreate (seckey, compressed = true, output) {\n      isUint8Array('private key', seckey, 32)\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.publicKeyCreate(output, seckey)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.SECKEY_INVALID)\n        case 2:\n          throw new Error(errors.PUBKEY_SERIALIZE)\n      }\n    },\n\n    publicKeyConvert (pubkey, compressed = true, output) {\n      isUint8Array('public key', pubkey, [33, 65])\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.publicKeyConvert(output, pubkey)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE)\n        case 2:\n          throw new Error(errors.PUBKEY_SERIALIZE)\n      }\n    },\n\n    publicKeyNegate (pubkey, compressed = true, output) {\n      isUint8Array('public key', pubkey, [33, 65])\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.publicKeyNegate(output, pubkey)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE)\n        case 2:\n          throw new Error(errors.IMPOSSIBLE_CASE)\n        case 3:\n          throw new Error(errors.PUBKEY_SERIALIZE)\n      }\n    },\n\n    publicKeyCombine (pubkeys, compressed = true, output) {\n      assert(Array.isArray(pubkeys), 'Expected public keys to be an Array')\n      assert(pubkeys.length > 0, 'Expected public keys array will have more than zero items')\n      for (const pubkey of pubkeys) {\n        isUint8Array('public key', pubkey, [33, 65])\n      }\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.publicKeyCombine(output, pubkeys)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE)\n        case 2:\n          throw new Error(errors.PUBKEY_COMBINE)\n        case 3:\n          throw new Error(errors.PUBKEY_SERIALIZE)\n      }\n    },\n\n    publicKeyTweakAdd (pubkey, tweak, compressed = true, output) {\n      isUint8Array('public key', pubkey, [33, 65])\n      isUint8Array('tweak', tweak, 32)\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.publicKeyTweakAdd(output, pubkey, tweak)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE)\n        case 2:\n          throw new Error(errors.TWEAK_ADD)\n      }\n    },\n\n    publicKeyTweakMul (pubkey, tweak, compressed = true, output) {\n      isUint8Array('public key', pubkey, [33, 65])\n      isUint8Array('tweak', tweak, 32)\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.publicKeyTweakMul(output, pubkey, tweak)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE)\n        case 2:\n          throw new Error(errors.TWEAK_MUL)\n      }\n    },\n\n    signatureNormalize (sig) {\n      isUint8Array('signature', sig, 64)\n\n      switch (secp256k1.signatureNormalize(sig)) {\n        case 0:\n          return sig\n        case 1:\n          throw new Error(errors.SIG_PARSE)\n      }\n    },\n\n    signatureExport (sig, output) {\n      isUint8Array('signature', sig, 64)\n      output = getAssertedOutput(output, 72)\n\n      const obj = { output, outputlen: 72 }\n      switch (secp256k1.signatureExport(obj, sig)) {\n        case 0:\n          return output.slice(0, obj.outputlen)\n        case 1:\n          throw new Error(errors.SIG_PARSE)\n        case 2:\n          throw new Error(errors.IMPOSSIBLE_CASE)\n      }\n    },\n\n    signatureImport (sig, output) {\n      isUint8Array('signature', sig)\n      output = getAssertedOutput(output, 64)\n\n      switch (secp256k1.signatureImport(output, sig)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.SIG_PARSE)\n        case 2:\n          throw new Error(errors.IMPOSSIBLE_CASE)\n      }\n    },\n\n    ecdsaSign (msg32, seckey, options = {}, output) {\n      isUint8Array('message', msg32, 32)\n      isUint8Array('private key', seckey, 32)\n      assert(toTypeString(options) === 'Object', 'Expected options to be an Object')\n      if (options.data !== undefined) isUint8Array('options.data', options.data)\n      if (options.noncefn !== undefined) assert(toTypeString(options.noncefn) === 'Function', 'Expected options.noncefn to be a Function')\n      output = getAssertedOutput(output, 64)\n\n      const obj = { signature: output, recid: null }\n      switch (secp256k1.ecdsaSign(obj, msg32, seckey, options.data, options.noncefn)) {\n        case 0:\n          return obj\n        case 1:\n          throw new Error(errors.SIGN)\n        case 2:\n          throw new Error(errors.IMPOSSIBLE_CASE)\n      }\n    },\n\n    ecdsaVerify (sig, msg32, pubkey) {\n      isUint8Array('signature', sig, 64)\n      isUint8Array('message', msg32, 32)\n      isUint8Array('public key', pubkey, [33, 65])\n\n      switch (secp256k1.ecdsaVerify(sig, msg32, pubkey)) {\n        case 0:\n          return true\n        case 3:\n          return false\n        case 1:\n          throw new Error(errors.SIG_PARSE)\n        case 2:\n          throw new Error(errors.PUBKEY_PARSE)\n      }\n    },\n\n    ecdsaRecover (sig, recid, msg32, compressed = true, output) {\n      isUint8Array('signature', sig, 64)\n      assert(\n        toTypeString(recid) === 'Number' &&\n          recid >= 0 &&\n          recid <= 3,\n        'Expected recovery id to be a Number within interval [0, 3]'\n      )\n      isUint8Array('message', msg32, 32)\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.ecdsaRecover(output, sig, recid, msg32)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.SIG_PARSE)\n        case 2:\n          throw new Error(errors.RECOVER)\n        case 3:\n          throw new Error(errors.IMPOSSIBLE_CASE)\n      }\n    },\n\n    ecdh (pubkey, seckey, options = {}, output) {\n      isUint8Array('public key', pubkey, [33, 65])\n      isUint8Array('private key', seckey, 32)\n      assert(toTypeString(options) === 'Object', 'Expected options to be an Object')\n      if (options.data !== undefined) isUint8Array('options.data', options.data)\n      if (options.hashfn !== undefined) {\n        assert(toTypeString(options.hashfn) === 'Function', 'Expected options.hashfn to be a Function')\n        if (options.xbuf !== undefined) isUint8Array('options.xbuf', options.xbuf, 32)\n        if (options.ybuf !== undefined) isUint8Array('options.ybuf', options.ybuf, 32)\n        isUint8Array('output', output)\n      } else {\n        output = getAssertedOutput(output, 32)\n      }\n\n      switch (secp256k1.ecdh(output, pubkey, seckey, options.data, options.hashfn, options.xbuf, options.ybuf)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE)\n        case 2:\n          throw new Error(errors.ECDH)\n      }\n    }\n  }\n}\n","\"use strict\";\n\n(function(root) {\n    const MAX_VALUE = 0x7fffffff;\n\n    // The SHA256 and PBKDF2 implementation are from scrypt-async-js:\n    // See: https://github.com/dchest/scrypt-async-js\n    function SHA256(m) {\n        const K = new Uint32Array([\n           0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b,\n           0x59f111f1, 0x923f82a4, 0xab1c5ed5, 0xd807aa98, 0x12835b01,\n           0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7,\n           0xc19bf174, 0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,\n           0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da, 0x983e5152,\n           0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147,\n           0x06ca6351, 0x14292967, 0x27b70a85, 0x2e1b2138, 0x4d2c6dfc,\n           0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n           0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819,\n           0xd6990624, 0xf40e3585, 0x106aa070, 0x19a4c116, 0x1e376c08,\n           0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f,\n           0x682e6ff3, 0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n           0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n       ]);\n\n        let h0 = 0x6a09e667, h1 = 0xbb67ae85, h2 = 0x3c6ef372, h3 = 0xa54ff53a;\n        let h4 = 0x510e527f, h5 = 0x9b05688c, h6 = 0x1f83d9ab, h7 = 0x5be0cd19;\n        const w = new Uint32Array(64);\n\n        function blocks(p) {\n            let off = 0, len = p.length;\n            while (len >= 64) {\n                let a = h0, b = h1, c = h2, d = h3, e = h4, f = h5, g = h6, h = h7, u, i, j, t1, t2;\n\n                for (i = 0; i < 16; i++) {\n                    j = off + i*4;\n                    w[i] = ((p[j] & 0xff)<<24) | ((p[j+1] & 0xff)<<16) |\n                    ((p[j+2] & 0xff)<<8) | (p[j+3] & 0xff);\n                }\n\n                for (i = 16; i < 64; i++) {\n                    u = w[i-2];\n                    t1 = ((u>>>17) | (u<<(32-17))) ^ ((u>>>19) | (u<<(32-19))) ^ (u>>>10);\n\n                    u = w[i-15];\n                    t2 = ((u>>>7) | (u<<(32-7))) ^ ((u>>>18) | (u<<(32-18))) ^ (u>>>3);\n\n                    w[i] = (((t1 + w[i-7]) | 0) + ((t2 + w[i-16]) | 0)) | 0;\n                }\n\n                for (i = 0; i < 64; i++) {\n                    t1 = ((((((e>>>6) | (e<<(32-6))) ^ ((e>>>11) | (e<<(32-11))) ^\n                             ((e>>>25) | (e<<(32-25)))) + ((e & f) ^ (~e & g))) | 0) +\n                          ((h + ((K[i] + w[i]) | 0)) | 0)) | 0;\n\n                    t2 = ((((a>>>2) | (a<<(32-2))) ^ ((a>>>13) | (a<<(32-13))) ^\n                           ((a>>>22) | (a<<(32-22)))) + ((a & b) ^ (a & c) ^ (b & c))) | 0;\n\n                    h = g;\n                    g = f;\n                    f = e;\n                    e = (d + t1) | 0;\n                    d = c;\n                    c = b;\n                    b = a;\n                    a = (t1 + t2) | 0;\n                }\n\n                h0 = (h0 + a) | 0;\n                h1 = (h1 + b) | 0;\n                h2 = (h2 + c) | 0;\n                h3 = (h3 + d) | 0;\n                h4 = (h4 + e) | 0;\n                h5 = (h5 + f) | 0;\n                h6 = (h6 + g) | 0;\n                h7 = (h7 + h) | 0;\n\n                off += 64;\n                len -= 64;\n            }\n        }\n\n        blocks(m);\n\n        let i, bytesLeft = m.length % 64,\n        bitLenHi = (m.length / 0x20000000) | 0,\n        bitLenLo = m.length << 3,\n        numZeros = (bytesLeft < 56) ? 56 : 120,\n        p = m.slice(m.length - bytesLeft, m.length);\n\n        p.push(0x80);\n        for (i = bytesLeft + 1; i < numZeros; i++) { p.push(0); }\n        p.push((bitLenHi >>> 24) & 0xff);\n        p.push((bitLenHi >>> 16) & 0xff);\n        p.push((bitLenHi >>> 8)  & 0xff);\n        p.push((bitLenHi >>> 0)  & 0xff);\n        p.push((bitLenLo >>> 24) & 0xff);\n        p.push((bitLenLo >>> 16) & 0xff);\n        p.push((bitLenLo >>> 8)  & 0xff);\n        p.push((bitLenLo >>> 0)  & 0xff);\n\n        blocks(p);\n\n        return [\n            (h0 >>> 24) & 0xff, (h0 >>> 16) & 0xff, (h0 >>> 8) & 0xff, (h0 >>> 0) & 0xff,\n            (h1 >>> 24) & 0xff, (h1 >>> 16) & 0xff, (h1 >>> 8) & 0xff, (h1 >>> 0) & 0xff,\n            (h2 >>> 24) & 0xff, (h2 >>> 16) & 0xff, (h2 >>> 8) & 0xff, (h2 >>> 0) & 0xff,\n            (h3 >>> 24) & 0xff, (h3 >>> 16) & 0xff, (h3 >>> 8) & 0xff, (h3 >>> 0) & 0xff,\n            (h4 >>> 24) & 0xff, (h4 >>> 16) & 0xff, (h4 >>> 8) & 0xff, (h4 >>> 0) & 0xff,\n            (h5 >>> 24) & 0xff, (h5 >>> 16) & 0xff, (h5 >>> 8) & 0xff, (h5 >>> 0) & 0xff,\n            (h6 >>> 24) & 0xff, (h6 >>> 16) & 0xff, (h6 >>> 8) & 0xff, (h6 >>> 0) & 0xff,\n            (h7 >>> 24) & 0xff, (h7 >>> 16) & 0xff, (h7 >>> 8) & 0xff, (h7 >>> 0) & 0xff\n        ];\n    }\n\n    function PBKDF2_HMAC_SHA256_OneIter(password, salt, dkLen) {\n        // compress password if it's longer than hash block length\n        password = (password.length <= 64) ? password : SHA256(password);\n\n        const innerLen = 64 + salt.length + 4;\n        const inner = new Array(innerLen);\n        const outerKey = new Array(64);\n\n        let i;\n        let dk = [];\n\n        // inner = (password ^ ipad) || salt || counter\n        for (i = 0; i < 64; i++) { inner[i] = 0x36; }\n        for (i = 0; i < password.length; i++) { inner[i] ^= password[i]; }\n        for (i = 0; i < salt.length; i++) { inner[64 + i] = salt[i]; }\n        for (i = innerLen - 4; i < innerLen; i++) { inner[i] = 0; }\n\n        // outerKey = password ^ opad\n        for (i = 0; i < 64; i++) outerKey[i] = 0x5c;\n        for (i = 0; i < password.length; i++) outerKey[i] ^= password[i];\n\n        // increments counter inside inner\n        function incrementCounter() {\n            for (let i = innerLen - 1; i >= innerLen - 4; i--) {\n                inner[i]++;\n                if (inner[i] <= 0xff) return;\n                inner[i] = 0;\n            }\n        }\n\n        // output blocks = SHA256(outerKey || SHA256(inner)) ...\n        while (dkLen >= 32) {\n            incrementCounter();\n            dk = dk.concat(SHA256(outerKey.concat(SHA256(inner))));\n            dkLen -= 32;\n        }\n        if (dkLen > 0) {\n            incrementCounter();\n            dk = dk.concat(SHA256(outerKey.concat(SHA256(inner))).slice(0, dkLen));\n        }\n\n        return dk;\n    }\n\n    // The following is an adaptation of scryptsy\n    // See: https://www.npmjs.com/package/scryptsy\n    function blockmix_salsa8(BY, Yi, r, x, _X) {\n        let i;\n\n        arraycopy(BY, (2 * r - 1) * 16, _X, 0, 16);\n        for (i = 0; i < 2 * r; i++) {\n            blockxor(BY, i * 16, _X, 16);\n            salsa20_8(_X, x);\n            arraycopy(_X, 0, BY, Yi + (i * 16), 16);\n        }\n\n        for (i = 0; i < r; i++) {\n            arraycopy(BY, Yi + (i * 2) * 16, BY, (i * 16), 16);\n        }\n\n        for (i = 0; i < r; i++) {\n            arraycopy(BY, Yi + (i * 2 + 1) * 16, BY, (i + r) * 16, 16);\n        }\n    }\n\n    function R(a, b) {\n        return (a << b) | (a >>> (32 - b));\n    }\n\n    function salsa20_8(B, x) {\n        arraycopy(B, 0, x, 0, 16);\n\n        for (let i = 8; i > 0; i -= 2) {\n            x[ 4] ^= R(x[ 0] + x[12], 7);\n            x[ 8] ^= R(x[ 4] + x[ 0], 9);\n            x[12] ^= R(x[ 8] + x[ 4], 13);\n            x[ 0] ^= R(x[12] + x[ 8], 18);\n            x[ 9] ^= R(x[ 5] + x[ 1], 7);\n            x[13] ^= R(x[ 9] + x[ 5], 9);\n            x[ 1] ^= R(x[13] + x[ 9], 13);\n            x[ 5] ^= R(x[ 1] + x[13], 18);\n            x[14] ^= R(x[10] + x[ 6], 7);\n            x[ 2] ^= R(x[14] + x[10], 9);\n            x[ 6] ^= R(x[ 2] + x[14], 13);\n            x[10] ^= R(x[ 6] + x[ 2], 18);\n            x[ 3] ^= R(x[15] + x[11], 7);\n            x[ 7] ^= R(x[ 3] + x[15], 9);\n            x[11] ^= R(x[ 7] + x[ 3], 13);\n            x[15] ^= R(x[11] + x[ 7], 18);\n            x[ 1] ^= R(x[ 0] + x[ 3], 7);\n            x[ 2] ^= R(x[ 1] + x[ 0], 9);\n            x[ 3] ^= R(x[ 2] + x[ 1], 13);\n            x[ 0] ^= R(x[ 3] + x[ 2], 18);\n            x[ 6] ^= R(x[ 5] + x[ 4], 7);\n            x[ 7] ^= R(x[ 6] + x[ 5], 9);\n            x[ 4] ^= R(x[ 7] + x[ 6], 13);\n            x[ 5] ^= R(x[ 4] + x[ 7], 18);\n            x[11] ^= R(x[10] + x[ 9], 7);\n            x[ 8] ^= R(x[11] + x[10], 9);\n            x[ 9] ^= R(x[ 8] + x[11], 13);\n            x[10] ^= R(x[ 9] + x[ 8], 18);\n            x[12] ^= R(x[15] + x[14], 7);\n            x[13] ^= R(x[12] + x[15], 9);\n            x[14] ^= R(x[13] + x[12], 13);\n            x[15] ^= R(x[14] + x[13], 18);\n        }\n\n        for (let i = 0; i < 16; ++i) {\n            B[i] += x[i];\n        }\n    }\n\n    // naive approach... going back to loop unrolling may yield additional performance\n    function blockxor(S, Si, D, len) {\n        for (let i = 0; i < len; i++) {\n            D[i] ^= S[Si + i]\n        }\n    }\n\n    function arraycopy(src, srcPos, dest, destPos, length) {\n        while (length--) {\n            dest[destPos++] = src[srcPos++];\n        }\n    }\n\n    function checkBufferish(o) {\n        if (!o || typeof(o.length) !== 'number') { return false; }\n\n        for (let i = 0; i < o.length; i++) {\n            const v = o[i];\n            if (typeof(v) !== 'number' || v % 1 || v < 0 || v >= 256) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    function ensureInteger(value, name) {\n        if (typeof(value) !== \"number\" || (value % 1)) { throw new Error('invalid ' + name); }\n        return value;\n    }\n\n    // N = Cpu cost, r = Memory cost, p = parallelization cost\n    // callback(error, progress, key)\n    function _scrypt(password, salt, N, r, p, dkLen, callback) {\n\n        N = ensureInteger(N, 'N');\n        r = ensureInteger(r, 'r');\n        p = ensureInteger(p, 'p');\n\n        dkLen = ensureInteger(dkLen, 'dkLen');\n\n        if (N === 0 || (N & (N - 1)) !== 0) { throw new Error('N must be power of 2'); }\n\n        if (N > MAX_VALUE / 128 / r) { throw new Error('N too large'); }\n        if (r > MAX_VALUE / 128 / p) { throw new Error('r too large'); }\n\n        if (!checkBufferish(password)) {\n            throw new Error('password must be an array or buffer');\n        }\n        password = Array.prototype.slice.call(password);\n\n        if (!checkBufferish(salt)) {\n            throw new Error('salt must be an array or buffer');\n        }\n        salt = Array.prototype.slice.call(salt);\n\n        let b = PBKDF2_HMAC_SHA256_OneIter(password, salt, p * 128 * r);\n        const B = new Uint32Array(p * 32 * r)\n        for (let i = 0; i < B.length; i++) {\n            const j = i * 4;\n            B[i] = ((b[j + 3] & 0xff) << 24) |\n                   ((b[j + 2] & 0xff) << 16) |\n                   ((b[j + 1] & 0xff) << 8) |\n                   ((b[j + 0] & 0xff) << 0);\n        }\n\n        const XY = new Uint32Array(64 * r);\n        const V = new Uint32Array(32 * r * N);\n\n        const Yi = 32 * r;\n\n        // scratch space\n        const x = new Uint32Array(16);       // salsa20_8\n        const _X = new Uint32Array(16);      // blockmix_salsa8\n\n        const totalOps = p * N * 2;\n        let currentOp = 0;\n        let lastPercent10 = null;\n\n        // Set this to true to abandon the scrypt on the next step\n        let stop = false;\n\n        // State information\n        let state = 0;\n        let i0 = 0, i1;\n        let Bi;\n\n        // How many blockmix_salsa8 can we do per step?\n        const limit = callback ? parseInt(1000 / r): 0xffffffff;\n\n        // Trick from scrypt-async; if there is a setImmediate shim in place, use it\n        const nextTick = (typeof(setImmediate) !== 'undefined') ? setImmediate : setTimeout;\n\n        // This is really all I changed; making scryptsy a state machine so we occasionally\n        // stop and give other evnts on the evnt loop a chance to run. ~RicMoo\n        const incrementalSMix = function() {\n            if (stop) {\n                return callback(new Error('cancelled'), currentOp / totalOps);\n            }\n\n            let steps;\n\n            switch (state) {\n                case 0:\n                    // for (var i = 0; i < p; i++)...\n                    Bi = i0 * 32 * r;\n\n                    arraycopy(B, Bi, XY, 0, Yi);                       // ROMix - 1\n\n                    state = 1;                                         // Move to ROMix 2\n                    i1 = 0;\n\n                    // Fall through\n\n                case 1:\n\n                    // Run up to 1000 steps of the first inner smix loop\n                    steps = N - i1;\n                    if (steps > limit) { steps = limit; }\n                    for (let i = 0; i < steps; i++) {                  // ROMix - 2\n                        arraycopy(XY, 0, V, (i1 + i) * Yi, Yi)         // ROMix - 3\n                        blockmix_salsa8(XY, Yi, r, x, _X);             // ROMix - 4\n                    }\n\n                    // for (var i = 0; i < N; i++)\n                    i1 += steps;\n                    currentOp += steps;\n\n                    if (callback) {\n                        // Call the callback with the progress (optionally stopping us)\n                        const percent10 = parseInt(1000 * currentOp / totalOps);\n                        if (percent10 !== lastPercent10) {\n                            stop = callback(null, currentOp / totalOps);\n                            if (stop) { break; }\n                            lastPercent10 = percent10;\n                        }\n                    }\n\n                    if (i1 < N) { break; }\n\n                    i1 = 0;                                          // Move to ROMix 6\n                    state = 2;\n\n                    // Fall through\n\n                case 2:\n\n                    // Run up to 1000 steps of the second inner smix loop\n                    steps = N - i1;\n                    if (steps > limit) { steps = limit; }\n                    for (let i = 0; i < steps; i++) {                // ROMix - 6\n                        const offset = (2 * r - 1) * 16;             // ROMix - 7\n                        const j = XY[offset] & (N - 1);\n                        blockxor(V, j * Yi, XY, Yi);                 // ROMix - 8 (inner)\n                        blockmix_salsa8(XY, Yi, r, x, _X);           // ROMix - 9 (outer)\n                    }\n\n                    // for (var i = 0; i < N; i++)...\n                    i1 += steps;\n                    currentOp += steps;\n\n                    // Call the callback with the progress (optionally stopping us)\n                    if (callback) {\n                        const percent10 = parseInt(1000 * currentOp / totalOps);\n                        if (percent10 !== lastPercent10) {\n                            stop = callback(null, currentOp / totalOps);\n                            if (stop) { break; }\n                            lastPercent10 = percent10;\n                        }\n                    }\n\n                    if (i1 < N) { break; }\n\n                    arraycopy(XY, 0, B, Bi, Yi);                     // ROMix - 10\n\n                    // for (var i = 0; i < p; i++)...\n                    i0++;\n                    if (i0 < p) {\n                        state = 0;\n                        break;\n                    }\n\n                    b = [];\n                    for (let i = 0; i < B.length; i++) {\n                        b.push((B[i] >>  0) & 0xff);\n                        b.push((B[i] >>  8) & 0xff);\n                        b.push((B[i] >> 16) & 0xff);\n                        b.push((B[i] >> 24) & 0xff);\n                    }\n\n                    const derivedKey = PBKDF2_HMAC_SHA256_OneIter(password, b, dkLen);\n\n                    // Send the result to the callback\n                    if (callback) { callback(null, 1.0, derivedKey); }\n\n                    // Done; don't break (which would reschedule)\n                    return derivedKey;\n            }\n\n            // Schedule the next steps\n            if (callback) { nextTick(incrementalSMix); }\n        }\n\n        // Run the smix state machine until completion\n        if (!callback) {\n            while (true) {\n                const derivedKey = incrementalSMix();\n                if (derivedKey != undefined) { return derivedKey; }\n            }\n        }\n\n        // Bootstrap the async incremental smix\n        incrementalSMix();\n    }\n\n    const lib = {\n        scrypt: function(password, salt, N, r, p, dkLen, progressCallback) {\n            return new Promise(function(resolve, reject) {\n                let lastProgress = 0;\n                if (progressCallback) { progressCallback(0); }\n                _scrypt(password, salt, N, r, p, dkLen, function(error, progress, key) {\n                    if (error) {\n                        reject(error);\n                    } else if (key) {\n                        if (progressCallback && lastProgress !== 1) {\n                            progressCallback(1);\n                        }\n                        resolve(new Uint8Array(key));\n                    } else if (progressCallback && progress !== lastProgress) {\n                        lastProgress = progress;\n                        return progressCallback(progress);\n                    }\n                });\n            });\n        },\n        syncScrypt: function(password, salt, N, r, p, dkLen) {\n            return new Uint8Array(_scrypt(password, salt, N, r, p, dkLen));\n        }\n    };\n\n    // node.js\n    if (typeof(exports) !== 'undefined') {\n       module.exports = lib;\n\n    // RequireJS/AMD\n    // http://www.requirejs.org/docs/api.html\n    // https://github.com/amdjs/amdjs-api/wiki/AMD\n    } else if (typeof(define) === 'function' && define.amd) {\n        define(lib);\n\n    // Web Browsers\n    } else if (root) {\n\n        // If there was an existing library \"scrypt\", make sure it is still available\n        if (root.scrypt) {\n            root._scrypt = root.scrypt;\n        }\n\n        root.scrypt = lib;\n    }\n\n})(this);\n"],"names":["root","checkInt","value","parseInt","checkInts","arrayish","length","i","coerceArray","arg","copy","buffer","ArrayBuffer","isView","name","slice","Array","prototype","call","isArray","Error","Uint8Array","createArray","copyArray","sourceArray","targetArray","targetStart","sourceStart","sourceEnd","set","Hex","convertUtf8","toBytes","text","result","encodeURI","c","charCodeAt","push","substr","fromBytes","bytes","String","fromCharCode","join","convertHex","v","numberOfRounds","rcon","S","Si","T1","T2","T3","T4","T5","T6","T7","T8","U1","U2","U3","U4","convertToInt32","AES","key","this","Object","defineProperty","_prepare","rounds","_Ke","_Kd","index","roundKeyCount","KC","tk","tt","rconpointer","t","r","encrypt","plaintext","a","decrypt","ciphertext","ModeOfOperationECB","description","_aes","block","ModeOfOperationCBC","iv","_lastCipherblock","j","ModeOfOperationCFB","segmentSize","_shiftRegister","xorSegment","encrypted","ModeOfOperationOFB","_lastPrecipher","_lastPrecipherIndex","Counter","initialValue","_counter","setValue","setBytes","increment","ModeOfOperationCTR","counter","_remainingCounter","_remainingCounterIndex","aesjs","ModeOfOperation","ecb","cbc","cfb","ofb","ctr","utils","hex","utf8","padding","pkcs7","pad","data","padder","strip","_arrayTest","module","exports","factory","CRC32","version","T0","table","n","Int32Array","signed_crc_table","TT","T","out","subarray","slice_by_16_tables","T9","Ta","Tb","Tc","Td","Te","Tf","bstr","seed","C","L","buf","B","str","d","DO_NOT_EXPORT_CRC","ec","EC","browserCrypto","g","crypto","msCrypto","subtle","webkitSubtle","nodeCrypto","EC_GROUP_ORDER","Buffer","from","ZERO32","alloc","assert","condition","message","isValidPrivateKey","privateKey","x","isBuffer","compare","randomBytes","size","arr","getRandomValues","sha512","msg","Promise","resolve","createHash","update","digest","getAes","op","importKey","then","cryptoKey","encAlgorithm","cipher","createCipheriv","firstChunk","secondChunk","final","concat","decipher","createDecipheriv","aesCbcEncrypt","aesCbcDecrypt","getPublic","keyFromPrivate","derive","privateKeyA","publicKeyB","keyA","keyB","keyFromPublic","Px","toArray","publicKeyTo","opts","ephemPublicKey","macKey","ephemPrivateKey","hash","encryptionKey","dataToMac","hmac","createHmac","hmacSha256Sign","mac","sig","b1","b2","res","equalConstTime","macGood","logger","anyGlobal","self","window","getGlobal","throwArgumentError","arrayify","warn","throwError","errors","UNSUPPORTED_OPERATION","operation","pbkdf2","password","salt","iterations","keylen","hashAlgorithm","hLen","l","DK","block1","U","Math","ceil","k","destPos","len","hexlify","Wordlist","constructor","locale","checkAbstract","split","mnemonic","toLowerCase","words","static","wordlist","word","getWord","getWordIndex","id","lang","loadWords","replace","substring","check","langEn","super","indexOf","register","wordlists","en","N","MasterSecret","HardenedBit","getUpperMask","bits","bytes32","hexZeroPad","base58check","encode","hexDataSlice","sha2","getWordlist","_constructorGuard","defaultPath","HDNode","constructorGuard","publicKey","parentFingerprint","chainCode","depth","mnemonicOrPath","signingKey","compressedPublicKey","path","extendedKey","neuter","_derive","I","IL","IR","ki","Ki","add","mod","_addPoint","srcMnemonic","freeze","phrase","fingerprint","derivePath","components","shift","component","match","seedArray","entropyToMnemonic","mnemonicToEntropy","_fromSeed","NFKD","mnemonicToSeed","decode","checkNormalize","entropy","offset","normalize","bit","entropyBits","checksumMask","indices","remainingBits","checksumBits","checksum","map","looseArrayify","hexString","zpad","getPassword","NFKC","searchPath","object","currentChild","comps","matchingChild","uuidV4","__awaiter","thisArg","_arguments","P","generator","reject","fulfilled","step","next","e","rejected","done","apply","hasMnemonic","KeystoreAccount","isKeystoreAccount","_isKeystoreAccount","_getAccount","aesCtr","_decrypt","mnemonicKey","address","account","mnemonicCiphertext","mnemonicIv","mnemonicCounter","mnemonicAesCtr","node","fromMnemonic","error","code","INVALID_ARGUMENT","argument","pbkdf2Sync","passwordBytes","count","dkLen","prfFunc","_computeKdfKey","pbkdf2Func","scryptFunc","progressCallback","kdf","p","prf","CrowdsaleAccount","isCrowdsaleAccount","_isCrowdsaleAccount","json","JSON","parse","ethaddr","encseed","encryptedSeed","aesCbc","seedHex","seedHexBytes","isCrowdsaleWallet","isKeystoreWallet","decryptJsonWallet","scrypt","decryptJsonWalletSync","Wallet","provider","isHexString","isSigningKey","curve","isProvider","_mnemonic","_signingKey","getAddress","connect","signTransaction","transaction","tx","signature","signDigest","signMessage","joinSignature","_signTypedData","domain","types","populated","resolveNames","resolveName","options","client","uuidRandom","uuid","derivedKey","macPrefix","cipherparams","kdfparams","dklen","now","Date","timestamp","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","gethFilename","stringify","extraEntropy","MIN_ENTROPY_SIZE","keccak256","createIdentity","byteLength","innerHex","middleHex","createPrivateKey","wallet","stripHexPrefix","removeLeading0x","startsWith","addLeading0x","uint8ArrayToHex","toString","hexToUnit8Array","compress","startsWith04","publicKeyConvert","decompress","startsWith02Or03","decompressed","toAddress","addressBuffer","pubToAddress","toBuffer","toChecksumAddress","compressedKey","ret","decryptWithPrivateKey","twoStripped","encryptedBuffer","decryptedBuffer","encryptWithPublicKey","pubString","encryptedBuffers","publicKeyByPrivateKey","privateToPublic","recoverPublicKey","sigOnly","recoveryNumber","pubKey","ecdsaRecover","recover","sigString","sign","sigObj","recoveryId","recid","rawTx","txOptions","arguments","undefined","privateKeyBuffer","Transaction","fromTxData","serialize","_arrayLikeToArray","arr2","_toConsumableArray","iter","Symbol","iterator","o","minLen","test","TypeError","txDataByCompiled","abi","bytecode","args","getDeployTransaction","calculateContractAddress","creatorAddress","nonce","generateAddress","regexBytes","RegExp","regexNumber","regexArray","Zeros","_pack","type","zeroPad","toTwos","baseType","forEach","pack","values","tight","params","SIGN_PREFIX","base64","string","compressedString","fromString","s","vrs","util","__values","m","__importDefault","__esModule","chains","_getInitializedChains","mainnet_json_1","ropsten_json_1","rinkeby_json_1","kovan_json_1","goerli_json_1","sepolia_json_1","customChains","e_1","_a","names","mainnet","default","ropsten","rinkeby","kovan","goerli","sepolia","customChains_1","customChains_1_1","chain","name_1","chainId","e_1_1","return","EIPs","hardforks","extendStatics","__extends","b","setPrototypeOf","__proto__","hasOwnProperty","__","create","__assign","assign","ConsensusAlgorithm","ConsensusType","Hardfork","Chain","CustomChain","events_1","crc_32_1","ethereumjs_util_1","chains_1","hardforks_1","eips_1","Common","_super","_b","_c","_this","_supportedHardforks","_eips","_customChains","_chainParams","setChain","DEFAULT_HARDFORK","defaultHardfork","Istanbul","_d","_e","hf","forkHash","_calcForkHash","_hardfork","supportedHardforks","hardfork","setHardfork","eips","setEIPs","custom","chainParamsOrName","baseChain","standardChainParams","_getChainParams","PolygonMainnet","networkId","PolygonMumbai","ArbitrumRinkebyTestnet","xDaiChain","OptimisticKovan","Berlin","OptimisticEthereum","forCustomChain","customChainParams","isSupportedChainId","initializedChains","Boolean","BN","isBN","e_2","plainCustomChains","required_1","required_1_1","param","e_2_1","e_3","_isSupportedHardfork","existing","HARDFORK_CHANGES_1","HARDFORK_CHANGES_1_1","emit","e_3_1","getHardforkByBlockNumber","blockNumber","td","e_4","toType","TypeOutput","minTdHF","maxTdHF","previousHF","Chainstart","gte","e_4_1","msgAdd","hardforkGteHardfork","setHardforkByBlockNumber","_chooseHardfork","onlySupported","_getHardfork","e_5","hfs","hfs_1","hfs_1_1","e_5_1","chainName","e_6","e_6_1","e_7","_loop_1","eip","minHF","this_1","gteHardfork","requiredEIPs","elem","includes","isActivatedEIP","eips_2","eips_2_1","e_7_1","topic","e_8","paramByEIP","e_8_1","paramByHardfork","e_9","e_10","HARDFORK_CHANGES_2","HARDFORK_CHANGES_2_1","hfChanges","hfEIPs","hfEIPs_1","hfEIPs_1_1","valueEIP","e_10_1","e_9_1","eipParams","paramByBlock","activeHfs","activeHardforks","e_11","HARDFORK_CHANGES_3","HARDFORK_CHANGES_3_1","e_11_1","hardforkIsActiveOnBlock","hfBlock","hardforkBlockBN","activeOnBlock","hardfork1","hardfork2","e_12","onlyActive","posHf1","posHf2","hardforks_2","hardforks_2_1","e_12_1","hardforkIsActiveOnChain","e_13","e_13_1","e_14","hfs_2","hfs_2_1","e_14_1","activeHardfork","hardforkBlock","Number","hardforkTD","isHardforkBlock","eq","nextHardforkBlock","nextHardforkBlockBN","reduce","acc","gt","isNextHardforkBlock","e_15","genesis","hfBuffer","prevBlock","hfBlockBuffer","padStart","e_15_1","inputBuffer","forkhash","intToBuffer","hardforkForForkHash","resArray","filter","genesisState","e_16","chainArrayWithGenesis","e_16_1","bootstrapNodes","dnsNetworks","chainIdBN","networkIdBN","consensusType","e_17","HARDFORK_CHANGES_4","HARDFORK_CHANGES_4_1","e_17_1","consensusAlgorithm","e_18","HARDFORK_CHANGES_5","HARDFORK_CHANGES_5_1","e_18_1","consensusConfig","e_19","HARDFORK_CHANGES_6","HARDFORK_CHANGES_6_1","e_19_1","getPrototypeOf","removeAllListeners","EventEmitter","__createBinding","k2","desc","getOwnPropertyDescriptor","writable","configurable","enumerable","get","__setModuleDefault","__importStar","__read","ar","BaseTransaction","common_1","types_1","txData","cache","dataFee","activeCapabilities","DEFAULT_CHAIN","Mainnet","gasLimit","to","_type","toNumber","toB","vB","rB","sB","Address","_validateCannotExceedMaxInteger","supports","capability","validate","stringError","getBaseFee","isSigned","verifySignature","fee","getDataFee","addn","common","toCreationAddress","iaddn","txDataZero","txDataNonZero","cost","dataLength","initCodeCost","imuln","iadd","getSenderPublicKey","unpadBuffer","getSenderAddress","publicToAddress","_errorMsg","hackApplied","Capability","EIP155ReplayProtection","msgHash","getMessageToSign","ecsign","_processSignature","splice","_getCommon","cannotEqual","entries","MAX_UINT64","MAX_INTEGER","_getSharedErrorPostfix","bufferToHex","postfix","baseTransaction_1","util_1","TRANSACTION_TYPE_BUFFER","FeeMarketEIP1559Transaction","accessList","maxFeePerGas","maxPriorityFeePerGas","accessListData","AccessLists","getAccessListData","AccessListJSON","verifyAccessList","mul","lt","eqn","N_DIV_2","checkMaxInitCodeSize","fromSerializedTx","serialized","equals","rlp","fromValuesArray","fromRlpSerializedTx","validateNoLeadingZeroes","getDataFeeEIP2930","isFrozen","getUpfrontCost","baseFee","gasPrice","min","sub","raw","bnToUnpaddedBuffer","base","hashMessage","getMessageToVerifySignature","ecrecover","toJSON","accessListJSON","getAccessListJSON","bnToHex","errorStr","AccessListEIP2930Transaction","yParity","__exportStar","TransactionFactory","legacyTransaction_1","eip2930Transaction_1","transactionFactory_1","eip1559Transaction_1","_validateTxV","chainIdDoubled","muln","_getMessageToSign","rlphash","vBN","ltn","numSub","subn","isEven","divn","_unsignedTxImplementsEIP155","_signedTxImplementsEIP155","onEIP155BlockOrLater","_1","txType","fromSerializedData","EIP","fromBlockBodyData","getTransactionClass","transactionID","_common","isAccessList","isAccessListBuffer","input","firstItem","bufferAccessList","newAccessList","item","storageItems","storageKeys","jsonItem","accessListItem","storageSlots","storageSlot","JSONItem","setLengthLeft","slot","accessListStorageKeyCost","accessListAddressCost","slots","ecparams","loadPublicKey","pubkey","first","xbuf","cmp","toRed","red","y","redSqr","redIMul","redIAdd","redSqrt","isOdd","redNeg","keyPair","pub","loadCompressedPublicKey","ybuf","x3","redISub","isZero","loadUncompressedPublicKey","savePublicKey","output","point","contextRandomize","privateKeyVerify","seckey","bn","privateKeyNegate","negate","umod","toArrayLike","privateKeyTweakAdd","tweak","isub","tweaked","privateKeyTweakMul","imul","publicKeyVerify","publicKeyCreate","pair","publicKeyNegate","publicKeyCombine","pubkeys","pairs","isInfinity","publicKeyTweakAdd","publicKeyTweakMul","signatureNormalize","nh","signatureExport","obj","sigR","sigS","lenR","posR","lenS","posS","outputlen","signatureImport","ecdsaSign","noncefn","_noncefn","canonical","pers","err","recoveryParam","ecdsaVerify","msg32","sigr","sigs","verify","recoverPubKey","ecdh","hashfn","scalar","sha256","getX","getY","cond","isUint8Array","isCompressed","toTypeString","getAssertedOutput","secp256k1","compressed","MAX_VALUE","SHA256","K","Uint32Array","h0","h1","h2","h3","h4","h5","h6","h7","w","blocks","off","u","t1","t2","f","h","bytesLeft","bitLenHi","bitLenLo","numZeros","PBKDF2_HMAC_SHA256_OneIter","innerLen","inner","outerKey","dk","incrementCounter","blockmix_salsa8","BY","Yi","_X","arraycopy","blockxor","salsa20_8","R","D","src","srcPos","dest","checkBufferish","ensureInteger","_scrypt","callback","XY","V","totalOps","i1","Bi","currentOp","lastPercent10","stop","state","i0","limit","nextTick","setImmediate","setTimeout","incrementalSMix","steps","percent10","lib","lastProgress","progress","syncScrypt"],"sourceRoot":""}