{"version":3,"file":"chunk/845.1a8e196c.js","mappings":"oIAAO,SAASA,EAAYC,GACxB,MAAO,CACHC,gBAAYC,EACZC,UAAMD,EACNE,iBAAaF,KACVF,EAEX,C,sDCNO,MAAMK,EAAwBN,EAAY,CAC7CO,GAAI,EACJC,KAAM,WACNC,eAAgB,CAAED,KAAM,QAASE,OAAQ,MAAOC,SAAU,IAC1DC,QAAS,CACLC,QAAS,CACLC,KAAM,CAAC,gCAGfC,eAAgB,CACZF,QAAS,CACLL,KAAM,YACNQ,IAAK,uBACLC,OAAQ,iCAGhBC,UAAW,CACPC,YAAa,CACTC,QAAS,8CAEbC,qBAAsB,CAClBD,QAAS,6CACTE,aAAc,UAElBC,WAAY,CACRH,QAAS,6CACTE,aAAc,a,cC3BnB,SAASE,EAAgBC,EAAMC,GAClC,MAAO,EAAGC,UAASD,OAAQE,MAChB,CACHD,UACAD,OAASG,IACL,MAAMC,EAAYJ,EAAOG,GACzB,GAAIF,EACA,IAAK,MAAMI,KAAOJ,SACPG,EAAUC,GAGzB,MAAO,IACAD,KACAF,EAAUC,GAChB,EAELJ,QAGZ,CCjBO,MAAMO,EAAkB,CAC3B,MAAO,SACP,MAAO,UACP,MAAO,UACP,MAAO,WAEJ,SAASC,EAAkBC,GAC9B,MAAMC,EAAe,IACdD,EACHE,UAAWF,EAAYE,UAAYF,EAAYE,UAAY,KAC3DC,YAAaH,EAAYG,YACnBC,OAAOJ,EAAYG,aACnB,KACNE,QAASL,EAAYK,SAAU,QAAYL,EAAYK,cAAWpC,EAClEqC,IAAKN,EAAYM,IAAMF,OAAOJ,EAAYM,UAAOrC,EACjDsC,SAAUP,EAAYO,SAAWH,OAAOJ,EAAYO,eAAYtC,EAChEuC,iBAAkBR,EAAYQ,iBACxBJ,OAAOJ,EAAYQ,uBACnBvC,EACNwC,aAAcT,EAAYS,aACpBL,OAAOJ,EAAYS,mBACnBxC,EACNyC,qBAAsBV,EAAYU,qBAC5BN,OAAOJ,EAAYU,2BACnBzC,EACN0C,MAAOX,EAAYW,OAAQ,QAAYX,EAAYW,YAAS1C,EAC5D2C,GAAIZ,EAAYY,GAAKZ,EAAYY,GAAK,KACtCC,iBAAkBb,EAAYa,iBACxBC,OAAOd,EAAYa,kBACnB,KACNtB,KAAMS,EAAYT,KACZO,EAAgBE,EAAYT,WAC5BtB,EACN8C,QAASf,EAAYT,KAAOS,EAAYT,UAAOtB,EAC/C+C,MAAOhB,EAAYgB,MAAQZ,OAAOJ,EAAYgB,YAAS/C,EACvDgD,EAAGjB,EAAYiB,EAAIb,OAAOJ,EAAYiB,QAAKhD,GAgC/C,OA9BAgC,EAAaiB,QAAU,MAEnB,GAAIlB,EAAYkB,QACZ,OAAOJ,OAAOd,EAAYkB,SAE9B,GAA8B,iBAAnBjB,EAAagB,EAAgB,CACpC,GAAuB,KAAnBhB,EAAagB,GAA+B,MAAnBhB,EAAagB,EACtC,OAAO,EACX,GAAuB,KAAnBhB,EAAagB,GAA+B,MAAnBhB,EAAagB,EACtC,OAAO,EACX,GAAIhB,EAAagB,GAAK,IAClB,OAAOhB,EAAagB,EAAI,KAAO,GAAK,EAAI,CAChD,CAEH,EAdsB,GAeG,WAAtBhB,EAAaV,cACNU,EAAakB,kBACblB,EAAaO,wBACbP,EAAaQ,oBACbR,EAAaS,4BACbT,EAAaiB,SAEE,YAAtBjB,EAAaV,cACNU,EAAaO,wBACbP,EAAaQ,oBACbR,EAAaS,sBAEE,YAAtBT,EAAaV,aACNU,EAAaO,iBAEjBP,CACX,CACO,MAAMmB,EAAkC9B,EAAgB,cAAeS,GCrEvE,SAASsB,EAAYC,GACxB,MAAMC,EAAeD,EAAMC,cAAcC,KAAKxB,GACf,iBAAhBA,EACAA,EACJD,EAAkBC,KAE7B,MAAO,IACAsB,EACHG,cAAeH,EAAMG,cAAgBrB,OAAOkB,EAAMG,eAAiB,KACnEC,YAAaJ,EAAMI,YAActB,OAAOkB,EAAMI,kBAAezD,EAC7D0D,WAAYL,EAAMK,WAAavB,OAAOkB,EAAMK,iBAAc1D,EAC1D2D,cAAeN,EAAMM,cACfxB,OAAOkB,EAAMM,oBACb3D,EACN4D,SAAUP,EAAMO,SAAWzB,OAAOkB,EAAMO,eAAY5D,EACpD6D,QAASR,EAAMQ,QAAU1B,OAAOkB,EAAMQ,cAAW7D,EACjD8D,KAAMT,EAAMS,KAAOT,EAAMS,KAAO,KAChCC,UAAWV,EAAMU,UAAYV,EAAMU,UAAY,KAC/CrB,MAAOW,EAAMX,MAAQW,EAAMX,MAAQ,KACnCsB,OAAQX,EAAMW,OAAS7B,OAAOkB,EAAMW,QAAU,KAC9CC,KAAMZ,EAAMY,KAAO9B,OAAOkB,EAAMY,WAAQjE,EACxCkE,UAAWb,EAAMa,UAAY/B,OAAOkB,EAAMa,gBAAalE,EACvDsD,eACAa,gBAAiBd,EAAMc,gBACjBhC,OAAOkB,EAAMc,iBACb,KAEd,CACO,MAAMC,EAA4B/C,EAAgB,QAAS+B,GC1B3D,MAAMiB,EAAkB,CAC3B,MAAO,WACP,MAAO,WAEJ,SAASC,EAAyBC,GACrC,MAAMC,EAAU,IACTD,EACHrC,YAAaqC,EAAmBrC,YAC1BC,OAAOoC,EAAmBrC,aAC1B,KACNuC,gBAAiBF,EAAmBE,gBAC9BF,EAAmBE,gBACnB,KACNC,kBAAmBH,EAAmBG,kBAChCvC,OAAOoC,EAAmBG,mBAC1B,KACNC,kBAAmBJ,EAAmBI,kBAChCxC,OAAOoC,EAAmBI,mBAC1B,KACNd,QAASU,EAAmBV,QACtB1B,OAAOoC,EAAmBV,SAC1B,KACNe,KAAML,EAAmBK,KACnBL,EAAmBK,KAAKrB,KAAKsB,GC3BpC,SAAmBA,GAAK,KAAEnD,EAAI,UAAEoD,GAAe,CAAC,GACnD,MAAO,IACAD,EACH5C,UAAW4C,EAAI5C,UAAY4C,EAAI5C,UAAY,KAC3CC,YAAa2C,EAAI3C,YAAcC,OAAO0C,EAAI3C,aAAe,KACzD6C,SAAUF,EAAIE,SAAWlC,OAAOgC,EAAIE,UAAY,KAChDC,gBAAiBH,EAAIG,gBAAkBH,EAAIG,gBAAkB,KAC7DpC,iBAAkBiC,EAAIjC,iBAChBC,OAAOgC,EAAIjC,kBACX,QACFkC,EAAY,CAAEpD,OAAMoD,aAAc,CAAC,EAE/C,CDemDG,CAAUJ,KAC/C,KACNlC,GAAI4B,EAAmB5B,GAAK4B,EAAmB5B,GAAK,KACpDC,iBAAkB2B,EAAmB3B,kBAC/B,QAAY2B,EAAmB3B,kBAC/B,KACNsC,OAAQX,EAAmBW,OACrBb,EAAgBE,EAAmBW,QACnC,KACN5D,KAAMiD,EAAmBjD,KACnBO,EAAgB0C,EAAmBjD,OAASiD,EAAmBjD,KAC/D,MAMV,OAJIiD,EAAmBY,eACnBX,EAAQW,aAAehD,OAAOoC,EAAmBY,eACjDZ,EAAmBd,cACnBe,EAAQf,YAActB,OAAOoC,EAAmBd,cAC7Ce,CACX,CACO,MAAMY,EAAyC/D,EAAgB,qBAAsBiD,GE1C/EvE,EAAa,CACtBsD,MAAqBe,EAAY,CAC7B7C,OAAOG,GACH,MAAM4B,EAAe5B,EAAK4B,cAAcC,KAAKxB,IACzC,GAA2B,iBAAhBA,EACP,OAAOA,EACX,MAAMJ,EAAYG,EAAkBC,GASpC,MAR0B,SAAtBJ,EAAUmB,UACVnB,EAAU0D,WAAatD,EAAYsD,WACnC1D,EAAU2D,KAAOvD,EAAYuD,MACvB,QAAYvD,EAAYuD,WACxBtF,EACN2B,EAAU4D,WAAaxD,EAAYwD,WACnC5D,EAAUL,KAAO,WAEdK,CAAS,IAEpB,MAAO,CACH2B,eACAkC,UAAW9D,EAAK8D,UAExB,IAEJzD,YAA2BoB,EAAkB,CACzC5B,OAAOG,GACH,MAAMK,EAAc,CAAC,EAOrB,MANkB,SAAdL,EAAKJ,OACLS,EAAYsD,WAAa3D,EAAK2D,WAC9BtD,EAAYuD,KAAO5D,EAAK4D,MAAO,QAAY5D,EAAK4D,WAAQtF,EACxD+B,EAAYwD,WAAa7D,EAAK6D,WAC9BxD,EAAYT,KAAO,WAEhBS,CACX,IAEJwC,mBAAkCa,EAAyB,CACvD7D,OAAOG,IACI,CACH+D,WAAY/D,EAAK+D,YAAa,QAAY/D,EAAK+D,YAAc,KAC7DC,UAAWhE,EAAKgE,WAAY,QAAYhE,EAAKgE,WAAa,KAC1DC,MAAOjE,EAAKiE,OAAQ,QAAYjE,EAAKiE,OAAS,KAC9CC,YAAalE,EAAKkE,YAAc/C,OAAOnB,EAAKkE,aAAe,U,eC5CpE,MAAMC,UAA4B,IACrCC,aAAY,QAAE7E,IACV8E,MAAM,YAAY9E,iBAAwB,CACtC+E,aAAc,CACV,iEACA,oDAGRC,OAAOC,eAAeC,KAAM,OAAQ,CAChCC,YAAY,EACZC,cAAc,EACdC,UAAU,EACVvD,MAAO,uBAEf,E,0BCbJ,MAAMwD,EAAe,sBACRC,EAA+B,IAAI,IAAO,MAChD,SAASC,EAAUxF,EAASyF,GAC/B,MAAM,OAAEC,GAAS,GAASD,GAAW,CAAC,EAChCE,EAAW,GAAG3F,KAAW0F,IAC/B,GAAIH,EAAeK,IAAID,GACnB,OAAOJ,EAAeM,IAAIF,GAC9B,MAAMG,KACGR,EAAaS,KAAK/F,IAEnBA,EAAQgG,gBAAkBhG,GAE1B0F,IACO,QAAgB1F,KAAaA,GAI5C,OADAuF,EAAeU,IAAIN,EAAUG,GACtBA,CACX,CCFO,SAASI,EAAUC,GACtB,MAAO,KAAKA,EAAOC,QAAO,CAACC,EAAKC,IAAMD,EAAMC,EAAEC,QAAQ,KAAM,KAAK,KACrE,C,qCChBO,SAASC,EAAMC,EAAO/E,EAAK,OAC9B,MAAMgF,EAAYC,EAAaF,GACzBG,GAAS,OAAa,IAAIC,WAAWH,EAAUI,SAErD,OADAJ,EAAUK,OAAOH,GACN,QAAPlF,GACO,QAAWkF,EAAOH,OACtBG,EAAOH,KAClB,CAOA,SAASE,EAAaF,GAClB,OAAIO,MAAMC,QAAQR,GAItB,SAA0BS,GACtB,MAAMC,EAAaD,EAAKd,QAAO,CAACC,EAAKC,IAAMD,EAAMC,EAAEQ,QAAQ,GACrDM,EAAmBC,EAAgBF,GAMzC,MAAO,CACHL,OALIK,GAAc,GACP,EAAIA,EACR,EAAIC,EAAmBD,EAI9BJ,OAAOH,GACCO,GAAc,GACdP,EAAOU,SAAS,IAAOH,IAGvBP,EAAOU,SAAS,IAAYF,GACH,IAArBA,EACAR,EAAOW,UAAUJ,GACS,IAArBC,EACLR,EAAOY,WAAWL,GACQ,IAArBC,EACLR,EAAOa,WAAWN,GAElBP,EAAOc,WAAWP,IAE1B,IAAK,MAAM,OAAEJ,KAAYG,EACrBH,EAAOH,EAEf,EAER,CAjCee,CAAiBlB,EAAMnE,KAAKgE,GAAMK,EAAaL,MAkC9D,SAA2BsB,GACvB,MAAMnB,EAA8B,iBAAfmB,GAA0B,QAAWA,GAAcA,EAClEC,EAAoBR,EAAgBZ,EAAMK,QAC1CA,EACmB,IAAjBL,EAAMK,QAAgBL,EAAM,GAAK,IAC1B,EACPA,EAAMK,QAAU,GACT,EAAIL,EAAMK,OACd,EAAIe,EAAoBpB,EAAMK,OAEzC,MAAO,CACHA,SACAC,OAAOH,GACkB,IAAjBH,EAAMK,QAAgBL,EAAM,GAAK,IACjCG,EAAOkB,UAAUrB,GAEZA,EAAMK,QAAU,IACrBF,EAAOU,SAAS,IAAOb,EAAMK,QAC7BF,EAAOkB,UAAUrB,KAGjBG,EAAOU,SAAS,IAAYO,GACF,IAAtBA,EACAjB,EAAOW,UAAUd,EAAMK,QACI,IAAtBe,EACLjB,EAAOY,WAAWf,EAAMK,QACG,IAAtBe,EACLjB,EAAOa,WAAWhB,EAAMK,QAExBF,EAAOc,WAAWjB,EAAMK,QAC5BF,EAAOkB,UAAUrB,GAEzB,EAER,CAnEWsB,CAAkBtB,EAC7B,CAmEA,SAASY,EAAgBP,GACrB,GAAIA,EAAS,IACT,OAAO,EACX,GAAIA,EAAS,MACT,OAAO,EACX,GAAIA,EAAS,GAAK,GACd,OAAO,EACX,GAAIA,EAAS,GAAK,GACd,OAAO,EACX,MAAM,IAAI,IAAU,uBACxB,CChGO,SAASkB,EAAYvH,GACxB,MAAMwH,EAAUjD,OAAOiD,QAAQxH,GAC1B6B,KAAI,EAAE3B,EAAKmB,UACE/C,IAAV+C,IAAiC,IAAVA,EAChB,KACJ,CAACnB,EAAKmB,KAEZoG,OAAOC,SACNC,EAAYH,EAAQ7B,QAAO,CAACC,GAAM1F,KAAS0H,KAAKC,IAAIjC,EAAK1F,EAAImG,SAAS,GAC5E,OAAOmB,EACF3F,KAAI,EAAE3B,EAAKmB,KAAW,KAAK,GAAGnB,KAAO4H,OAAOH,EAAY,OAAOtG,MAC/D0G,KAAK,KACd,CAeO,MAAMC,UAA4B,IACrC5D,aAAY,EAAE9C,IACV+C,MAAM,wBAAwB/C,0BAC9BiD,OAAOC,eAAeC,KAAM,OAAQ,CAChCC,YAAY,EACZC,cAAc,EACdC,UAAU,EACVvD,MAAO,uBAEf,EAEG,MAAM4G,UAA4C,IACrD7D,aAAY,YAAE/D,IACVgE,MAAM,6DAA8D,CAChEC,aAAc,CACV,wBACA,IACAiD,EAAYlH,GACZ,IACA,GACA,qCACA,oCACA,oDACA,+DACA,gFACA,4CAGRkE,OAAOC,eAAeC,KAAM,OAAQ,CAChCC,YAAY,EACZC,cAAc,EACdC,UAAU,EACVvD,MAAO,uCAEf,EAqDG,MAAM6G,UAAmC,IAC5C9D,aAAY,WAAE+D,IACV9D,MAAM,yBAAyB8D,yCAAkDP,KAAKQ,OAAOD,EAAW9B,OAAS,GAAK,aACtH9B,OAAOC,eAAeC,KAAM,OAAQ,CAChCC,YAAY,EACZC,cAAc,EACdC,UAAU,EACVvD,MAAO,8BAEf,EChHG,SAASgH,EAAmBC,GAC/B,MAAM,IAAEC,GAAQD,EACVrH,EAAKqH,EAAWrH,KAAsC,iBAAxBqH,EAAWE,MAAM,GAAkB,MAAQ,SACzEA,EAAwC,iBAAxBF,EAAWE,MAAM,GACjCF,EAAWE,MAAM3G,KAAKgE,IAAM,QAAWA,KACvCyC,EAAWE,MACXC,EAAc,GACpB,IAAK,MAAMC,KAAQF,EACfC,EAAYE,KAAKvC,WAAWwC,KAAKL,EAAIM,oBAAoBH,KAC7D,MAAe,UAAPzH,EACFwH,EACAA,EAAY5G,KAAKgE,IAAM,QAAWA,IAC5C,CCRO,SAASiD,EAAcR,GAC1B,MAAM,IAAEC,GAAQD,EACVrH,EAAKqH,EAAWrH,KAAsC,iBAAxBqH,EAAWE,MAAM,GAAkB,MAAQ,SACzEA,EAAwC,iBAAxBF,EAAWE,MAAM,GACjCF,EAAWE,MAAM3G,KAAKgE,IAAM,QAAWA,KACvCyC,EAAWE,MACXC,EAAoD,iBAA9BH,EAAWG,YAAY,GAC7CH,EAAWG,YAAY5G,KAAKgE,IAAM,QAAWA,KAC7CyC,EAAWG,YACXM,EAAS,GACf,IAAK,IAAIC,EAAI,EAAGA,EAAIR,EAAMnC,OAAQ2C,IAAK,CACnC,MAAMN,EAAOF,EAAMQ,GACbC,EAAaR,EAAYO,GAC/BD,EAAOJ,KAAKvC,WAAWwC,KAAKL,EAAIW,oBAAoBR,EAAMO,IAC9D,CACA,MAAe,UAAPhI,EACF8H,EACAA,EAAOlH,KAAKgE,IAAM,QAAWA,IACvC,C,yBCpBO,MAAMsD,UAAa,KACtB/E,YAAYgF,EAAUC,EAAWC,EAAWC,GACxClF,QACAI,KAAK2E,SAAWA,EAChB3E,KAAK4E,UAAYA,EACjB5E,KAAK6E,UAAYA,EACjB7E,KAAK8E,KAAOA,EACZ9E,KAAK+E,UAAW,EAChB/E,KAAK4B,OAAS,EACd5B,KAAKgF,IAAM,EACXhF,KAAKiF,WAAY,EACjBjF,KAAKkF,OAAS,IAAIvD,WAAWgD,GAC7B3E,KAAKmF,MAAO,QAAWnF,KAAKkF,OAChC,CACAE,OAAOC,IACH,QAAOrF,MACP,MAAM,KAAEmF,EAAI,OAAED,EAAM,SAAEP,GAAa3E,KAE7BsF,GADND,GAAO,QAAQA,IACEzD,OACjB,IAAK,IAAIoD,EAAM,EAAGA,EAAMM,GAAM,CAC1B,MAAMC,EAAOpC,KAAKqC,IAAIb,EAAW3E,KAAKgF,IAAKM,EAAMN,GAEjD,GAAIO,IAASZ,EAMbO,EAAOnE,IAAIsE,EAAKI,SAAST,EAAKA,EAAMO,GAAOvF,KAAKgF,KAChDhF,KAAKgF,KAAOO,EACZP,GAAOO,EACHvF,KAAKgF,MAAQL,IACb3E,KAAK0F,QAAQP,EAAM,GACnBnF,KAAKgF,IAAM,OAXf,CACI,MAAMW,GAAW,QAAWN,GAC5B,KAAOV,GAAYW,EAAMN,EAAKA,GAAOL,EACjC3E,KAAK0F,QAAQC,EAAUX,EAE/B,CAQJ,CAGA,OAFAhF,KAAK4B,QAAUyD,EAAKzD,OACpB5B,KAAK4F,aACE5F,IACX,CACA6F,WAAWC,IACP,QAAO9F,OACP,QAAO8F,EAAK9F,MACZA,KAAK+E,UAAW,EAIhB,MAAM,OAAEG,EAAM,KAAEC,EAAI,SAAER,EAAQ,KAAEG,GAAS9E,KACzC,IAAI,IAAEgF,GAAQhF,KAEdkF,EAAOF,KAAS,IAChBhF,KAAKkF,OAAOO,SAAST,GAAKe,KAAK,GAE3B/F,KAAK6E,UAAYF,EAAWK,IAC5BhF,KAAK0F,QAAQP,EAAM,GACnBH,EAAM,GAGV,IAAK,IAAIT,EAAIS,EAAKT,EAAII,EAAUJ,IAC5BW,EAAOX,GAAK,GAxExB,SAAsBY,EAAMa,EAAYpJ,EAAOkI,GAC3C,GAAiC,mBAAtBK,EAAKc,aACZ,OAAOd,EAAKc,aAAaD,EAAYpJ,EAAOkI,GAChD,MAAMoB,EAAOlK,OAAO,IACdmK,EAAWnK,OAAO,YAClBoK,EAAK1J,OAAQE,GAASsJ,EAAQC,GAC9BE,EAAK3J,OAAOE,EAAQuJ,GACpBG,EAAIxB,EAAO,EAAI,EACfyB,EAAIzB,EAAO,EAAI,EACrBK,EAAKqB,UAAUR,EAAaM,EAAGF,EAAItB,GACnCK,EAAKqB,UAAUR,EAAaO,EAAGF,EAAIvB,EACvC,CAiEQmB,CAAad,EAAMR,EAAW,EAAG3I,OAAqB,EAAdgE,KAAK4B,QAAakD,GAC1D9E,KAAK0F,QAAQP,EAAM,GACnB,MAAMsB,GAAQ,QAAWX,GACnBR,EAAMtF,KAAK4E,UAEjB,GAAIU,EAAM,EACN,MAAM,IAAIoB,MAAM,+CACpB,MAAMC,EAASrB,EAAM,EACfsB,EAAQ5G,KAAKW,MACnB,GAAIgG,EAASC,EAAMhF,OACf,MAAM,IAAI8E,MAAM,sCACpB,IAAK,IAAInC,EAAI,EAAGA,EAAIoC,EAAQpC,IACxBkC,EAAMD,UAAU,EAAIjC,EAAGqC,EAAMrC,GAAIO,EACzC,CACA+B,SACI,MAAM,OAAE3B,EAAM,UAAEN,GAAc5E,KAC9BA,KAAK6F,WAAWX,GAChB,MAAM4B,EAAM5B,EAAO6B,MAAM,EAAGnC,GAE5B,OADA5E,KAAKgH,UACEF,CACX,CACAG,WAAWzK,GACPA,IAAOA,EAAK,IAAIwD,KAAKL,aACrBnD,EAAGuE,OAAOf,KAAKW,OACf,MAAM,SAAEgE,EAAQ,OAAEO,EAAM,OAAEtD,EAAM,SAAEmD,EAAQ,UAAEE,EAAS,IAAED,GAAQhF,KAO/D,OANAxD,EAAGoF,OAASA,EACZpF,EAAGwI,IAAMA,EACTxI,EAAGuI,SAAWA,EACdvI,EAAGyI,UAAYA,EACXrD,EAAS+C,GACTnI,EAAG0I,OAAOnE,IAAImE,GACX1I,CACX,EC1GJ,MAEM0K,EAAM,CAACC,EAAGC,EAAGC,IAAOF,EAAIC,EAAMD,EAAIE,EAAMD,EAAIC,EAI5CC,EAA2B,IAAIC,YAAY,CAC7C,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WACpF,WAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WACpF,WAAY,WAAY,UAAY,UAAY,UAAY,WAAY,WAAY,WACpF,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,UACpF,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACpF,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UACpF,UAAY,UAAY,UAAY,UAAY,UAAY,WAAY,WAAY,WACpF,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAIlFC,EAAqB,IAAID,YAAY,CACvC,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,aAIlFE,EAA2B,IAAIF,YAAY,IACjD,MAAMG,UAAehD,EACjB/E,cACIC,MAAM,GAAI,GAAI,GAAG,GAGjBI,KAAK2H,EAAY,EAARH,EAAG,GACZxH,KAAK4H,EAAY,EAARJ,EAAG,GACZxH,KAAK6H,EAAY,EAARL,EAAG,GACZxH,KAAK8H,EAAY,EAARN,EAAG,GACZxH,KAAK+H,EAAY,EAARP,EAAG,GACZxH,KAAKgI,EAAY,EAARR,EAAG,GACZxH,KAAKiI,EAAY,EAART,EAAG,GACZxH,KAAKkI,EAAY,EAARV,EAAG,EAChB,CACA7G,MACI,MAAM,EAAEgH,EAAC,EAAEC,EAAC,EAAEC,EAAC,EAAEC,EAAC,EAAEC,EAAC,EAAEC,EAAC,EAAEC,EAAC,EAAEC,GAAMlI,KACnC,MAAO,CAAC2H,EAAGC,EAAGC,EAAGC,EAAGC,EAAGC,EAAGC,EAAGC,EACjC,CAEAnH,IAAI4G,EAAGC,EAAGC,EAAGC,EAAGC,EAAGC,EAAGC,EAAGC,GACrBlI,KAAK2H,EAAQ,EAAJA,EACT3H,KAAK4H,EAAQ,EAAJA,EACT5H,KAAK6H,EAAQ,EAAJA,EACT7H,KAAK8H,EAAQ,EAAJA,EACT9H,KAAK+H,EAAQ,EAAJA,EACT/H,KAAKgI,EAAQ,EAAJA,EACThI,KAAKiI,EAAQ,EAAJA,EACTjI,KAAKkI,EAAQ,EAAJA,CACb,CACAxC,QAAQP,EAAMgD,GAEV,IAAK,IAAI5D,EAAI,EAAGA,EAAI,GAAIA,IAAK4D,GAAU,EACnCV,EAASlD,GAAKY,EAAKiD,UAAUD,GAAQ,GACzC,IAAK,IAAI5D,EAAI,GAAIA,EAAI,GAAIA,IAAK,CAC1B,MAAM8D,EAAMZ,EAASlD,EAAI,IACnB+D,EAAKb,EAASlD,EAAI,GAClBgE,GAAK,QAAKF,EAAK,IAAK,QAAKA,EAAK,IAAOA,IAAQ,EAC7CG,GAAK,QAAKF,EAAI,KAAM,QAAKA,EAAI,IAAOA,IAAO,GACjDb,EAASlD,GAAMiE,EAAKf,EAASlD,EAAI,GAAKgE,EAAKd,EAASlD,EAAI,IAAO,CACnE,CAEA,IAAI,EAAEoD,EAAC,EAAEC,EAAC,EAAEC,EAAC,EAAEC,EAAC,EAAEC,EAAC,EAAEC,EAAC,EAAEC,EAAC,EAAEC,GAAMlI,KACjC,IAAK,IAAIuE,EAAI,EAAGA,EAAI,GAAIA,IAAK,CACzB,MACMkE,EAAMP,IADG,QAAKH,EAAG,IAAK,QAAKA,EAAG,KAAM,QAAKA,EAAG,OAnEjDZ,EAoE4BY,GAAGC,GApEPb,EAoEUc,GAAKX,EAAS/C,GAAKkD,EAASlD,GAAM,EAE/DmE,IADS,QAAKf,EAAG,IAAK,QAAKA,EAAG,KAAM,QAAKA,EAAG,KAC7BT,EAAIS,EAAGC,EAAGC,GAAM,EACrCK,EAAID,EACJA,EAAID,EACJA,EAAID,EACJA,EAAKD,EAAIW,EAAM,EACfX,EAAID,EACJA,EAAID,EACJA,EAAID,EACJA,EAAKc,EAAKC,EAAM,CACpB,CA/EI,IAACvB,EAiFLQ,EAAKA,EAAI3H,KAAK2H,EAAK,EACnBC,EAAKA,EAAI5H,KAAK4H,EAAK,EACnBC,EAAKA,EAAI7H,KAAK6H,EAAK,EACnBC,EAAKA,EAAI9H,KAAK8H,EAAK,EACnBC,EAAKA,EAAI/H,KAAK+H,EAAK,EACnBC,EAAKA,EAAIhI,KAAKgI,EAAK,EACnBC,EAAKA,EAAIjI,KAAKiI,EAAK,EACnBC,EAAKA,EAAIlI,KAAKkI,EAAK,EACnBlI,KAAKe,IAAI4G,EAAGC,EAAGC,EAAGC,EAAGC,EAAGC,EAAGC,EAAGC,EAClC,CACAtC,aACI6B,EAAS1B,KAAK,EAClB,CACAiB,UACIhH,KAAKe,IAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC9Bf,KAAKkF,OAAOa,KAAK,EACrB,EAqBG,MAAM4C,GAAyB,SAAgB,IAAM,IAAIjB,I,eCxGzD,SAASkB,EAA0B/E,GACtC,MAAM,WAAEW,EAAU,QAAEqE,EAAU,GAAMhF,EAC9BrH,EAAKqH,EAAWrH,KAA6B,iBAAfgI,EAA0B,MAAQ,SAChEsE,EClBH,SAAgBlM,EAAOmM,GAC1B,MAAMvM,EAAKuM,GAAO,MACZxH,EAAQ,GAAa,EAAAyH,EAAA,GAAMpM,EAAO,CAAE4D,QAAQ,KAAW,EAAAyI,EAAA,IAAQrM,GAASA,GAC9E,MAAW,UAAPJ,EACO+E,GACJ,EAAA2H,EAAA,IAAM3H,EACjB,CDY0B,CAAOiD,EAAY,SAEzC,OADAsE,EAAc/H,IAAI,CAAC8H,GAAU,GACd,UAAPrM,EAAiBsM,GAAgB,QAAWA,EACxD,CEvBO,MAEMK,EAAuB,GAEvBC,EAAuB,KAEvBC,EAAeF,EAAuBC,EAEtCE,EARsB,EAQGD,EAElC,EAEA,EAAID,EAZ2B,ECGtBG,EAA0B,ECHhC,MAAMC,UAA8B,IACvC7J,aAAY,QAAE8J,EAAO,KAAE3L,IACnB8B,MAAM,0BAA2B,CAC7BC,aAAc,CAAC,QAAQ4J,UAAiB,UAAU3L,aAEtDgC,OAAOC,eAAeC,KAAM,OAAQ,CAChCC,YAAY,EACZC,cAAc,EACdC,UAAU,EACVvD,MAAO,yBAEf,EAEG,MAAM8M,UAAuB,IAChC/J,cACIC,MAAM,gCACNE,OAAOC,eAAeC,KAAM,OAAQ,CAChCC,YAAY,EACZC,cAAc,EACdC,UAAU,EACVvD,MAAO,kBAEf,EAEG,MAAM+M,WAAsC,IAC/ChK,aAAY,KAAEhC,EAAI,KAAEG,IAChB8B,MAAM,mBAAmBjC,sBAA0B,CAC/CkC,aAAc,CAAC,eAAgB,aAAa/B,OAEhDgC,OAAOC,eAAeC,KAAM,OAAQ,CAChCC,YAAY,EACZC,cAAc,EACdC,UAAU,EACVvD,MAAO,iCAEf,EAEG,MAAMgN,WAAyC,IAClDjK,aAAY,KAAEhC,EAAI,QAAEkL,IAChBjJ,MAAM,mBAAmBjC,yBAA6B,CAClDkC,aAAc,CACV,aAAa0J,IACb,aAAaV,OAGrB/I,OAAOC,eAAeC,KAAM,OAAQ,CAChCC,YAAY,EACZC,cAAc,EACdC,UAAU,EACVvD,MAAO,oCAEf,E,gBCvBG,SAASiN,GAAehG,GAC3B,MAAM,KAAEwB,EAAI,IAAEvB,EAAG,GAAEtH,GAAOqH,EACpBE,EAAQF,EAAWE,OChBtB,SAAiBF,GACpB,MAAMrH,EAAKqH,EAAWrH,KAAkC,iBAApBqH,EAAWwB,KAAoB,MAAQ,SACrEA,EAAmC,iBAApBxB,EAAWwB,MAC1B,QAAWxB,EAAWwB,MACtBxB,EAAWwB,KACXyE,GAAQ,EAAAhM,GAAA,GAAKuH,GACnB,IAAKyE,EACD,MAAM,IAAIJ,EACd,GAAII,EAAQR,EACR,MAAM,IAAIE,EAAsB,CAC5BC,QAASH,EACTxL,KAAMgM,IAEd,MAAM/F,EAAQ,GACd,IAAIgG,GAAS,EACTC,EAAW,EACf,KAAOD,GAAQ,CACX,MAAM9F,GAAO,OAAa,IAAItC,WAAW0H,IACzC,IAAIvL,EAAO,EACX,KAAOA,EAAOsL,GAAsB,CAChC,MAAM7H,EAAQ8D,EAAK0B,MAAMiD,EAAUA,GAAYb,EAAuB,IAOtE,GALAlF,EAAK7B,SAAS,GAEd6B,EAAKrB,UAAUrB,GAGXA,EAAMK,OAAS,GAAI,CACnBqC,EAAK7B,SAAS,KACd2H,GAAS,EACT,KACJ,CACAjM,IACAkM,GAAY,EAChB,CACAjG,EAAMG,KAAKD,EACf,CACA,MAAe,UAAPzH,EACFuH,EAAM3G,KAAKgE,GAAMA,EAAEG,QACnBwC,EAAM3G,KAAKgE,IAAM,QAAWA,EAAEG,QACxC,CDxBsC0I,CAAQ,CAAE5E,KAAMA,EAAM7I,OAClDwH,EAAcH,EAAWG,aAAeJ,EAAmB,CAAEG,QAAOD,IAAKA,EAAKtH,OAC9E8H,EAAST,EAAWS,QAAUD,EAAc,CAAEN,QAAOC,cAAaF,IAAKA,EAAKtH,OAC5E0N,EAAW,GACjB,IAAK,IAAI3F,EAAI,EAAGA,EAAIR,EAAMnC,OAAQ2C,IAC9B2F,EAAShG,KAAK,CACVD,KAAMF,EAAMQ,GACZC,WAAYR,EAAYO,GACxB4F,MAAO7F,EAAOC,KAEtB,OAAO2F,CACX,C,gBEuBO,MAAME,WAA4B,IACrCzK,aAAY,QAAE1D,IACV2D,MAAyB,iBAAZ3D,EACP,aAAaA,iBACb,wBACN6D,OAAOC,eAAeC,KAAM,OAAQ,CAChCC,YAAY,EACZC,cAAc,EACdC,UAAU,EACVvD,MAAO,uBAEf,EC7EG,MAIMyN,GAAY,CACrBC,OAAQ,EACRC,IAAK,GCOF,SAAS,GAAWA,EAAKC,EAAO,OACnC,OCHG,SAAqB5N,EAAOvC,GAC/B,IAAIoQ,EAAU7N,EAAM8N,WACpB,MAAMC,EAAWF,EAAQG,WAAW,KAChCD,IACAF,EAAUA,EAAQ1D,MAAM,IAC5B0D,EAAUA,EAAQI,SAASxQ,EAAU,KACrC,IAAKyQ,EAASC,GAAY,CACtBN,EAAQ1D,MAAM,EAAG0D,EAAQ7I,OAASvH,GAClCoQ,EAAQ1D,MAAM0D,EAAQ7I,OAASvH,IAGnC,OADA0Q,EAAWA,EAAS1J,QAAQ,QAAS,IAC9B,GAAGsJ,EAAW,IAAM,KAAKG,GAAW,MAAMC,EAAW,IAAIA,IAAa,IACjF,CDTWC,CAAYT,EAAKF,GAAUG,GACtC,CEbO,MAAMS,WAA+B,IACxCtL,aAAY,MAAEuL,EAAK,QAAEC,GAAa,CAAC,GAC/B,MAAMC,EAASD,GACT9J,QAAQ,uBAAwB,KAChCA,QAAQ,qBAAsB,IACpCzB,MAAM,sBAAsBwL,EAAS,gBAAgBA,IAAW,2BAA4B,CACxFF,UAEJpL,OAAOC,eAAeC,KAAM,OAAQ,CAChCC,YAAY,EACZC,cAAc,EACdC,UAAU,EACVvD,MAAO,0BAEf,EAEJkD,OAAOC,eAAekL,GAAwB,OAAQ,CAClDhL,YAAY,EACZC,cAAc,EACdC,UAAU,EACVvD,MAAO,IAEXkD,OAAOC,eAAekL,GAAwB,cAAe,CACzDhL,YAAY,EACZC,cAAc,EACdC,UAAU,EACVvD,MAAO,uBAEJ,MAAMyO,WAA2B,IACpC1L,aAAY,MAAEuL,EAAK,aAAE7O,GAAkB,CAAC,GACpCuD,MAAM,gCAAgCvD,EAAe,MAAM,GAAWA,UAAuB,iEAAkE,CAC3J6O,UAEJpL,OAAOC,eAAeC,KAAM,OAAQ,CAChCC,YAAY,EACZC,cAAc,EACdC,UAAU,EACVvD,MAAO,iBAEf,EAEJkD,OAAOC,eAAesL,GAAoB,cAAe,CACrDpL,YAAY,EACZC,cAAc,EACdC,UAAU,EACVvD,MAAO,sEAEJ,MAAM0O,WAA0B,IACnC3L,aAAY,MAAEuL,EAAK,aAAE7O,GAAkB,CAAC,GACpCuD,MAAM,gCAAgCvD,EAAe,MAAM,GAAWA,KAAkB,oDAAqD,CACzI6O,UAEJpL,OAAOC,eAAeC,KAAM,OAAQ,CAChCC,YAAY,EACZC,cAAc,EACdC,UAAU,EACVvD,MAAO,gBAEf,EAEJkD,OAAOC,eAAeuL,GAAmB,cAAe,CACpDrL,YAAY,EACZC,cAAc,EACdC,UAAU,EACVvD,MAAO,sGAEJ,MAAM2O,WAA0B,IACnC5L,aAAY,MAAEuL,EAAK,MAAE3O,GAAW,CAAC,GAC7BqD,MAAM,sCAAsCrD,EAAQ,IAAIA,MAAY,0CAA2C,CAAE2O,UACjHpL,OAAOC,eAAeC,KAAM,OAAQ,CAChCC,YAAY,EACZC,cAAc,EACdC,UAAU,EACVvD,MAAO,qBAEf,EAEJkD,OAAOC,eAAewL,GAAmB,cAAe,CACpDtL,YAAY,EACZC,cAAc,EACdC,UAAU,EACVvD,MAAO,mBAEJ,MAAM4O,WAAyB,IAClC7L,aAAY,MAAEuL,EAAK,MAAE3O,GAAW,CAAC,GAC7BqD,MAAM,CACF,sCAAsCrD,EAAQ,IAAIA,MAAY,oDAC9D,iFACF+G,KAAK,MAAO,CAAE4H,UAChBpL,OAAOC,eAAeC,KAAM,OAAQ,CAChCC,YAAY,EACZC,cAAc,EACdC,UAAU,EACVvD,MAAO,oBAEf,EAEJkD,OAAOC,eAAeyL,GAAkB,cAAe,CACnDvL,YAAY,EACZC,cAAc,EACdC,UAAU,EACVvD,MAAO,6DAEJ,MAAM6O,WAA2B,IACpC9L,aAAY,MAAEuL,EAAK,MAAE3O,GAAW,CAAC,GAC7BqD,MAAM,sCAAsCrD,EAAQ,IAAIA,MAAY,uCAAwC,CAAE2O,UAC9GpL,OAAOC,eAAeC,KAAM,OAAQ,CAChCC,YAAY,EACZC,cAAc,EACdC,UAAU,EACVvD,MAAO,sBAEf,EAEJkD,OAAOC,eAAe0L,GAAoB,cAAe,CACrDxL,YAAY,EACZC,cAAc,EACdC,UAAU,EACVvD,MAAO,wBAEJ,MAAM8O,WAA+B,IACxC/L,aAAY,MAAEuL,GAAU,CAAC,GACrBtL,MAAM,CACF,4GACF0D,KAAK,MAAO,CACV4H,QACArL,aAAc,CACV,yEACA,gCACA,gCACA,IACA,+EACA,mEACA,+BACA,iEAGRC,OAAOC,eAAeC,KAAM,OAAQ,CAChCC,YAAY,EACZC,cAAc,EACdC,UAAU,EACVvD,MAAO,0BAEf,EAEJkD,OAAOC,eAAe2L,GAAwB,cAAe,CACzDzL,YAAY,EACZC,cAAc,EACdC,UAAU,EACVvD,MAAO,uBAEJ,MAAM+O,WAAiC,IAC1ChM,aAAY,MAAEuL,EAAK,IAAEhP,GAAS,CAAC,GAC3B0D,MAAM,qBAAqB1D,EAAM,IAAIA,MAAU,0EAA2E,CACtHgP,UAEJpL,OAAOC,eAAeC,KAAM,OAAQ,CAChCC,YAAY,EACZC,cAAc,EACdC,UAAU,EACVvD,MAAO,4BAEf,EAEJkD,OAAOC,eAAe4L,GAA0B,cAAe,CAC3D1L,YAAY,EACZC,cAAc,EACdC,UAAU,EACVvD,MAAO,6CAEJ,MAAMgP,WAAgC,IACzCjM,aAAY,MAAEuL,EAAK,IAAEhP,GAAS,CAAC,GAC3B0D,MAAM,qBAAqB1D,EAAM,IAAIA,MAAU,6CAA8C,CACzFgP,UAEJpL,OAAOC,eAAeC,KAAM,OAAQ,CAChCC,YAAY,EACZC,cAAc,EACdC,UAAU,EACVvD,MAAO,2BAEf,EAEJkD,OAAOC,eAAe6L,GAAyB,cAAe,CAC1D3L,YAAY,EACZC,cAAc,EACdC,UAAU,EACVvD,MAAO,0BAEJ,MAAMiP,WAAyC,IAClDlM,aAAY,MAAEuL,IACVtL,MAAM,wDAAyD,CAC3DsL,UAEJpL,OAAOC,eAAeC,KAAM,OAAQ,CAChCC,YAAY,EACZC,cAAc,EACdC,UAAU,EACVvD,MAAO,oCAEf,EAEJkD,OAAOC,eAAe8L,GAAkC,cAAe,CACnE5L,YAAY,EACZC,cAAc,EACdC,UAAU,EACVvD,MAAO,+BAEJ,MAAMkP,WAA4B,IACrCnM,aAAY,MAAEuL,EAAK,qBAAE5O,EAAoB,aAAED,GAAkB,CAAC,GAC1DuD,MAAM,CACF,6CAA6CtD,EACvC,MAAM,GAAWA,UACjB,0DAA0DD,EAAe,MAAM,GAAWA,UAAuB,QACzHiH,KAAK,MAAO,CACV4H,UAEJpL,OAAOC,eAAeC,KAAM,OAAQ,CAChCC,YAAY,EACZC,cAAc,EACdC,UAAU,EACVvD,MAAO,uBAEf,EAEJkD,OAAOC,eAAe+L,GAAqB,cAAe,CACtD7L,YAAY,EACZC,cAAc,EACdC,UAAU,EACVvD,MAAO,iF,gBC1MJ,SAASmP,GAAyBnQ,GACrC,MAAM,QAAEK,EAAO,qBAAEK,EAAoB,aAAED,EAAY,GAAEG,GAAOZ,EAC5D,GAAIK,GAAW,EACX,MAAM,IAAImO,GAAoB,CAAEnO,YACpC,GAAIO,IAAO8D,EAAU9D,GACjB,MAAM,IAAIkD,EAAoB,CAAE5E,QAAS0B,IAC7C,GAAIH,GAAgBA,EAAe,IAAM,KAAO,GAC5C,MAAM,IAAIgP,GAAmB,CAAEhP,iBACnC,GAAIC,GACAD,GACAC,EAAuBD,EACvB,MAAM,IAAIyP,GAAoB,CAAEzP,eAAcC,wBACtD,CC7BO,SAAS0P,GAAoBjP,GAChC,IAAKA,GAAoC,IAAtBA,EAAW6E,OAC1B,MAAO,GACX,MAAMqK,EAAuB,GAC7B,IAAK,IAAI1H,EAAI,EAAGA,EAAIxH,EAAW6E,OAAQ2C,IAAK,CACxC,MAAM,QAAEzJ,EAAO,YAAEoR,GAAgBnP,EAAWwH,GAC5C,IAAK,IAAI4H,EAAI,EAAGA,EAAID,EAAYtK,OAAQuK,IACpC,GAAID,EAAYC,GAAGvK,OAAS,GAAM,GAC9B,MAAM,IAAI6B,EAA2B,CAAEC,WAAYwI,EAAYC,KAGvE,IAAK7L,EAAUxF,EAAS,CAAE0F,QAAQ,IAC9B,MAAM,IAAId,EAAoB,CAAE5E,YAEpCmR,EAAqB/H,KAAK,CAACpJ,EAASoR,GACxC,CACA,OAAOD,CACX,CCjBO,SAASG,GAAqBxQ,EAAayQ,GAC9C,MAAMlR,ECZH,SAA4BS,GAC/B,GAAIA,EAAYT,KACZ,OAAOS,EAAYT,KACvB,QAAiC,IAAtBS,EAAYmI,YACwB,IAApCnI,EAAY0Q,0BACqB,IAAjC1Q,EAAYQ,uBACa,IAAzBR,EAAYsO,SACnB,MAAO,UACX,QAAwC,IAA7BtO,EAAYS,mBACyB,IAArCT,EAAYU,qBACnB,MAAO,UAEX,QAAoC,IAAzBV,EAAYO,SACnB,YAAsC,IAA3BP,EAAYmB,WACZ,UACJ,SAEX,MAAM,IAAIyG,EAAoC,CAAE5H,eACpD,CDNiB2Q,CAAmB3Q,GAChC,MAAa,YAATT,EAoER,SAAqCS,EAAayQ,GAC9C,MAAM,QAAEpQ,EAAO,IAAEC,EAAG,MAAEK,EAAK,GAAEC,EAAE,MAAEI,EAAK,aAAEP,EAAY,qBAAEC,EAAoB,WAAES,EAAU,KAAEsI,GAAUzJ,EAClGmQ,GAAyBnQ,GACzB,MAAMqQ,EAAuBD,GAAoBjP,GAC3CyP,EAAwB,EAC1B,EAAAtD,EAAA,IAAMjN,GACNM,GAAQ,EAAA2M,EAAA,IAAM3M,GAAS,KACvBD,GAAuB,EAAA4M,EAAA,IAAM5M,GAAwB,KACrDD,GAAe,EAAA6M,EAAA,IAAM7M,GAAgB,KACrCH,GAAM,EAAAgN,EAAA,IAAMhN,GAAO,KACnBM,GAAM,KACNI,GAAQ,EAAAsM,EAAA,IAAMtM,GAAS,KACvByI,GAAQ,KACR4G,KACGQ,GAAwB7Q,EAAayQ,IAE5C,OAAOrL,EAAU,CACb,OACAM,EAAMkL,IAEd,CAvFeE,CAA4B9Q,EAAayQ,GACvC,YAATlR,EAuFR,SAAqCS,EAAayQ,GAC9C,MAAM,QAAEpQ,EAAO,IAAEC,EAAG,KAAEmJ,EAAI,MAAE9I,EAAK,GAAEC,EAAE,MAAEI,EAAK,WAAEG,EAAU,SAAEZ,GAAaP,GF9DpE,SAAkCA,GACrC,MAAM,QAAEK,EAAO,qBAAEK,EAAoB,SAAEH,EAAQ,aAAEE,EAAY,GAAEG,GAAOZ,EACtE,GAAIK,GAAW,EACX,MAAM,IAAImO,GAAoB,CAAEnO,YACpC,GAAIO,IAAO8D,EAAU9D,GACjB,MAAM,IAAIkD,EAAoB,CAAE5E,QAAS0B,IAC7C,GAAIF,GAAwBD,EACxB,MAAM,IAAI,IAAU,wFACxB,GAAIF,GAAYA,EAAW,IAAM,KAAO,GACpC,MAAM,IAAIkP,GAAmB,CAAEhP,aAAcF,GACrD,CEqDIwQ,CAAyB/Q,GACzB,MAAMqQ,EAAuBD,GAAoBjP,GAC3CyP,EAAwB,EAC1B,EAAAtD,EAAA,IAAMjN,GACNM,GAAQ,EAAA2M,EAAA,IAAM3M,GAAS,KACvBJ,GAAW,EAAA+M,EAAA,IAAM/M,GAAY,KAC7BD,GAAM,EAAAgN,EAAA,IAAMhN,GAAO,KACnBM,GAAM,KACNI,GAAQ,EAAAsM,EAAA,IAAMtM,GAAS,KACvByI,GAAQ,KACR4G,KACGQ,GAAwB7Q,EAAayQ,IAE5C,OAAOrL,EAAU,CACb,OACAM,EAAMkL,IAEd,CAzGeI,CAA4BhR,EAAayQ,GACvC,YAATlR,EAIR,SAAqCS,EAAayQ,GAC9C,MAAM,QAAEpQ,EAAO,IAAEC,EAAG,MAAEK,EAAK,GAAEC,EAAE,MAAEI,EAAK,iBAAER,EAAgB,aAAEC,EAAY,qBAAEC,EAAoB,WAAES,EAAU,KAAEsI,GAAUzJ,GFbjH,SAAkCA,GACrC,MAAM,oBAAE0Q,GAAwB1Q,EAChC,GAAI0Q,EAAqB,CACrB,GAAmC,IAA/BA,EAAoB1K,OACpB,MAAM,IAAI8H,EACd,IAAK,MAAM/L,KAAQ2O,EAAqB,CACpC,MAAMxC,GAAQ,EAAAhM,GAAA,GAAKH,GACbkL,GAAU,SAAY,EAAA9B,GAAA,IAAMpJ,EAAM,EAAG,IAC3C,GAAc,KAAVmM,EACA,MAAM,IAAIH,GAA8B,CAAEhM,OAAMG,KAAMgM,IAC1D,GAAIjB,IAAYU,EACZ,MAAM,IAAIK,GAAiC,CACvCjM,OACAkL,WAEZ,CACJ,CACAkD,GAAyBnQ,EAC7B,CEJIiR,CAAyBjR,GACzB,IAAI0Q,EAAsB1Q,EAAY0Q,oBAClCpC,EAAWtO,EAAYsO,SAE3B,GAAItO,EAAYmI,aACoB,IAAxBuI,QACgB,IAAbpC,GAA2B,CACtC,MAAMnG,EAAyC,iBAAzBnI,EAAYmI,MAAM,GAClCnI,EAAYmI,MACZnI,EAAYmI,MAAM3G,KAAKgE,IAAM,QAAWA,KACxC0C,EAAMlI,EAAYkI,IAClBE,EAAcJ,EAAmB,CACnCG,QACAD,QAMJ,QAJmC,IAAxBwI,IACPA,EEtBL,SAAsCzI,GACzC,MAAM,YAAEG,EAAW,QAAE6E,GAAYhF,EAC3BrH,EAAKqH,EAAWrH,KAAiC,iBAAnBwH,EAAY,GAAkB,MAAQ,SACpE8I,EAAS,GACf,IAAK,MAAMtI,KAAcR,EACrB8I,EAAO5I,KAAK0E,EAA0B,CAClCpE,aACAhI,KACAqM,aAGR,OAAOiE,CACX,CFUkCC,CAA6B,CAC/C/I,sBAEgB,IAAbkG,EAA0B,CAEjCA,EAAWL,GAAe,CAAE9F,QAAOC,cAAaM,OADjCD,EAAc,CAAEN,QAAOC,cAAaF,SAEvD,CACJ,CACA,MAAMmI,EAAuBD,GAAoBjP,GAC3CyP,EAAwB,EAC1B,EAAAtD,EAAA,IAAMjN,GACNM,GAAQ,EAAA2M,EAAA,IAAM3M,GAAS,KACvBD,GAAuB,EAAA4M,EAAA,IAAM5M,GAAwB,KACrDD,GAAe,EAAA6M,EAAA,IAAM7M,GAAgB,KACrCH,GAAM,EAAAgN,EAAA,IAAMhN,GAAO,KACnBM,GAAM,KACNI,GAAQ,EAAAsM,EAAA,IAAMtM,GAAS,KACvByI,GAAQ,KACR4G,EACA7P,GAAmB,EAAA8M,EAAA,IAAM9M,GAAoB,KAC7CkQ,GAAuB,MACpBG,GAAwB7Q,EAAayQ,IAEtCtI,EAAQ,GACRC,EAAc,GACdM,EAAS,GACf,GAAI4F,EACA,IAAK,IAAI3F,EAAI,EAAGA,EAAI2F,EAAStI,OAAQ2C,IAAK,CACtC,MAAM,KAAEN,EAAI,WAAEO,EAAU,MAAE2F,GAAUD,EAAS3F,GAC7CR,EAAMG,KAAKD,GACXD,EAAYE,KAAKM,GACjBF,EAAOJ,KAAKiG,EAChB,CACJ,OAAOnJ,EAAU,CACb,OAGQM,EAFR4I,EAEc,CAACsC,EAAuBzI,EAAOC,EAAaM,GAE5CkI,IAEtB,CA9DeQ,CAA4BpR,EAAayQ,GAwGxD,SAAoCzQ,EAAayQ,GAC7C,MAAM,QAAEpQ,EAAU,EAAC,IAAEC,EAAG,KAAEmJ,EAAI,MAAE9I,EAAK,GAAEC,EAAE,MAAEI,EAAK,SAAET,GAAaP,GFvE5D,SAAiCA,GACpC,MAAM,QAAEK,EAAO,qBAAEK,EAAoB,SAAEH,EAAQ,aAAEE,EAAY,GAAEG,EAAE,WAAEO,GAAgBnB,EACnF,GAAIY,IAAO8D,EAAU9D,GACjB,MAAM,IAAIkD,EAAoB,CAAE5E,QAAS0B,IAC7C,QAAuB,IAAZP,GAA2BA,GAAW,EAC7C,MAAM,IAAImO,GAAoB,CAAEnO,YACpC,GAAIK,GAAwBD,EACxB,MAAM,IAAI,IAAU,sFACxB,GAAIF,GAAYA,EAAW,IAAM,KAAO,GACpC,MAAM,IAAIkP,GAAmB,CAAEhP,aAAcF,IACjD,GAAIY,EACA,MAAM,IAAI,IAAU,4DAC5B,CE4DIkQ,CAAwBrR,GACxB,IAAI4Q,EAAwB,CACxBjQ,GAAQ,EAAA2M,EAAA,IAAM3M,GAAS,KACvBJ,GAAW,EAAA+M,EAAA,IAAM/M,GAAY,KAC7BD,GAAM,EAAAgN,EAAA,IAAMhN,GAAO,KACnBM,GAAM,KACNI,GAAQ,EAAAsM,EAAA,IAAMtM,GAAS,KACvByI,GAAQ,MAEZ,GAAIgH,EAAW,CACX,MAAMxP,EAAI,MAEN,GAAIwP,EAAUxP,GAAK,IAAK,CAEpB,OADyBwP,EAAUxP,EAAI,KAAO,GACxB,EACXwP,EAAUxP,EACd,KAAuB,MAAhBwP,EAAUxP,EAAY,GAAK,GAC7C,CAEA,GAAIZ,EAAU,EACV,OAAOD,OAAiB,EAAVC,GAAeD,OAAO,IAAMqQ,EAAUxP,EAAI,KAE5D,MAAMA,EAAI,KAAuB,MAAhBwP,EAAUxP,EAAY,GAAK,IAC5C,GAAIwP,EAAUxP,IAAMA,EAChB,MAAM,IAAI0G,EAAoB,CAAE1G,EAAGwP,EAAUxP,IACjD,OAAOA,CACV,EAhBS,GAiBV2P,EAAwB,IACjBA,GACH,EAAAtD,EAAA,IAAMrM,GACNwP,EAAUa,EACVb,EAAUc,EAElB,MACSlR,EAAU,IACfuQ,EAAwB,IACjBA,GACH,EAAAtD,EAAA,IAAMjN,GACN,KACA,OAGR,OAAOqF,EAAMkL,EACjB,CApJWY,CAA2BxR,EAAayQ,EACnD,CAoJO,SAASI,GAAwB7Q,EAAayQ,GACjD,MAAM,EAAEa,EAAC,EAAEC,EAAC,EAAEtQ,EAAC,QAAEC,GAAYuP,GAAazQ,EAC1C,QAAiB,IAANsR,EACP,MAAO,GACX,QAAiB,IAANC,EACP,MAAO,GACX,QAAiB,IAANtQ,QAAwC,IAAZC,EACnC,MAAO,GAUX,MAAO,CARoB,iBAAZA,EACAA,GAAU,EAAAoM,EAAA,IAAM,GAAK,KACtB,KAANrM,EACO,KACD,KAANA,GACO,EAAAqM,EAAA,IAAM,GACJ,MAANrM,EAAY,MAAO,EAAAqM,EAAA,IAAM,IAElB,EAAAmE,GAAA,GAAKH,IAAI,EAAAG,GAAA,GAAKF,GACpC,CGxLO,MAAMG,GAAc,CACvB1S,UCEqB,CACvB2S,eAAgB,CAAEzS,QAAS,8CAC3B0S,QAAS,CAAE1S,QAAS,8CACpB2S,uBAAwB,CACtB3S,QAAS,8CAEX4S,eAAgB,CAAE5S,QAAS,8CAC3B6S,iBAAkB,CAAE7S,QAAS,8CAC7B8S,oBAAqB,CACnB9S,QAAS,+CDVTlB,WAAU,EACVG,YEKuB,CACvB6B,YANG,SAA8BA,EAAayQ,GAC9C,OAyBJ,SAAmBzQ,GACf,MAAyB,YAArBA,EAAYT,WAEsB,IAA3BS,EAAYwD,UAG3B,CA/BQyO,CAAUjS,GAOlB,SAAqCA,IAyB9B,SAAkCA,GACrC,MAAM,KAAEuI,EAAI,GAAE3H,GAAOZ,EACrB,GAAIuI,IAAS7D,EAAU6D,GACnB,MAAM,IAAIzE,EAAoB,CAAE5E,QAASqJ,IAC7C,GAAI3H,IAAO8D,EAAU9D,GACjB,MAAM,IAAIkD,EAAoB,CAAE5E,QAAS0B,GACjD,CA9BIsR,CAAyBlS,GACzB,MAAM,WAAEwD,EAAU,KAAEiG,EAAI,KAAElB,EAAI,IAAEjI,EAAG,WAAEgD,EAAU,KAAEC,EAAI,GAAE3C,EAAE,MAAEI,GAAUhB,EAWrE,OAAOoF,EAAU,CACb,OACAM,EAZ0B,CAC1BlC,EACA+E,EACA3H,GAAM,KACN2C,GAAO,EAAA+J,EAAA,IAAM/J,GAAQ,KACrBvC,GAAQ,EAAAsM,EAAA,IAAMtM,GAAS,KACvBV,GAAM,EAAAgN,EAAA,IAAMhN,GAAO,KACnBgD,EAAa,MAAQ,KACrBmG,GAAQ,QAMhB,CAvBe0I,CAA4BnS,GAChCwQ,GAAsBxQ,EAAayQ,EAC9C,ICPa2B,GAAyBtU,EAAY,IAC3C4T,GACHrT,GAAI,GACJC,KAAM,aACNC,eAAgB,CAAED,KAAM,QAASE,OAAQ,MAAOC,SAAU,IAC1DC,QAAS,CACLC,QAAS,CACLC,KAAM,CAAC,iCAGfC,eAAgB,CACZF,QAAS,CACLL,KAAM,oBACNQ,IAAK,kCACLC,OAAQ,4CAGhBC,UAAW,IACJ0S,GAAY1S,UACfqT,eAAgB,CACZ,EAAY,CACRnT,QAAS,+CAGjBG,WAAY,CACRH,QAAS,6CACTE,aAAc,SAElBkT,OAAQ,CACJ,EAAY,CACRpT,QAAS,+CAGjBqT,iBAAkB,CACd,EAAY,CACRrT,QAAS,gDAIrBsT,SAxCa,ICDJC,GAAwB3U,EAAY,CAC7CO,GAAI,SACJC,KAAM,UACNC,eAAgB,CAAED,KAAM,gBAAiBE,OAAQ,MAAOC,SAAU,IAClEC,QAAS,CACLC,QAAS,CACLC,KAAM,CAAC,6BAGfC,eAAgB,CACZF,QAAS,CACLL,KAAM,YACNQ,IAAK,+BACLC,OAAQ,yCAGhBC,UAAW,CACPK,WAAY,CACRH,QAAS,6CACTE,aAAc,QAElBH,YAAa,CAAEC,QAAS,8CACxBC,qBAAsB,CAClBD,QAAS,6CACTE,aAAc,UAGtBsT,SAAS,G","sources":["webpack://@snx-v3/ultrasound/../../node_modules/viem/_esm/utils/chain/defineChain.js","webpack://@snx-v3/ultrasound/../../node_modules/viem/_esm/chains/definitions/mainnet.js","webpack://@snx-v3/ultrasound/../../node_modules/viem/_esm/utils/formatters/formatter.js","webpack://@snx-v3/ultrasound/../../node_modules/viem/_esm/utils/formatters/transaction.js","webpack://@snx-v3/ultrasound/../../node_modules/viem/_esm/utils/formatters/block.js","webpack://@snx-v3/ultrasound/../../node_modules/viem/_esm/utils/formatters/transactionReceipt.js","webpack://@snx-v3/ultrasound/../../node_modules/viem/_esm/utils/formatters/log.js","webpack://@snx-v3/ultrasound/../../node_modules/viem/_esm/op-stack/formatters.js","webpack://@snx-v3/ultrasound/../../node_modules/viem/_esm/errors/address.js","webpack://@snx-v3/ultrasound/../../node_modules/viem/_esm/utils/address/isAddress.js","webpack://@snx-v3/ultrasound/../../node_modules/viem/_esm/utils/data/concat.js","webpack://@snx-v3/ultrasound/../../node_modules/viem/_esm/utils/encoding/toRlp.js","webpack://@snx-v3/ultrasound/../../node_modules/viem/_esm/errors/transaction.js","webpack://@snx-v3/ultrasound/../../node_modules/viem/_esm/utils/blob/blobsToCommitments.js","webpack://@snx-v3/ultrasound/../../node_modules/viem/_esm/utils/blob/blobsToProofs.js","webpack://@snx-v3/ultrasound/../../node_modules/viem/node_modules/@noble/hashes/esm/_sha2.js","webpack://@snx-v3/ultrasound/../../node_modules/viem/node_modules/@noble/hashes/esm/sha256.js","webpack://@snx-v3/ultrasound/../../node_modules/viem/_esm/utils/blob/commitmentToVersionedHash.js","webpack://@snx-v3/ultrasound/../../node_modules/viem/_esm/utils/hash/sha256.js","webpack://@snx-v3/ultrasound/../../node_modules/viem/_esm/constants/blob.js","webpack://@snx-v3/ultrasound/../../node_modules/viem/_esm/constants/kzg.js","webpack://@snx-v3/ultrasound/../../node_modules/viem/_esm/errors/blob.js","webpack://@snx-v3/ultrasound/../../node_modules/viem/_esm/utils/blob/toBlobSidecars.js","webpack://@snx-v3/ultrasound/../../node_modules/viem/_esm/utils/blob/toBlobs.js","webpack://@snx-v3/ultrasound/../../node_modules/viem/_esm/errors/chain.js","webpack://@snx-v3/ultrasound/../../node_modules/viem/_esm/constants/unit.js","webpack://@snx-v3/ultrasound/../../node_modules/viem/_esm/utils/unit/formatGwei.js","webpack://@snx-v3/ultrasound/../../node_modules/viem/_esm/utils/unit/formatUnits.js","webpack://@snx-v3/ultrasound/../../node_modules/viem/_esm/errors/node.js","webpack://@snx-v3/ultrasound/../../node_modules/viem/_esm/utils/transaction/assertTransaction.js","webpack://@snx-v3/ultrasound/../../node_modules/viem/_esm/utils/transaction/serializeAccessList.js","webpack://@snx-v3/ultrasound/../../node_modules/viem/_esm/utils/transaction/serializeTransaction.js","webpack://@snx-v3/ultrasound/../../node_modules/viem/_esm/utils/transaction/getTransactionType.js","webpack://@snx-v3/ultrasound/../../node_modules/viem/_esm/utils/blob/commitmentsToVersionedHashes.js","webpack://@snx-v3/ultrasound/../../node_modules/viem/_esm/op-stack/chainConfig.js","webpack://@snx-v3/ultrasound/../../op-stack/contracts.ts","webpack://@snx-v3/ultrasound/../../node_modules/viem/_esm/op-stack/serializers.js","webpack://@snx-v3/ultrasound/../../node_modules/viem/_esm/chains/definitions/optimism.js","webpack://@snx-v3/ultrasound/../../node_modules/viem/_esm/chains/definitions/sepolia.js"],"sourcesContent":["export function defineChain(chain) {\n    return {\n        formatters: undefined,\n        fees: undefined,\n        serializers: undefined,\n        ...chain,\n    };\n}\n//# sourceMappingURL=defineChain.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const mainnet = /*#__PURE__*/ defineChain({\n    id: 1,\n    name: 'Ethereum',\n    nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://cloudflare-eth.com'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Etherscan',\n            url: 'https://etherscan.io',\n            apiUrl: 'https://api.etherscan.io/api',\n        },\n    },\n    contracts: {\n        ensRegistry: {\n            address: '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e',\n        },\n        ensUniversalResolver: {\n            address: '0xce01f8eee7E479C928F8919abD53E553a36CeF67',\n            blockCreated: 19_258_213,\n        },\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n            blockCreated: 14_353_601,\n        },\n    },\n});\n//# sourceMappingURL=mainnet.js.map","export function defineFormatter(type, format) {\n    return ({ exclude, format: overrides, }) => {\n        return {\n            exclude,\n            format: (args) => {\n                const formatted = format(args);\n                if (exclude) {\n                    for (const key of exclude) {\n                        delete formatted[key];\n                    }\n                }\n                return {\n                    ...formatted,\n                    ...overrides(args),\n                };\n            },\n            type,\n        };\n    };\n}\n//# sourceMappingURL=formatter.js.map","import { hexToNumber } from '../encoding/fromHex.js';\nimport { defineFormatter } from './formatter.js';\nexport const transactionType = {\n    '0x0': 'legacy',\n    '0x1': 'eip2930',\n    '0x2': 'eip1559',\n    '0x3': 'eip4844',\n};\nexport function formatTransaction(transaction) {\n    const transaction_ = {\n        ...transaction,\n        blockHash: transaction.blockHash ? transaction.blockHash : null,\n        blockNumber: transaction.blockNumber\n            ? BigInt(transaction.blockNumber)\n            : null,\n        chainId: transaction.chainId ? hexToNumber(transaction.chainId) : undefined,\n        gas: transaction.gas ? BigInt(transaction.gas) : undefined,\n        gasPrice: transaction.gasPrice ? BigInt(transaction.gasPrice) : undefined,\n        maxFeePerBlobGas: transaction.maxFeePerBlobGas\n            ? BigInt(transaction.maxFeePerBlobGas)\n            : undefined,\n        maxFeePerGas: transaction.maxFeePerGas\n            ? BigInt(transaction.maxFeePerGas)\n            : undefined,\n        maxPriorityFeePerGas: transaction.maxPriorityFeePerGas\n            ? BigInt(transaction.maxPriorityFeePerGas)\n            : undefined,\n        nonce: transaction.nonce ? hexToNumber(transaction.nonce) : undefined,\n        to: transaction.to ? transaction.to : null,\n        transactionIndex: transaction.transactionIndex\n            ? Number(transaction.transactionIndex)\n            : null,\n        type: transaction.type\n            ? transactionType[transaction.type]\n            : undefined,\n        typeHex: transaction.type ? transaction.type : undefined,\n        value: transaction.value ? BigInt(transaction.value) : undefined,\n        v: transaction.v ? BigInt(transaction.v) : undefined,\n    };\n    transaction_.yParity = (() => {\n        // If `yParity` is provided, we will use it.\n        if (transaction.yParity)\n            return Number(transaction.yParity);\n        // If no `yParity` provided, try derive from `v`.\n        if (typeof transaction_.v === 'bigint') {\n            if (transaction_.v === 0n || transaction_.v === 27n)\n                return 0;\n            if (transaction_.v === 1n || transaction_.v === 28n)\n                return 1;\n            if (transaction_.v >= 35n)\n                return transaction_.v % 2n === 0n ? 1 : 0;\n        }\n        return undefined;\n    })();\n    if (transaction_.type === 'legacy') {\n        delete transaction_.accessList;\n        delete transaction_.maxFeePerBlobGas;\n        delete transaction_.maxFeePerGas;\n        delete transaction_.maxPriorityFeePerGas;\n        delete transaction_.yParity;\n    }\n    if (transaction_.type === 'eip2930') {\n        delete transaction_.maxFeePerBlobGas;\n        delete transaction_.maxFeePerGas;\n        delete transaction_.maxPriorityFeePerGas;\n    }\n    if (transaction_.type === 'eip1559') {\n        delete transaction_.maxFeePerBlobGas;\n    }\n    return transaction_;\n}\nexport const defineTransaction = /*#__PURE__*/ defineFormatter('transaction', formatTransaction);\n//# sourceMappingURL=transaction.js.map","import { defineFormatter } from './formatter.js';\nimport { formatTransaction } from './transaction.js';\nexport function formatBlock(block) {\n    const transactions = block.transactions?.map((transaction) => {\n        if (typeof transaction === 'string')\n            return transaction;\n        return formatTransaction(transaction);\n    });\n    return {\n        ...block,\n        baseFeePerGas: block.baseFeePerGas ? BigInt(block.baseFeePerGas) : null,\n        blobGasUsed: block.blobGasUsed ? BigInt(block.blobGasUsed) : undefined,\n        difficulty: block.difficulty ? BigInt(block.difficulty) : undefined,\n        excessBlobGas: block.excessBlobGas\n            ? BigInt(block.excessBlobGas)\n            : undefined,\n        gasLimit: block.gasLimit ? BigInt(block.gasLimit) : undefined,\n        gasUsed: block.gasUsed ? BigInt(block.gasUsed) : undefined,\n        hash: block.hash ? block.hash : null,\n        logsBloom: block.logsBloom ? block.logsBloom : null,\n        nonce: block.nonce ? block.nonce : null,\n        number: block.number ? BigInt(block.number) : null,\n        size: block.size ? BigInt(block.size) : undefined,\n        timestamp: block.timestamp ? BigInt(block.timestamp) : undefined,\n        transactions,\n        totalDifficulty: block.totalDifficulty\n            ? BigInt(block.totalDifficulty)\n            : null,\n    };\n}\nexport const defineBlock = /*#__PURE__*/ defineFormatter('block', formatBlock);\n//# sourceMappingURL=block.js.map","import { hexToNumber } from '../encoding/fromHex.js';\nimport { defineFormatter } from './formatter.js';\nimport { formatLog } from './log.js';\nimport { transactionType } from './transaction.js';\nexport const receiptStatuses = {\n    '0x0': 'reverted',\n    '0x1': 'success',\n};\nexport function formatTransactionReceipt(transactionReceipt) {\n    const receipt = {\n        ...transactionReceipt,\n        blockNumber: transactionReceipt.blockNumber\n            ? BigInt(transactionReceipt.blockNumber)\n            : null,\n        contractAddress: transactionReceipt.contractAddress\n            ? transactionReceipt.contractAddress\n            : null,\n        cumulativeGasUsed: transactionReceipt.cumulativeGasUsed\n            ? BigInt(transactionReceipt.cumulativeGasUsed)\n            : null,\n        effectiveGasPrice: transactionReceipt.effectiveGasPrice\n            ? BigInt(transactionReceipt.effectiveGasPrice)\n            : null,\n        gasUsed: transactionReceipt.gasUsed\n            ? BigInt(transactionReceipt.gasUsed)\n            : null,\n        logs: transactionReceipt.logs\n            ? transactionReceipt.logs.map((log) => formatLog(log))\n            : null,\n        to: transactionReceipt.to ? transactionReceipt.to : null,\n        transactionIndex: transactionReceipt.transactionIndex\n            ? hexToNumber(transactionReceipt.transactionIndex)\n            : null,\n        status: transactionReceipt.status\n            ? receiptStatuses[transactionReceipt.status]\n            : null,\n        type: transactionReceipt.type\n            ? transactionType[transactionReceipt.type] || transactionReceipt.type\n            : null,\n    };\n    if (transactionReceipt.blobGasPrice)\n        receipt.blobGasPrice = BigInt(transactionReceipt.blobGasPrice);\n    if (transactionReceipt.blobGasUsed)\n        receipt.blobGasUsed = BigInt(transactionReceipt.blobGasUsed);\n    return receipt;\n}\nexport const defineTransactionReceipt = /*#__PURE__*/ defineFormatter('transactionReceipt', formatTransactionReceipt);\n//# sourceMappingURL=transactionReceipt.js.map","export function formatLog(log, { args, eventName, } = {}) {\n    return {\n        ...log,\n        blockHash: log.blockHash ? log.blockHash : null,\n        blockNumber: log.blockNumber ? BigInt(log.blockNumber) : null,\n        logIndex: log.logIndex ? Number(log.logIndex) : null,\n        transactionHash: log.transactionHash ? log.transactionHash : null,\n        transactionIndex: log.transactionIndex\n            ? Number(log.transactionIndex)\n            : null,\n        ...(eventName ? { args, eventName } : {}),\n    };\n}\n//# sourceMappingURL=log.js.map","import { hexToBigInt } from '../utils/encoding/fromHex.js';\nimport { defineBlock } from '../utils/formatters/block.js';\nimport { defineTransaction, formatTransaction, } from '../utils/formatters/transaction.js';\nimport { defineTransactionReceipt } from '../utils/formatters/transactionReceipt.js';\nexport const formatters = {\n    block: /*#__PURE__*/ defineBlock({\n        format(args) {\n            const transactions = args.transactions?.map((transaction) => {\n                if (typeof transaction === 'string')\n                    return transaction;\n                const formatted = formatTransaction(transaction);\n                if (formatted.typeHex === '0x7e') {\n                    formatted.isSystemTx = transaction.isSystemTx;\n                    formatted.mint = transaction.mint\n                        ? hexToBigInt(transaction.mint)\n                        : undefined;\n                    formatted.sourceHash = transaction.sourceHash;\n                    formatted.type = 'deposit';\n                }\n                return formatted;\n            });\n            return {\n                transactions,\n                stateRoot: args.stateRoot,\n            };\n        },\n    }),\n    transaction: /*#__PURE__*/ defineTransaction({\n        format(args) {\n            const transaction = {};\n            if (args.type === '0x7e') {\n                transaction.isSystemTx = args.isSystemTx;\n                transaction.mint = args.mint ? hexToBigInt(args.mint) : undefined;\n                transaction.sourceHash = args.sourceHash;\n                transaction.type = 'deposit';\n            }\n            return transaction;\n        },\n    }),\n    transactionReceipt: /*#__PURE__*/ defineTransactionReceipt({\n        format(args) {\n            return {\n                l1GasPrice: args.l1GasPrice ? hexToBigInt(args.l1GasPrice) : null,\n                l1GasUsed: args.l1GasUsed ? hexToBigInt(args.l1GasUsed) : null,\n                l1Fee: args.l1Fee ? hexToBigInt(args.l1Fee) : null,\n                l1FeeScalar: args.l1FeeScalar ? Number(args.l1FeeScalar) : null,\n            };\n        },\n    }),\n};\n//# sourceMappingURL=formatters.js.map","import { BaseError } from './base.js';\nexport class InvalidAddressError extends BaseError {\n    constructor({ address }) {\n        super(`Address \"${address}\" is invalid.`, {\n            metaMessages: [\n                '- Address must be a hex value of 20 bytes (40 hex characters).',\n                '- Address must match its checksum counterpart.',\n            ],\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'InvalidAddressError'\n        });\n    }\n}\n//# sourceMappingURL=address.js.map","import { LruMap } from '../lru.js';\nimport { checksumAddress } from './getAddress.js';\nconst addressRegex = /^0x[a-fA-F0-9]{40}$/;\nexport const isAddressCache = /*#__PURE__*/ new LruMap(8192);\nexport function isAddress(address, options) {\n    const { strict = true } = options ?? {};\n    const cacheKey = `${address}.${strict}`;\n    if (isAddressCache.has(cacheKey))\n        return isAddressCache.get(cacheKey);\n    const result = (() => {\n        if (!addressRegex.test(address))\n            return false;\n        if (address.toLowerCase() === address)\n            return true;\n        if (strict)\n            return checksumAddress(address) === address;\n        return true;\n    })();\n    isAddressCache.set(cacheKey, result);\n    return result;\n}\n//# sourceMappingURL=isAddress.js.map","export function concat(values) {\n    if (typeof values[0] === 'string')\n        return concatHex(values);\n    return concatBytes(values);\n}\nexport function concatBytes(values) {\n    let length = 0;\n    for (const arr of values) {\n        length += arr.length;\n    }\n    const result = new Uint8Array(length);\n    let offset = 0;\n    for (const arr of values) {\n        result.set(arr, offset);\n        offset += arr.length;\n    }\n    return result;\n}\nexport function concatHex(values) {\n    return `0x${values.reduce((acc, x) => acc + x.replace('0x', ''), '')}`;\n}\n//# sourceMappingURL=concat.js.map","import { BaseError } from '../../errors/base.js';\nimport { createCursor, } from '../cursor.js';\nimport { hexToBytes } from './toBytes.js';\nimport { bytesToHex } from './toHex.js';\nexport function toRlp(bytes, to = 'hex') {\n    const encodable = getEncodable(bytes);\n    const cursor = createCursor(new Uint8Array(encodable.length));\n    encodable.encode(cursor);\n    if (to === 'hex')\n        return bytesToHex(cursor.bytes);\n    return cursor.bytes;\n}\nexport function bytesToRlp(bytes, to = 'bytes') {\n    return toRlp(bytes, to);\n}\nexport function hexToRlp(hex, to = 'hex') {\n    return toRlp(hex, to);\n}\nfunction getEncodable(bytes) {\n    if (Array.isArray(bytes))\n        return getEncodableList(bytes.map((x) => getEncodable(x)));\n    return getEncodableBytes(bytes);\n}\nfunction getEncodableList(list) {\n    const bodyLength = list.reduce((acc, x) => acc + x.length, 0);\n    const sizeOfBodyLength = getSizeOfLength(bodyLength);\n    const length = (() => {\n        if (bodyLength <= 55)\n            return 1 + bodyLength;\n        return 1 + sizeOfBodyLength + bodyLength;\n    })();\n    return {\n        length,\n        encode(cursor) {\n            if (bodyLength <= 55) {\n                cursor.pushByte(0xc0 + bodyLength);\n            }\n            else {\n                cursor.pushByte(0xc0 + 55 + sizeOfBodyLength);\n                if (sizeOfBodyLength === 1)\n                    cursor.pushUint8(bodyLength);\n                else if (sizeOfBodyLength === 2)\n                    cursor.pushUint16(bodyLength);\n                else if (sizeOfBodyLength === 3)\n                    cursor.pushUint24(bodyLength);\n                else\n                    cursor.pushUint32(bodyLength);\n            }\n            for (const { encode } of list) {\n                encode(cursor);\n            }\n        },\n    };\n}\nfunction getEncodableBytes(bytesOrHex) {\n    const bytes = typeof bytesOrHex === 'string' ? hexToBytes(bytesOrHex) : bytesOrHex;\n    const sizeOfBytesLength = getSizeOfLength(bytes.length);\n    const length = (() => {\n        if (bytes.length === 1 && bytes[0] < 0x80)\n            return 1;\n        if (bytes.length <= 55)\n            return 1 + bytes.length;\n        return 1 + sizeOfBytesLength + bytes.length;\n    })();\n    return {\n        length,\n        encode(cursor) {\n            if (bytes.length === 1 && bytes[0] < 0x80) {\n                cursor.pushBytes(bytes);\n            }\n            else if (bytes.length <= 55) {\n                cursor.pushByte(0x80 + bytes.length);\n                cursor.pushBytes(bytes);\n            }\n            else {\n                cursor.pushByte(0x80 + 55 + sizeOfBytesLength);\n                if (sizeOfBytesLength === 1)\n                    cursor.pushUint8(bytes.length);\n                else if (sizeOfBytesLength === 2)\n                    cursor.pushUint16(bytes.length);\n                else if (sizeOfBytesLength === 3)\n                    cursor.pushUint24(bytes.length);\n                else\n                    cursor.pushUint32(bytes.length);\n                cursor.pushBytes(bytes);\n            }\n        },\n    };\n}\nfunction getSizeOfLength(length) {\n    if (length < 2 ** 8)\n        return 1;\n    if (length < 2 ** 16)\n        return 2;\n    if (length < 2 ** 24)\n        return 3;\n    if (length < 2 ** 32)\n        return 4;\n    throw new BaseError('Length is too large.');\n}\n//# sourceMappingURL=toRlp.js.map","import { formatEther } from '../utils/unit/formatEther.js';\nimport { formatGwei } from '../utils/unit/formatGwei.js';\nimport { BaseError } from './base.js';\nexport function prettyPrint(args) {\n    const entries = Object.entries(args)\n        .map(([key, value]) => {\n        if (value === undefined || value === false)\n            return null;\n        return [key, value];\n    })\n        .filter(Boolean);\n    const maxLength = entries.reduce((acc, [key]) => Math.max(acc, key.length), 0);\n    return entries\n        .map(([key, value]) => `  ${`${key}:`.padEnd(maxLength + 1)}  ${value}`)\n        .join('\\n');\n}\nexport class FeeConflictError extends BaseError {\n    constructor() {\n        super([\n            'Cannot specify both a `gasPrice` and a `maxFeePerGas`/`maxPriorityFeePerGas`.',\n            'Use `maxFeePerGas`/`maxPriorityFeePerGas` for EIP-1559 compatible networks, and `gasPrice` for others.',\n        ].join('\\n'));\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'FeeConflictError'\n        });\n    }\n}\nexport class InvalidLegacyVError extends BaseError {\n    constructor({ v }) {\n        super(`Invalid \\`v\\` value \"${v}\". Expected 27 or 28.`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'InvalidLegacyVError'\n        });\n    }\n}\nexport class InvalidSerializableTransactionError extends BaseError {\n    constructor({ transaction }) {\n        super('Cannot infer a transaction type from provided transaction.', {\n            metaMessages: [\n                'Provided Transaction:',\n                '{',\n                prettyPrint(transaction),\n                '}',\n                '',\n                'To infer the type, either provide:',\n                '- a `type` to the Transaction, or',\n                '- an EIP-1559 Transaction with `maxFeePerGas`, or',\n                '- an EIP-2930 Transaction with `gasPrice` & `accessList`, or',\n                '- an EIP-4844 Transaction with `blobs`, `blobVersionedHashes`, `sidecars`, or',\n                '- a Legacy Transaction with `gasPrice`',\n            ],\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'InvalidSerializableTransactionError'\n        });\n    }\n}\nexport class InvalidSerializedTransactionTypeError extends BaseError {\n    constructor({ serializedType }) {\n        super(`Serialized transaction type \"${serializedType}\" is invalid.`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'InvalidSerializedTransactionType'\n        });\n        Object.defineProperty(this, \"serializedType\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.serializedType = serializedType;\n    }\n}\nexport class InvalidSerializedTransactionError extends BaseError {\n    constructor({ attributes, serializedTransaction, type, }) {\n        const missing = Object.entries(attributes)\n            .map(([key, value]) => (typeof value === 'undefined' ? key : undefined))\n            .filter(Boolean);\n        super(`Invalid serialized transaction of type \"${type}\" was provided.`, {\n            metaMessages: [\n                `Serialized Transaction: \"${serializedTransaction}\"`,\n                missing.length > 0 ? `Missing Attributes: ${missing.join(', ')}` : '',\n            ].filter(Boolean),\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'InvalidSerializedTransactionError'\n        });\n        Object.defineProperty(this, \"serializedTransaction\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"type\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.serializedTransaction = serializedTransaction;\n        this.type = type;\n    }\n}\nexport class InvalidStorageKeySizeError extends BaseError {\n    constructor({ storageKey }) {\n        super(`Size for storage key \"${storageKey}\" is invalid. Expected 32 bytes. Got ${Math.floor((storageKey.length - 2) / 2)} bytes.`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'InvalidStorageKeySizeError'\n        });\n    }\n}\nexport class TransactionExecutionError extends BaseError {\n    constructor(cause, { account, docsPath, chain, data, gas, gasPrice, maxFeePerGas, maxPriorityFeePerGas, nonce, to, value, }) {\n        const prettyArgs = prettyPrint({\n            chain: chain && `${chain?.name} (id: ${chain?.id})`,\n            from: account?.address,\n            to,\n            value: typeof value !== 'undefined' &&\n                `${formatEther(value)} ${chain?.nativeCurrency?.symbol || 'ETH'}`,\n            data,\n            gas,\n            gasPrice: typeof gasPrice !== 'undefined' && `${formatGwei(gasPrice)} gwei`,\n            maxFeePerGas: typeof maxFeePerGas !== 'undefined' &&\n                `${formatGwei(maxFeePerGas)} gwei`,\n            maxPriorityFeePerGas: typeof maxPriorityFeePerGas !== 'undefined' &&\n                `${formatGwei(maxPriorityFeePerGas)} gwei`,\n            nonce,\n        });\n        super(cause.shortMessage, {\n            cause,\n            docsPath,\n            metaMessages: [\n                ...(cause.metaMessages ? [...cause.metaMessages, ' '] : []),\n                'Request Arguments:',\n                prettyArgs,\n            ].filter(Boolean),\n        });\n        Object.defineProperty(this, \"cause\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'TransactionExecutionError'\n        });\n        this.cause = cause;\n    }\n}\nexport class TransactionNotFoundError extends BaseError {\n    constructor({ blockHash, blockNumber, blockTag, hash, index, }) {\n        let identifier = 'Transaction';\n        if (blockTag && index !== undefined)\n            identifier = `Transaction at block time \"${blockTag}\" at index \"${index}\"`;\n        if (blockHash && index !== undefined)\n            identifier = `Transaction at block hash \"${blockHash}\" at index \"${index}\"`;\n        if (blockNumber && index !== undefined)\n            identifier = `Transaction at block number \"${blockNumber}\" at index \"${index}\"`;\n        if (hash)\n            identifier = `Transaction with hash \"${hash}\"`;\n        super(`${identifier} could not be found.`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'TransactionNotFoundError'\n        });\n    }\n}\nexport class TransactionReceiptNotFoundError extends BaseError {\n    constructor({ hash }) {\n        super(`Transaction receipt with hash \"${hash}\" could not be found. The Transaction may not be processed on a block yet.`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'TransactionReceiptNotFoundError'\n        });\n    }\n}\nexport class WaitForTransactionReceiptTimeoutError extends BaseError {\n    constructor({ hash }) {\n        super(`Timed out while waiting for transaction with hash \"${hash}\" to be confirmed.`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'WaitForTransactionReceiptTimeoutError'\n        });\n    }\n}\n//# sourceMappingURL=transaction.js.map","import { hexToBytes } from '../encoding/toBytes.js';\nimport { bytesToHex } from '../encoding/toHex.js';\n/**\n * Compute commitments from a list of blobs.\n *\n * @example\n * ```ts\n * import { blobsToCommitments, toBlobs } from 'viem'\n * import { kzg } from './kzg'\n *\n * const blobs = toBlobs({ data: '0x1234' })\n * const commitments = blobsToCommitments({ blobs, kzg })\n * ```\n */\nexport function blobsToCommitments(parameters) {\n    const { kzg } = parameters;\n    const to = parameters.to ?? (typeof parameters.blobs[0] === 'string' ? 'hex' : 'bytes');\n    const blobs = (typeof parameters.blobs[0] === 'string'\n        ? parameters.blobs.map((x) => hexToBytes(x))\n        : parameters.blobs);\n    const commitments = [];\n    for (const blob of blobs)\n        commitments.push(Uint8Array.from(kzg.blobToKzgCommitment(blob)));\n    return (to === 'bytes'\n        ? commitments\n        : commitments.map((x) => bytesToHex(x)));\n}\n//# sourceMappingURL=blobsToCommitments.js.map","import { hexToBytes } from '../encoding/toBytes.js';\nimport { bytesToHex } from '../encoding/toHex.js';\n/**\n * Compute the proofs for a list of blobs and their commitments.\n *\n * @example\n * ```ts\n * import {\n *   blobsToCommitments,\n *   toBlobs\n * } from 'viem'\n * import { kzg } from './kzg'\n *\n * const blobs = toBlobs({ data: '0x1234' })\n * const commitments = blobsToCommitments({ blobs, kzg })\n * const proofs = blobsToProofs({ blobs, commitments, kzg })\n * ```\n */\nexport function blobsToProofs(parameters) {\n    const { kzg } = parameters;\n    const to = parameters.to ?? (typeof parameters.blobs[0] === 'string' ? 'hex' : 'bytes');\n    const blobs = (typeof parameters.blobs[0] === 'string'\n        ? parameters.blobs.map((x) => hexToBytes(x))\n        : parameters.blobs);\n    const commitments = (typeof parameters.commitments[0] === 'string'\n        ? parameters.commitments.map((x) => hexToBytes(x))\n        : parameters.commitments);\n    const proofs = [];\n    for (let i = 0; i < blobs.length; i++) {\n        const blob = blobs[i];\n        const commitment = commitments[i];\n        proofs.push(Uint8Array.from(kzg.computeBlobKzgProof(blob, commitment)));\n    }\n    return (to === 'bytes'\n        ? proofs\n        : proofs.map((x) => bytesToHex(x)));\n}\n//# sourceMappingURL=blobsToProofs.js.map","import { exists, output } from './_assert.js';\nimport { Hash, createView, toBytes } from './utils.js';\n// Polyfill for Safari 14\nfunction setBigUint64(view, byteOffset, value, isLE) {\n    if (typeof view.setBigUint64 === 'function')\n        return view.setBigUint64(byteOffset, value, isLE);\n    const _32n = BigInt(32);\n    const _u32_max = BigInt(0xffffffff);\n    const wh = Number((value >> _32n) & _u32_max);\n    const wl = Number(value & _u32_max);\n    const h = isLE ? 4 : 0;\n    const l = isLE ? 0 : 4;\n    view.setUint32(byteOffset + h, wh, isLE);\n    view.setUint32(byteOffset + l, wl, isLE);\n}\n// Base SHA2 class (RFC 6234)\nexport class SHA2 extends Hash {\n    constructor(blockLen, outputLen, padOffset, isLE) {\n        super();\n        this.blockLen = blockLen;\n        this.outputLen = outputLen;\n        this.padOffset = padOffset;\n        this.isLE = isLE;\n        this.finished = false;\n        this.length = 0;\n        this.pos = 0;\n        this.destroyed = false;\n        this.buffer = new Uint8Array(blockLen);\n        this.view = createView(this.buffer);\n    }\n    update(data) {\n        exists(this);\n        const { view, buffer, blockLen } = this;\n        data = toBytes(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            // Fast path: we have at least one block in input, cast it to view and process\n            if (take === blockLen) {\n                const dataView = createView(data);\n                for (; blockLen <= len - pos; pos += blockLen)\n                    this.process(dataView, pos);\n                continue;\n            }\n            buffer.set(data.subarray(pos, pos + take), this.pos);\n            this.pos += take;\n            pos += take;\n            if (this.pos === blockLen) {\n                this.process(view, 0);\n                this.pos = 0;\n            }\n        }\n        this.length += data.length;\n        this.roundClean();\n        return this;\n    }\n    digestInto(out) {\n        exists(this);\n        output(out, this);\n        this.finished = true;\n        // Padding\n        // We can avoid allocation of buffer for padding completely if it\n        // was previously not allocated here. But it won't change performance.\n        const { buffer, view, blockLen, isLE } = this;\n        let { pos } = this;\n        // append the bit '1' to the message\n        buffer[pos++] = 0b10000000;\n        this.buffer.subarray(pos).fill(0);\n        // we have less than padOffset left in buffer, so we cannot put length in current block, need process it and pad again\n        if (this.padOffset > blockLen - pos) {\n            this.process(view, 0);\n            pos = 0;\n        }\n        // Pad until full block byte with zeros\n        for (let i = pos; i < blockLen; i++)\n            buffer[i] = 0;\n        // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n        // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n        // So we just write lowest 64 bits of that value.\n        setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n        this.process(view, 0);\n        const oview = createView(out);\n        const len = this.outputLen;\n        // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\n        if (len % 4)\n            throw new Error('_sha2: outputLen should be aligned to 32bit');\n        const outLen = len / 4;\n        const state = this.get();\n        if (outLen > state.length)\n            throw new Error('_sha2: outputLen bigger than state');\n        for (let i = 0; i < outLen; i++)\n            oview.setUint32(4 * i, state[i], isLE);\n    }\n    digest() {\n        const { buffer, outputLen } = this;\n        this.digestInto(buffer);\n        const res = buffer.slice(0, outputLen);\n        this.destroy();\n        return res;\n    }\n    _cloneInto(to) {\n        to || (to = new this.constructor());\n        to.set(...this.get());\n        const { blockLen, buffer, length, finished, destroyed, pos } = this;\n        to.length = length;\n        to.pos = pos;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        if (length % blockLen)\n            to.buffer.set(buffer);\n        return to;\n    }\n}\n//# sourceMappingURL=_sha2.js.map","import { SHA2 } from './_sha2.js';\nimport { rotr, wrapConstructor } from './utils.js';\n// SHA2-256 need to try 2^128 hashes to execute birthday attack.\n// BTC network is doing 2^67 hashes/sec as per early 2023.\n// Choice: a ? b : c\nconst Chi = (a, b, c) => (a & b) ^ (~a & c);\n// Majority function, true if any two inpust is true\nconst Maj = (a, b, c) => (a & b) ^ (a & c) ^ (b & c);\n// Round constants:\n// first 32 bits of the fractional parts of the cube roots of the first 64 primes 2..311)\n// prettier-ignore\nconst SHA256_K = /* @__PURE__ */ new Uint32Array([\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n// Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n// prettier-ignore\nconst IV = /* @__PURE__ */ new Uint32Array([\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n// Temporary buffer, not used to store anything between runs\n// Named this way because it matches specification.\nconst SHA256_W = /* @__PURE__ */ new Uint32Array(64);\nclass SHA256 extends SHA2 {\n    constructor() {\n        super(64, 32, 8, false);\n        // We cannot use array here since array allows indexing by variable\n        // which means optimizer/compiler cannot use registers.\n        this.A = IV[0] | 0;\n        this.B = IV[1] | 0;\n        this.C = IV[2] | 0;\n        this.D = IV[3] | 0;\n        this.E = IV[4] | 0;\n        this.F = IV[5] | 0;\n        this.G = IV[6] | 0;\n        this.H = IV[7] | 0;\n    }\n    get() {\n        const { A, B, C, D, E, F, G, H } = this;\n        return [A, B, C, D, E, F, G, H];\n    }\n    // prettier-ignore\n    set(A, B, C, D, E, F, G, H) {\n        this.A = A | 0;\n        this.B = B | 0;\n        this.C = C | 0;\n        this.D = D | 0;\n        this.E = E | 0;\n        this.F = F | 0;\n        this.G = G | 0;\n        this.H = H | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4)\n            SHA256_W[i] = view.getUint32(offset, false);\n        for (let i = 16; i < 64; i++) {\n            const W15 = SHA256_W[i - 15];\n            const W2 = SHA256_W[i - 2];\n            const s0 = rotr(W15, 7) ^ rotr(W15, 18) ^ (W15 >>> 3);\n            const s1 = rotr(W2, 17) ^ rotr(W2, 19) ^ (W2 >>> 10);\n            SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n        }\n        // Compression function main loop, 64 rounds\n        let { A, B, C, D, E, F, G, H } = this;\n        for (let i = 0; i < 64; i++) {\n            const sigma1 = rotr(E, 6) ^ rotr(E, 11) ^ rotr(E, 25);\n            const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const sigma0 = rotr(A, 2) ^ rotr(A, 13) ^ rotr(A, 22);\n            const T2 = (sigma0 + Maj(A, B, C)) | 0;\n            H = G;\n            G = F;\n            F = E;\n            E = (D + T1) | 0;\n            D = C;\n            C = B;\n            B = A;\n            A = (T1 + T2) | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        A = (A + this.A) | 0;\n        B = (B + this.B) | 0;\n        C = (C + this.C) | 0;\n        D = (D + this.D) | 0;\n        E = (E + this.E) | 0;\n        F = (F + this.F) | 0;\n        G = (G + this.G) | 0;\n        H = (H + this.H) | 0;\n        this.set(A, B, C, D, E, F, G, H);\n    }\n    roundClean() {\n        SHA256_W.fill(0);\n    }\n    destroy() {\n        this.set(0, 0, 0, 0, 0, 0, 0, 0);\n        this.buffer.fill(0);\n    }\n}\n// Constants from https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf\nclass SHA224 extends SHA256 {\n    constructor() {\n        super();\n        this.A = 0xc1059ed8 | 0;\n        this.B = 0x367cd507 | 0;\n        this.C = 0x3070dd17 | 0;\n        this.D = 0xf70e5939 | 0;\n        this.E = 0xffc00b31 | 0;\n        this.F = 0x68581511 | 0;\n        this.G = 0x64f98fa7 | 0;\n        this.H = 0xbefa4fa4 | 0;\n        this.outputLen = 28;\n    }\n}\n/**\n * SHA2-256 hash function\n * @param message - data that would be hashed\n */\nexport const sha256 = /* @__PURE__ */ wrapConstructor(() => new SHA256());\nexport const sha224 = /* @__PURE__ */ wrapConstructor(() => new SHA224());\n//# sourceMappingURL=sha256.js.map","import { bytesToHex } from '../encoding/toHex.js';\nimport { sha256 } from '../hash/sha256.js';\n/**\n * Transform a commitment to it's versioned hash.\n *\n * @example\n * ```ts\n * import {\n *   blobsToCommitments,\n *   commitmentToVersionedHash,\n *   toBlobs\n * } from 'viem'\n * import { kzg } from './kzg'\n *\n * const blobs = toBlobs({ data: '0x1234' })\n * const [commitment] = blobsToCommitments({ blobs, kzg })\n * const versionedHash = commitmentToVersionedHash({ commitment })\n * ```\n */\nexport function commitmentToVersionedHash(parameters) {\n    const { commitment, version = 1 } = parameters;\n    const to = parameters.to ?? (typeof commitment === 'string' ? 'hex' : 'bytes');\n    const versionedHash = sha256(commitment, 'bytes');\n    versionedHash.set([version], 0);\n    return (to === 'bytes' ? versionedHash : bytesToHex(versionedHash));\n}\n//# sourceMappingURL=commitmentToVersionedHash.js.map","import { sha256 as noble_sha256 } from '@noble/hashes/sha256';\nimport { isHex } from '../data/isHex.js';\nimport { toBytes } from '../encoding/toBytes.js';\nimport { toHex } from '../encoding/toHex.js';\nexport function sha256(value, to_) {\n    const to = to_ || 'hex';\n    const bytes = noble_sha256(isHex(value, { strict: false }) ? toBytes(value) : value);\n    if (to === 'bytes')\n        return bytes;\n    return toHex(bytes);\n}\n//# sourceMappingURL=sha256.js.map","// https://github.com/ethereum/EIPs/blob/master/EIPS/eip-4844.md#parameters\n/** Blob limit per transaction. */\nexport const blobsPerTransaction = 6;\n/** The number of bytes in a BLS scalar field element. */\nexport const bytesPerFieldElement = 32;\n/** The number of field elements in a blob. */\nexport const fieldElementsPerBlob = 4096;\n/** The number of bytes in a blob. */\nexport const bytesPerBlob = bytesPerFieldElement * fieldElementsPerBlob;\n/** Blob bytes limit per transaction. */\nexport const maxBytesPerTransaction = bytesPerBlob * blobsPerTransaction -\n    // terminator byte (0x80).\n    1 -\n    // zero byte (0x00) appended to each field element.\n    1 * fieldElementsPerBlob * blobsPerTransaction;\n//# sourceMappingURL=blob.js.map","// https://github.com/ethereum/EIPs/blob/master/EIPS/eip-4844.md#parameters\n/** The number of bytes in a KZG commitment. */\nexport const bytesPerCommitment = 48;\n/** The number of bytes in a KZG proof. */\nexport const bytesPerProof = 48;\nexport const versionedHashVersionKzg = 1;\n//# sourceMappingURL=kzg.js.map","import { versionedHashVersionKzg } from '../constants/kzg.js';\nimport { BaseError } from './base.js';\nexport class BlobSizeTooLargeError extends BaseError {\n    constructor({ maxSize, size }) {\n        super('Blob size is too large.', {\n            metaMessages: [`Max: ${maxSize} bytes`, `Given: ${size} bytes`],\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'BlobSizeTooLargeError'\n        });\n    }\n}\nexport class EmptyBlobError extends BaseError {\n    constructor() {\n        super('Blob data must not be empty.');\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'EmptyBlobError'\n        });\n    }\n}\nexport class InvalidVersionedHashSizeError extends BaseError {\n    constructor({ hash, size, }) {\n        super(`Versioned hash \"${hash}\" size is invalid.`, {\n            metaMessages: ['Expected: 32', `Received: ${size}`],\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'InvalidVersionedHashSizeError'\n        });\n    }\n}\nexport class InvalidVersionedHashVersionError extends BaseError {\n    constructor({ hash, version, }) {\n        super(`Versioned hash \"${hash}\" version is invalid.`, {\n            metaMessages: [\n                `Expected: ${versionedHashVersionKzg}`,\n                `Received: ${version}`,\n            ],\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'InvalidVersionedHashVersionError'\n        });\n    }\n}\n//# sourceMappingURL=blob.js.map","import { blobsToCommitments, } from './blobsToCommitments.js';\nimport { blobsToProofs } from './blobsToProofs.js';\nimport { toBlobs } from './toBlobs.js';\n/**\n * Transforms arbitrary data (or blobs, commitments, & proofs) into a sidecar array.\n *\n * @example\n * ```ts\n * import { toBlobSidecars, stringToHex } from 'viem'\n *\n * const sidecars = toBlobSidecars({ data: stringToHex('hello world') })\n * ```\n *\n * @example\n * ```ts\n * import {\n *   blobsToCommitments,\n *   toBlobs,\n *   blobsToProofs,\n *   toBlobSidecars,\n *   stringToHex\n * } from 'viem'\n *\n * const blobs = toBlobs({ data: stringToHex('hello world') })\n * const commitments = blobsToCommitments({ blobs, kzg })\n * const proofs = blobsToProofs({ blobs, commitments, kzg })\n *\n * const sidecars = toBlobSidecars({ blobs, commitments, proofs })\n * ```\n */\nexport function toBlobSidecars(parameters) {\n    const { data, kzg, to } = parameters;\n    const blobs = parameters.blobs ?? toBlobs({ data: data, to });\n    const commitments = parameters.commitments ?? blobsToCommitments({ blobs, kzg: kzg, to });\n    const proofs = parameters.proofs ?? blobsToProofs({ blobs, commitments, kzg: kzg, to });\n    const sidecars = [];\n    for (let i = 0; i < blobs.length; i++)\n        sidecars.push({\n            blob: blobs[i],\n            commitment: commitments[i],\n            proof: proofs[i],\n        });\n    return sidecars;\n}\n//# sourceMappingURL=toBlobSidecars.js.map","import { bytesPerBlob, bytesPerFieldElement, fieldElementsPerBlob, maxBytesPerTransaction, } from '../../constants/blob.js';\nimport { BlobSizeTooLargeError, EmptyBlobError, } from '../../errors/blob.js';\nimport { createCursor } from '../cursor.js';\nimport { size } from '../data/size.js';\nimport { hexToBytes } from '../encoding/toBytes.js';\nimport { bytesToHex } from '../encoding/toHex.js';\n/**\n * Transforms arbitrary data to blobs.\n *\n * @example\n * ```ts\n * import { toBlobs, stringToHex } from 'viem'\n *\n * const blobs = toBlobs({ data: stringToHex('hello world') })\n * ```\n */\nexport function toBlobs(parameters) {\n    const to = parameters.to ?? (typeof parameters.data === 'string' ? 'hex' : 'bytes');\n    const data = (typeof parameters.data === 'string'\n        ? hexToBytes(parameters.data)\n        : parameters.data);\n    const size_ = size(data);\n    if (!size_)\n        throw new EmptyBlobError();\n    if (size_ > maxBytesPerTransaction)\n        throw new BlobSizeTooLargeError({\n            maxSize: maxBytesPerTransaction,\n            size: size_,\n        });\n    const blobs = [];\n    let active = true;\n    let position = 0;\n    while (active) {\n        const blob = createCursor(new Uint8Array(bytesPerBlob));\n        let size = 0;\n        while (size < fieldElementsPerBlob) {\n            const bytes = data.slice(position, position + (bytesPerFieldElement - 1));\n            // Push a zero byte so the field element doesn't overflow the BLS modulus.\n            blob.pushByte(0x00);\n            // Push the current segment of data bytes.\n            blob.pushBytes(bytes);\n            // If we detect that the current segment of data bytes is less than 31 bytes,\n            // we can stop processing and push a terminator byte to indicate the end of the blob.\n            if (bytes.length < 31) {\n                blob.pushByte(0x80);\n                active = false;\n                break;\n            }\n            size++;\n            position += 31;\n        }\n        blobs.push(blob);\n    }\n    return (to === 'bytes'\n        ? blobs.map((x) => x.bytes)\n        : blobs.map((x) => bytesToHex(x.bytes)));\n}\n//# sourceMappingURL=toBlobs.js.map","import { BaseError } from './base.js';\nexport class ChainDoesNotSupportContract extends BaseError {\n    constructor({ blockNumber, chain, contract, }) {\n        super(`Chain \"${chain.name}\" does not support contract \"${contract.name}\".`, {\n            metaMessages: [\n                'This could be due to any of the following:',\n                ...(blockNumber &&\n                    contract.blockCreated &&\n                    contract.blockCreated > blockNumber\n                    ? [\n                        `- The contract \"${contract.name}\" was not deployed until block ${contract.blockCreated} (current block ${blockNumber}).`,\n                    ]\n                    : [\n                        `- The chain does not have the contract \"${contract.name}\" configured.`,\n                    ]),\n            ],\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'ChainDoesNotSupportContract'\n        });\n    }\n}\nexport class ChainMismatchError extends BaseError {\n    constructor({ chain, currentChainId, }) {\n        super(`The current chain of the wallet (id: ${currentChainId}) does not match the target chain for the transaction (id: ${chain.id} – ${chain.name}).`, {\n            metaMessages: [\n                `Current Chain ID:  ${currentChainId}`,\n                `Expected Chain ID: ${chain.id} – ${chain.name}`,\n            ],\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'ChainMismatchError'\n        });\n    }\n}\nexport class ChainNotFoundError extends BaseError {\n    constructor() {\n        super([\n            'No chain was provided to the request.',\n            'Please provide a chain with the `chain` argument on the Action, or by supplying a `chain` to WalletClient.',\n        ].join('\\n'));\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'ChainNotFoundError'\n        });\n    }\n}\nexport class ClientChainNotConfiguredError extends BaseError {\n    constructor() {\n        super('No chain was provided to the Client.');\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'ClientChainNotConfiguredError'\n        });\n    }\n}\nexport class InvalidChainIdError extends BaseError {\n    constructor({ chainId }) {\n        super(typeof chainId === 'number'\n            ? `Chain ID \"${chainId}\" is invalid.`\n            : 'Chain ID is invalid.');\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'InvalidChainIdError'\n        });\n    }\n}\n//# sourceMappingURL=chain.js.map","export const etherUnits = {\n    gwei: 9,\n    wei: 18,\n};\nexport const gweiUnits = {\n    ether: -9,\n    wei: 9,\n};\nexport const weiUnits = {\n    ether: -18,\n    gwei: -9,\n};\n//# sourceMappingURL=unit.js.map","import { gweiUnits } from '../../constants/unit.js';\nimport { formatUnits } from './formatUnits.js';\n/**\n * Converts numerical wei to a string representation of gwei.\n *\n * - Docs: https://viem.sh/docs/utilities/formatGwei\n *\n * @example\n * import { formatGwei } from 'viem'\n *\n * formatGwei(1000000000n)\n * // '1'\n */\nexport function formatGwei(wei, unit = 'wei') {\n    return formatUnits(wei, gweiUnits[unit]);\n}\n//# sourceMappingURL=formatGwei.js.map","/**\n *  Divides a number by a given exponent of base 10 (10exponent), and formats it into a string representation of the number..\n *\n * - Docs: https://viem.sh/docs/utilities/formatUnits\n *\n * @example\n * import { formatUnits } from 'viem'\n *\n * formatUnits(420000000000n, 9)\n * // '420'\n */\nexport function formatUnits(value, decimals) {\n    let display = value.toString();\n    const negative = display.startsWith('-');\n    if (negative)\n        display = display.slice(1);\n    display = display.padStart(decimals, '0');\n    let [integer, fraction] = [\n        display.slice(0, display.length - decimals),\n        display.slice(display.length - decimals),\n    ];\n    fraction = fraction.replace(/(0+)$/, '');\n    return `${negative ? '-' : ''}${integer || '0'}${fraction ? `.${fraction}` : ''}`;\n}\n//# sourceMappingURL=formatUnits.js.map","import { formatGwei } from '../utils/unit/formatGwei.js';\nimport { BaseError } from './base.js';\nexport class ExecutionRevertedError extends BaseError {\n    constructor({ cause, message, } = {}) {\n        const reason = message\n            ?.replace('execution reverted: ', '')\n            ?.replace('execution reverted', '');\n        super(`Execution reverted ${reason ? `with reason: ${reason}` : 'for an unknown reason'}.`, {\n            cause,\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'ExecutionRevertedError'\n        });\n    }\n}\nObject.defineProperty(ExecutionRevertedError, \"code\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: 3\n});\nObject.defineProperty(ExecutionRevertedError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /execution reverted/\n});\nexport class FeeCapTooHighError extends BaseError {\n    constructor({ cause, maxFeePerGas, } = {}) {\n        super(`The fee cap (\\`maxFeePerGas\\`${maxFeePerGas ? ` = ${formatGwei(maxFeePerGas)} gwei` : ''}) cannot be higher than the maximum allowed value (2^256-1).`, {\n            cause,\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'FeeCapTooHigh'\n        });\n    }\n}\nObject.defineProperty(FeeCapTooHighError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /max fee per gas higher than 2\\^256-1|fee cap higher than 2\\^256-1/\n});\nexport class FeeCapTooLowError extends BaseError {\n    constructor({ cause, maxFeePerGas, } = {}) {\n        super(`The fee cap (\\`maxFeePerGas\\`${maxFeePerGas ? ` = ${formatGwei(maxFeePerGas)}` : ''} gwei) cannot be lower than the block base fee.`, {\n            cause,\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'FeeCapTooLow'\n        });\n    }\n}\nObject.defineProperty(FeeCapTooLowError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /max fee per gas less than block base fee|fee cap less than block base fee|transaction is outdated/\n});\nexport class NonceTooHighError extends BaseError {\n    constructor({ cause, nonce, } = {}) {\n        super(`Nonce provided for the transaction ${nonce ? `(${nonce}) ` : ''}is higher than the next one expected.`, { cause });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'NonceTooHighError'\n        });\n    }\n}\nObject.defineProperty(NonceTooHighError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /nonce too high/\n});\nexport class NonceTooLowError extends BaseError {\n    constructor({ cause, nonce, } = {}) {\n        super([\n            `Nonce provided for the transaction ${nonce ? `(${nonce}) ` : ''}is lower than the current nonce of the account.`,\n            'Try increasing the nonce or find the latest nonce with `getTransactionCount`.',\n        ].join('\\n'), { cause });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'NonceTooLowError'\n        });\n    }\n}\nObject.defineProperty(NonceTooLowError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /nonce too low|transaction already imported|already known/\n});\nexport class NonceMaxValueError extends BaseError {\n    constructor({ cause, nonce, } = {}) {\n        super(`Nonce provided for the transaction ${nonce ? `(${nonce}) ` : ''}exceeds the maximum allowed nonce.`, { cause });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'NonceMaxValueError'\n        });\n    }\n}\nObject.defineProperty(NonceMaxValueError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /nonce has max value/\n});\nexport class InsufficientFundsError extends BaseError {\n    constructor({ cause } = {}) {\n        super([\n            'The total cost (gas * gas fee + value) of executing this transaction exceeds the balance of the account.',\n        ].join('\\n'), {\n            cause,\n            metaMessages: [\n                'This error could arise when the account does not have enough funds to:',\n                ' - pay for the total gas fee,',\n                ' - pay for the value to send.',\n                ' ',\n                'The cost of the transaction is calculated as `gas * gas fee + value`, where:',\n                ' - `gas` is the amount of gas needed for transaction to execute,',\n                ' - `gas fee` is the gas fee,',\n                ' - `value` is the amount of ether to send to the recipient.',\n            ],\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'InsufficientFundsError'\n        });\n    }\n}\nObject.defineProperty(InsufficientFundsError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /insufficient funds/\n});\nexport class IntrinsicGasTooHighError extends BaseError {\n    constructor({ cause, gas, } = {}) {\n        super(`The amount of gas ${gas ? `(${gas}) ` : ''}provided for the transaction exceeds the limit allowed for the block.`, {\n            cause,\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'IntrinsicGasTooHighError'\n        });\n    }\n}\nObject.defineProperty(IntrinsicGasTooHighError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /intrinsic gas too high|gas limit reached/\n});\nexport class IntrinsicGasTooLowError extends BaseError {\n    constructor({ cause, gas, } = {}) {\n        super(`The amount of gas ${gas ? `(${gas}) ` : ''}provided for the transaction is too low.`, {\n            cause,\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'IntrinsicGasTooLowError'\n        });\n    }\n}\nObject.defineProperty(IntrinsicGasTooLowError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /intrinsic gas too low/\n});\nexport class TransactionTypeNotSupportedError extends BaseError {\n    constructor({ cause }) {\n        super('The transaction type is not supported for this chain.', {\n            cause,\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'TransactionTypeNotSupportedError'\n        });\n    }\n}\nObject.defineProperty(TransactionTypeNotSupportedError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /transaction type not valid/\n});\nexport class TipAboveFeeCapError extends BaseError {\n    constructor({ cause, maxPriorityFeePerGas, maxFeePerGas, } = {}) {\n        super([\n            `The provided tip (\\`maxPriorityFeePerGas\\`${maxPriorityFeePerGas\n                ? ` = ${formatGwei(maxPriorityFeePerGas)} gwei`\n                : ''}) cannot be higher than the fee cap (\\`maxFeePerGas\\`${maxFeePerGas ? ` = ${formatGwei(maxFeePerGas)} gwei` : ''}).`,\n        ].join('\\n'), {\n            cause,\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'TipAboveFeeCapError'\n        });\n    }\n}\nObject.defineProperty(TipAboveFeeCapError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /max priority fee per gas higher than max fee per gas|tip higher than fee cap/\n});\nexport class UnknownNodeError extends BaseError {\n    constructor({ cause }) {\n        super(`An error occurred while executing: ${cause?.shortMessage}`, {\n            cause,\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'UnknownNodeError'\n        });\n    }\n}\n//# sourceMappingURL=node.js.map","import { versionedHashVersionKzg } from '../../constants/kzg.js';\nimport { InvalidAddressError, } from '../../errors/address.js';\nimport { BaseError } from '../../errors/base.js';\nimport { EmptyBlobError, InvalidVersionedHashSizeError, InvalidVersionedHashVersionError, } from '../../errors/blob.js';\nimport { InvalidChainIdError, } from '../../errors/chain.js';\nimport { FeeCapTooHighError, TipAboveFeeCapError, } from '../../errors/node.js';\nimport { isAddress } from '../address/isAddress.js';\nimport { size } from '../data/size.js';\nimport { slice } from '../data/slice.js';\nimport { hexToNumber } from '../encoding/fromHex.js';\nexport function assertTransactionEIP4844(transaction) {\n    const { blobVersionedHashes } = transaction;\n    if (blobVersionedHashes) {\n        if (blobVersionedHashes.length === 0)\n            throw new EmptyBlobError();\n        for (const hash of blobVersionedHashes) {\n            const size_ = size(hash);\n            const version = hexToNumber(slice(hash, 0, 1));\n            if (size_ !== 32)\n                throw new InvalidVersionedHashSizeError({ hash, size: size_ });\n            if (version !== versionedHashVersionKzg)\n                throw new InvalidVersionedHashVersionError({\n                    hash,\n                    version,\n                });\n        }\n    }\n    assertTransactionEIP1559(transaction);\n}\nexport function assertTransactionEIP1559(transaction) {\n    const { chainId, maxPriorityFeePerGas, maxFeePerGas, to } = transaction;\n    if (chainId <= 0)\n        throw new InvalidChainIdError({ chainId });\n    if (to && !isAddress(to))\n        throw new InvalidAddressError({ address: to });\n    if (maxFeePerGas && maxFeePerGas > 2n ** 256n - 1n)\n        throw new FeeCapTooHighError({ maxFeePerGas });\n    if (maxPriorityFeePerGas &&\n        maxFeePerGas &&\n        maxPriorityFeePerGas > maxFeePerGas)\n        throw new TipAboveFeeCapError({ maxFeePerGas, maxPriorityFeePerGas });\n}\nexport function assertTransactionEIP2930(transaction) {\n    const { chainId, maxPriorityFeePerGas, gasPrice, maxFeePerGas, to } = transaction;\n    if (chainId <= 0)\n        throw new InvalidChainIdError({ chainId });\n    if (to && !isAddress(to))\n        throw new InvalidAddressError({ address: to });\n    if (maxPriorityFeePerGas || maxFeePerGas)\n        throw new BaseError('`maxFeePerGas`/`maxPriorityFeePerGas` is not a valid EIP-2930 Transaction attribute.');\n    if (gasPrice && gasPrice > 2n ** 256n - 1n)\n        throw new FeeCapTooHighError({ maxFeePerGas: gasPrice });\n}\nexport function assertTransactionLegacy(transaction) {\n    const { chainId, maxPriorityFeePerGas, gasPrice, maxFeePerGas, to, accessList, } = transaction;\n    if (to && !isAddress(to))\n        throw new InvalidAddressError({ address: to });\n    if (typeof chainId !== 'undefined' && chainId <= 0)\n        throw new InvalidChainIdError({ chainId });\n    if (maxPriorityFeePerGas || maxFeePerGas)\n        throw new BaseError('`maxFeePerGas`/`maxPriorityFeePerGas` is not a valid Legacy Transaction attribute.');\n    if (gasPrice && gasPrice > 2n ** 256n - 1n)\n        throw new FeeCapTooHighError({ maxFeePerGas: gasPrice });\n    if (accessList)\n        throw new BaseError('`accessList` is not a valid Legacy Transaction attribute.');\n}\n//# sourceMappingURL=assertTransaction.js.map","import { InvalidAddressError, } from '../../errors/address.js';\nimport { InvalidStorageKeySizeError, } from '../../errors/transaction.js';\nimport { isAddress } from '../address/isAddress.js';\n/*\n * Serialize an  EIP-2930 access list\n * @remarks\n * Use to create a transaction serializer with support for EIP-2930 access lists\n *\n * @param accessList - Array of objects of address and arrays of Storage Keys\n * @throws InvalidAddressError, InvalidStorageKeySizeError\n * @returns Array of hex strings\n */\nexport function serializeAccessList(accessList) {\n    if (!accessList || accessList.length === 0)\n        return [];\n    const serializedAccessList = [];\n    for (let i = 0; i < accessList.length; i++) {\n        const { address, storageKeys } = accessList[i];\n        for (let j = 0; j < storageKeys.length; j++) {\n            if (storageKeys[j].length - 2 !== 64) {\n                throw new InvalidStorageKeySizeError({ storageKey: storageKeys[j] });\n            }\n        }\n        if (!isAddress(address, { strict: false })) {\n            throw new InvalidAddressError({ address });\n        }\n        serializedAccessList.push([address, storageKeys]);\n    }\n    return serializedAccessList;\n}\n//# sourceMappingURL=serializeAccessList.js.map","import { InvalidLegacyVError, } from '../../errors/transaction.js';\nimport { blobsToCommitments, } from '../blob/blobsToCommitments.js';\nimport { blobsToProofs, } from '../blob/blobsToProofs.js';\nimport { commitmentsToVersionedHashes, } from '../blob/commitmentsToVersionedHashes.js';\nimport { toBlobSidecars, } from '../blob/toBlobSidecars.js';\nimport { concatHex } from '../data/concat.js';\nimport { trim } from '../data/trim.js';\nimport { bytesToHex, toHex } from '../encoding/toHex.js';\nimport { toRlp } from '../encoding/toRlp.js';\nimport { assertTransactionEIP1559, assertTransactionEIP2930, assertTransactionEIP4844, assertTransactionLegacy, } from './assertTransaction.js';\nimport { getTransactionType, } from './getTransactionType.js';\nimport { serializeAccessList, } from './serializeAccessList.js';\nexport function serializeTransaction(transaction, signature) {\n    const type = getTransactionType(transaction);\n    if (type === 'eip1559')\n        return serializeTransactionEIP1559(transaction, signature);\n    if (type === 'eip2930')\n        return serializeTransactionEIP2930(transaction, signature);\n    if (type === 'eip4844')\n        return serializeTransactionEIP4844(transaction, signature);\n    return serializeTransactionLegacy(transaction, signature);\n}\nfunction serializeTransactionEIP4844(transaction, signature) {\n    const { chainId, gas, nonce, to, value, maxFeePerBlobGas, maxFeePerGas, maxPriorityFeePerGas, accessList, data, } = transaction;\n    assertTransactionEIP4844(transaction);\n    let blobVersionedHashes = transaction.blobVersionedHashes;\n    let sidecars = transaction.sidecars;\n    // If `blobs` are passed, we will need to compute the KZG commitments & proofs.\n    if (transaction.blobs &&\n        (typeof blobVersionedHashes === 'undefined' ||\n            typeof sidecars === 'undefined')) {\n        const blobs = (typeof transaction.blobs[0] === 'string'\n            ? transaction.blobs\n            : transaction.blobs.map((x) => bytesToHex(x)));\n        const kzg = transaction.kzg;\n        const commitments = blobsToCommitments({\n            blobs,\n            kzg,\n        });\n        if (typeof blobVersionedHashes === 'undefined')\n            blobVersionedHashes = commitmentsToVersionedHashes({\n                commitments,\n            });\n        if (typeof sidecars === 'undefined') {\n            const proofs = blobsToProofs({ blobs, commitments, kzg });\n            sidecars = toBlobSidecars({ blobs, commitments, proofs });\n        }\n    }\n    const serializedAccessList = serializeAccessList(accessList);\n    const serializedTransaction = [\n        toHex(chainId),\n        nonce ? toHex(nonce) : '0x',\n        maxPriorityFeePerGas ? toHex(maxPriorityFeePerGas) : '0x',\n        maxFeePerGas ? toHex(maxFeePerGas) : '0x',\n        gas ? toHex(gas) : '0x',\n        to ?? '0x',\n        value ? toHex(value) : '0x',\n        data ?? '0x',\n        serializedAccessList,\n        maxFeePerBlobGas ? toHex(maxFeePerBlobGas) : '0x',\n        blobVersionedHashes ?? [],\n        ...toYParitySignatureArray(transaction, signature),\n    ];\n    const blobs = [];\n    const commitments = [];\n    const proofs = [];\n    if (sidecars)\n        for (let i = 0; i < sidecars.length; i++) {\n            const { blob, commitment, proof } = sidecars[i];\n            blobs.push(blob);\n            commitments.push(commitment);\n            proofs.push(proof);\n        }\n    return concatHex([\n        '0x03',\n        sidecars\n            ? // If sidecars are enabled, envelope turns into a \"wrapper\":\n                toRlp([serializedTransaction, blobs, commitments, proofs])\n            : // If sidecars are disabled, standard envelope is used:\n                toRlp(serializedTransaction),\n    ]);\n}\nfunction serializeTransactionEIP1559(transaction, signature) {\n    const { chainId, gas, nonce, to, value, maxFeePerGas, maxPriorityFeePerGas, accessList, data, } = transaction;\n    assertTransactionEIP1559(transaction);\n    const serializedAccessList = serializeAccessList(accessList);\n    const serializedTransaction = [\n        toHex(chainId),\n        nonce ? toHex(nonce) : '0x',\n        maxPriorityFeePerGas ? toHex(maxPriorityFeePerGas) : '0x',\n        maxFeePerGas ? toHex(maxFeePerGas) : '0x',\n        gas ? toHex(gas) : '0x',\n        to ?? '0x',\n        value ? toHex(value) : '0x',\n        data ?? '0x',\n        serializedAccessList,\n        ...toYParitySignatureArray(transaction, signature),\n    ];\n    return concatHex([\n        '0x02',\n        toRlp(serializedTransaction),\n    ]);\n}\nfunction serializeTransactionEIP2930(transaction, signature) {\n    const { chainId, gas, data, nonce, to, value, accessList, gasPrice } = transaction;\n    assertTransactionEIP2930(transaction);\n    const serializedAccessList = serializeAccessList(accessList);\n    const serializedTransaction = [\n        toHex(chainId),\n        nonce ? toHex(nonce) : '0x',\n        gasPrice ? toHex(gasPrice) : '0x',\n        gas ? toHex(gas) : '0x',\n        to ?? '0x',\n        value ? toHex(value) : '0x',\n        data ?? '0x',\n        serializedAccessList,\n        ...toYParitySignatureArray(transaction, signature),\n    ];\n    return concatHex([\n        '0x01',\n        toRlp(serializedTransaction),\n    ]);\n}\nfunction serializeTransactionLegacy(transaction, signature) {\n    const { chainId = 0, gas, data, nonce, to, value, gasPrice } = transaction;\n    assertTransactionLegacy(transaction);\n    let serializedTransaction = [\n        nonce ? toHex(nonce) : '0x',\n        gasPrice ? toHex(gasPrice) : '0x',\n        gas ? toHex(gas) : '0x',\n        to ?? '0x',\n        value ? toHex(value) : '0x',\n        data ?? '0x',\n    ];\n    if (signature) {\n        const v = (() => {\n            // EIP-155 (inferred chainId)\n            if (signature.v >= 35n) {\n                const inferredChainId = (signature.v - 35n) / 2n;\n                if (inferredChainId > 0)\n                    return signature.v;\n                return 27n + (signature.v === 35n ? 0n : 1n);\n            }\n            // EIP-155 (explicit chainId)\n            if (chainId > 0)\n                return BigInt(chainId * 2) + BigInt(35n + signature.v - 27n);\n            // Pre-EIP-155 (no chainId)\n            const v = 27n + (signature.v === 27n ? 0n : 1n);\n            if (signature.v !== v)\n                throw new InvalidLegacyVError({ v: signature.v });\n            return v;\n        })();\n        serializedTransaction = [\n            ...serializedTransaction,\n            toHex(v),\n            signature.r,\n            signature.s,\n        ];\n    }\n    else if (chainId > 0) {\n        serializedTransaction = [\n            ...serializedTransaction,\n            toHex(chainId),\n            '0x',\n            '0x',\n        ];\n    }\n    return toRlp(serializedTransaction);\n}\nexport function toYParitySignatureArray(transaction, signature) {\n    const { r, s, v, yParity } = signature ?? transaction;\n    if (typeof r === 'undefined')\n        return [];\n    if (typeof s === 'undefined')\n        return [];\n    if (typeof v === 'undefined' && typeof yParity === 'undefined')\n        return [];\n    const yParity_ = (() => {\n        if (typeof yParity === 'number')\n            return yParity ? toHex(1) : '0x';\n        if (v === 0n)\n            return '0x';\n        if (v === 1n)\n            return toHex(1);\n        return v === 27n ? '0x' : toHex(1);\n    })();\n    return [yParity_, trim(r), trim(s)];\n}\n//# sourceMappingURL=serializeTransaction.js.map","import { InvalidSerializableTransactionError, } from '../../errors/transaction.js';\nexport function getTransactionType(transaction) {\n    if (transaction.type)\n        return transaction.type;\n    if (typeof transaction.blobs !== 'undefined' ||\n        typeof transaction.blobVersionedHashes !== 'undefined' ||\n        typeof transaction.maxFeePerBlobGas !== 'undefined' ||\n        typeof transaction.sidecars !== 'undefined')\n        return 'eip4844';\n    if (typeof transaction.maxFeePerGas !== 'undefined' ||\n        typeof transaction.maxPriorityFeePerGas !== 'undefined') {\n        return 'eip1559';\n    }\n    if (typeof transaction.gasPrice !== 'undefined') {\n        if (typeof transaction.accessList !== 'undefined')\n            return 'eip2930';\n        return 'legacy';\n    }\n    throw new InvalidSerializableTransactionError({ transaction });\n}\n//# sourceMappingURL=getTransactionType.js.map","import { commitmentToVersionedHash, } from './commitmentToVersionedHash.js';\n/**\n * Transform a list of commitments to their versioned hashes.\n *\n * @example\n * ```ts\n * import {\n *   blobsToCommitments,\n *   commitmentsToVersionedHashes,\n *   toBlobs\n * } from 'viem'\n * import { kzg } from './kzg'\n *\n * const blobs = toBlobs({ data: '0x1234' })\n * const commitments = blobsToCommitments({ blobs, kzg })\n * const versionedHashes = commitmentsToVersionedHashes({ commitments })\n * ```\n */\nexport function commitmentsToVersionedHashes(parameters) {\n    const { commitments, version } = parameters;\n    const to = parameters.to ?? (typeof commitments[0] === 'string' ? 'hex' : 'bytes');\n    const hashes = [];\n    for (const commitment of commitments) {\n        hashes.push(commitmentToVersionedHash({\n            commitment,\n            to,\n            version,\n        }));\n    }\n    return hashes;\n}\n//# sourceMappingURL=commitmentsToVersionedHashes.js.map","import { contracts } from './contracts.js';\nimport { formatters } from './formatters.js';\nimport { serializers } from './serializers.js';\nexport const chainConfig = {\n    contracts,\n    formatters,\n    serializers,\n};\n//# sourceMappingURL=chainConfig.js.map",null,"import { InvalidAddressError } from '../errors/address.js';\nimport { isAddress } from '../utils/address/isAddress.js';\nimport { concatHex } from '../utils/data/concat.js';\nimport { toHex } from '../utils/encoding/toHex.js';\nimport { toRlp } from '../utils/encoding/toRlp.js';\nimport { serializeTransaction as serializeTransaction_, } from '../utils/transaction/serializeTransaction.js';\nexport function serializeTransaction(transaction, signature) {\n    if (isDeposit(transaction))\n        return serializeTransactionDeposit(transaction);\n    return serializeTransaction_(transaction, signature);\n}\nexport const serializers = {\n    transaction: serializeTransaction,\n};\nfunction serializeTransactionDeposit(transaction) {\n    assertTransactionDeposit(transaction);\n    const { sourceHash, data, from, gas, isSystemTx, mint, to, value } = transaction;\n    const serializedTransaction = [\n        sourceHash,\n        from,\n        to ?? '0x',\n        mint ? toHex(mint) : '0x',\n        value ? toHex(value) : '0x',\n        gas ? toHex(gas) : '0x',\n        isSystemTx ? '0x1' : '0x',\n        data ?? '0x',\n    ];\n    return concatHex([\n        '0x7e',\n        toRlp(serializedTransaction),\n    ]);\n}\nfunction isDeposit(transaction) {\n    if (transaction.type === 'deposit')\n        return true;\n    if (typeof transaction.sourceHash !== 'undefined')\n        return true;\n    return false;\n}\nexport function assertTransactionDeposit(transaction) {\n    const { from, to } = transaction;\n    if (from && !isAddress(from))\n        throw new InvalidAddressError({ address: from });\n    if (to && !isAddress(to))\n        throw new InvalidAddressError({ address: to });\n}\n//# sourceMappingURL=serializers.js.map","import { chainConfig } from '../../op-stack/chainConfig.js';\nimport { defineChain } from '../../utils/chain/defineChain.js';\nconst sourceId = 1; // mainnet\nexport const optimism = /*#__PURE__*/ defineChain({\n    ...chainConfig,\n    id: 10,\n    name: 'OP Mainnet',\n    nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://mainnet.optimism.io'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Optimism Explorer',\n            url: 'https://optimistic.etherscan.io',\n            apiUrl: 'https://api-optimistic.etherscan.io/api',\n        },\n    },\n    contracts: {\n        ...chainConfig.contracts,\n        l2OutputOracle: {\n            [sourceId]: {\n                address: '0xdfe97868233d1aa22e815a266982f2cf17685a27',\n            },\n        },\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n            blockCreated: 4286263,\n        },\n        portal: {\n            [sourceId]: {\n                address: '0xbEb5Fc579115071764c7423A4f12eDde41f106Ed',\n            },\n        },\n        l1StandardBridge: {\n            [sourceId]: {\n                address: '0x99C9fc46f92E8a1c0deC1b1747d010903E884bE1',\n            },\n        },\n    },\n    sourceId,\n});\n//# sourceMappingURL=optimism.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const sepolia = /*#__PURE__*/ defineChain({\n    id: 11_155_111,\n    name: 'Sepolia',\n    nativeCurrency: { name: 'Sepolia Ether', symbol: 'ETH', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc.sepolia.org'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Etherscan',\n            url: 'https://sepolia.etherscan.io',\n            apiUrl: 'https://api-sepolia.etherscan.io/api',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n            blockCreated: 751532,\n        },\n        ensRegistry: { address: '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e' },\n        ensUniversalResolver: {\n            address: '0xc8Af999e38273D658BE1b921b88A9Ddf005769cC',\n            blockCreated: 5_317_080,\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=sepolia.js.map"],"names":["defineChain","chain","formatters","undefined","fees","serializers","mainnet","id","name","nativeCurrency","symbol","decimals","rpcUrls","default","http","blockExplorers","url","apiUrl","contracts","ensRegistry","address","ensUniversalResolver","blockCreated","multicall3","defineFormatter","type","format","exclude","overrides","args","formatted","key","transactionType","formatTransaction","transaction","transaction_","blockHash","blockNumber","BigInt","chainId","gas","gasPrice","maxFeePerBlobGas","maxFeePerGas","maxPriorityFeePerGas","nonce","to","transactionIndex","Number","typeHex","value","v","yParity","accessList","defineTransaction","formatBlock","block","transactions","map","baseFeePerGas","blobGasUsed","difficulty","excessBlobGas","gasLimit","gasUsed","hash","logsBloom","number","size","timestamp","totalDifficulty","defineBlock","receiptStatuses","formatTransactionReceipt","transactionReceipt","receipt","contractAddress","cumulativeGasUsed","effectiveGasPrice","logs","log","eventName","logIndex","transactionHash","formatLog","status","blobGasPrice","defineTransactionReceipt","isSystemTx","mint","sourceHash","stateRoot","l1GasPrice","l1GasUsed","l1Fee","l1FeeScalar","InvalidAddressError","constructor","super","metaMessages","Object","defineProperty","this","enumerable","configurable","writable","addressRegex","isAddressCache","isAddress","options","strict","cacheKey","has","get","result","test","toLowerCase","set","concatHex","values","reduce","acc","x","replace","toRlp","bytes","encodable","getEncodable","cursor","Uint8Array","length","encode","Array","isArray","list","bodyLength","sizeOfBodyLength","getSizeOfLength","pushByte","pushUint8","pushUint16","pushUint24","pushUint32","getEncodableList","bytesOrHex","sizeOfBytesLength","pushBytes","getEncodableBytes","prettyPrint","entries","filter","Boolean","maxLength","Math","max","padEnd","join","InvalidLegacyVError","InvalidSerializableTransactionError","InvalidStorageKeySizeError","storageKey","floor","blobsToCommitments","parameters","kzg","blobs","commitments","blob","push","from","blobToKzgCommitment","blobsToProofs","proofs","i","commitment","computeBlobKzgProof","SHA2","blockLen","outputLen","padOffset","isLE","finished","pos","destroyed","buffer","view","update","data","len","take","min","subarray","process","dataView","roundClean","digestInto","out","fill","byteOffset","setBigUint64","_32n","_u32_max","wh","wl","h","l","setUint32","oview","Error","outLen","state","digest","res","slice","destroy","_cloneInto","Maj","a","b","c","SHA256_K","Uint32Array","IV","SHA256_W","SHA256","A","B","C","D","E","F","G","H","offset","getUint32","W15","W2","s0","s1","T1","T2","sha256","commitmentToVersionedHash","version","versionedHash","to_","isHex","toBytes","toHex","bytesPerFieldElement","fieldElementsPerBlob","bytesPerBlob","maxBytesPerTransaction","versionedHashVersionKzg","BlobSizeTooLargeError","maxSize","EmptyBlobError","InvalidVersionedHashSizeError","InvalidVersionedHashVersionError","toBlobSidecars","size_","active","position","toBlobs","sidecars","proof","InvalidChainIdError","gweiUnits","ether","wei","unit","display","toString","negative","startsWith","padStart","integer","fraction","formatUnits","ExecutionRevertedError","cause","message","reason","FeeCapTooHighError","FeeCapTooLowError","NonceTooHighError","NonceTooLowError","NonceMaxValueError","InsufficientFundsError","IntrinsicGasTooHighError","IntrinsicGasTooLowError","TransactionTypeNotSupportedError","TipAboveFeeCapError","assertTransactionEIP1559","serializeAccessList","serializedAccessList","storageKeys","j","serializeTransaction","signature","blobVersionedHashes","getTransactionType","serializedTransaction","toYParitySignatureArray","serializeTransactionEIP1559","assertTransactionEIP2930","serializeTransactionEIP2930","assertTransactionEIP4844","hashes","commitmentsToVersionedHashes","serializeTransactionEIP4844","assertTransactionLegacy","r","s","serializeTransactionLegacy","trim","chainConfig","gasPriceOracle","l1Block","l2CrossDomainMessenger","l2Erc721Bridge","l2StandardBridge","l2ToL1MessagePasser","isDeposit","assertTransactionDeposit","serializeTransactionDeposit","optimism","l2OutputOracle","portal","l1StandardBridge","sourceId","sepolia","testnet"],"sourceRoot":""}